2024-04-16 23:40:51 Starting PayApplication using Java 17.0.5 with PID 45082 (/Users/yh/AndroidStudioProjects/spzx-parent/spzx-service/service-pay/build/classes/java/main started by yh in /Users/yh/AndroidStudioProjects/spzx-parent)
2024-04-16 23:40:51 The following 1 profile is active: "dev"
2024-04-16 23:40:52 Multiple Spring Data modules found, entering strict repository configuration mode
2024-04-16 23:40:52 Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2024-04-16 23:40:52 Finished Spring Data repository scanning in 8 ms. Found 0 Redis repository interfaces.
2024-04-16 23:40:52 BeanFactory id=a26be8f9-0a0b-39e4-ada9-c7a86be63bf9
2024-04-16 23:40:52 Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$DeferringLoadBalancerInterceptorConfig' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$DeferringLoadBalancerInterceptorConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [lbRestClientPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.
2024-04-16 23:40:52 Bean 'deferringLoadBalancerInterceptor' of type [org.springframework.cloud.client.loadbalancer.DeferringLoadBalancerInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-04-16 23:40:53 Tomcat initialized with port 8512 (http)
2024-04-16 23:40:53 Initializing ProtocolHandler ["http-nio-8512"]
2024-04-16 23:40:53 Starting service [Tomcat]
2024-04-16 23:40:53 Starting Servlet engine: [Apache Tomcat/10.1.19]
2024-04-16 23:40:53 Initializing Spring embedded WebApplicationContext
2024-04-16 23:40:53 Root WebApplicationContext: initialization completed in 1644 ms
2024-04-16 23:40:53 For 'service-order' URL not provided. Will try picking an instance via load-balancing.
2024-04-16 23:40:54 Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-04-16 23:40:54 Starting ProtocolHandler ["http-nio-8512"]
2024-04-16 23:40:54 Tomcat started on port 8512 (http) with context path ''
2024-04-16 23:40:54 initializer namespace from ans.namespace attribute : null
2024-04-16 23:40:54 initializer namespace from ALIBABA_ALIWARE_NAMESPACE attribute :null
2024-04-16 23:40:54 initializer namespace from namespace attribute :null
2024-04-16 23:40:54 [settings] [req-serv] nacos-server port:8848
2024-04-16 23:40:54 [settings] [http-client] connect timeout:1000
2024-04-16 23:40:54 PER_TASK_CONFIG_SIZE: 3000.0
2024-04-16 23:40:54 null No credential found
2024-04-16 23:40:54 [ClientAuthPluginManager] Load ClientAuthService com.alibaba.nacos.client.auth.impl.NacosClientAuthServiceImpl success.
2024-04-16 23:40:54 [ClientAuthPluginManager] Load ClientAuthService com.alibaba.nacos.client.auth.ram.RamClientAuthServiceImpl success.
2024-04-16 23:40:54 [RpcClientFactory] create a new rpc client of e7c24cc4-bdd4-4b3a-8711-4be8868fad83
2024-04-16 23:40:54 Create naming rpc client for uuid->e7c24cc4-bdd4-4b3a-8711-4be8868fad83
2024-04-16 23:40:54 [e7c24cc4-bdd4-4b3a-8711-4be8868fad83] RpcClient init, ServerListFactory = com.alibaba.nacos.client.naming.core.ServerListManager
2024-04-16 23:40:54 [e7c24cc4-bdd4-4b3a-8711-4be8868fad83] Registry connection listener to current client:com.alibaba.nacos.client.naming.remote.gprc.redo.NamingGrpcRedoService
2024-04-16 23:40:54 [e7c24cc4-bdd4-4b3a-8711-4be8868fad83] Register server push request handler:com.alibaba.nacos.client.naming.remote.gprc.NamingPushRequestHandler
2024-04-16 23:40:54 [e7c24cc4-bdd4-4b3a-8711-4be8868fad83] Try to connect to server on start up, server: {serverIp = '14.103.49.141', server main port = 8848}
2024-04-16 23:40:54 grpc client connection server:14.103.49.141 ip,serverPort:9848,grpcTslConfig:{"sslProvider":"","enableTls":false,"mutualAuthEnable":false,"trustAll":false}
2024-04-16 23:40:54 Ready to get current node abilities...
2024-04-16 23:40:54 Ready to initialize current node abilities, support modes: [SDK_CLIENT]
2024-04-16 23:40:54 Initialize current abilities finish...
2024-04-16 23:40:54 [AbilityControlManager] Successfully initialize AbilityControlManager
2024-04-16 23:40:55 [e7c24cc4-bdd4-4b3a-8711-4be8868fad83] Success to connect to server [14.103.49.141:8848] on start up, connectionId = 1713282054908_183.192.231.186_5343
2024-04-16 23:40:55 [e7c24cc4-bdd4-4b3a-8711-4be8868fad83] Notify connected event to listeners.
2024-04-16 23:40:55 Grpc connection connect
2024-04-16 23:40:55 [e7c24cc4-bdd4-4b3a-8711-4be8868fad83] Register server push request handler:com.alibaba.nacos.common.remote.client.RpcClient$ConnectResetRequestHandler
2024-04-16 23:40:55 [e7c24cc4-bdd4-4b3a-8711-4be8868fad83] Register server push request handler:com.alibaba.nacos.common.remote.client.RpcClient$$Lambda$1281/0x0000000801487918
2024-04-16 23:40:55 [REGISTER-SERVICE] public registering service service-pay with instance Instance{instanceId='null', ip='192.168.1.8', port=8512, weight=1.0, healthy=true, enabled=true, ephemeral=true, clusterName='DEFAULT', serviceName='null', metadata={IPv6=null, preserved.register.source=SPRING_CLOUD}}
2024-04-16 23:40:55 nacos registry, DEFAULT_GROUP service-pay 192.168.1.8:8512 register finished
2024-04-16 23:40:55 Started PayApplication in 4.186 seconds (process running for 4.773)
2024-04-17 00:20:57 [NotifyCenter] Start destroying Publisher
2024-04-17 00:20:57 [HttpClientBeanHolder] Start destroying common HttpClient
2024-04-17 00:20:57 [NotifyCenter] Destruction of the end
2024-04-17 00:20:57 [HttpClientBeanHolder] Destruction of the end
2024-04-17 00:23:06 Starting PayApplication using Java 17.0.5 with PID 47725 (/Users/yh/AndroidStudioProjects/spzx-parent/spzx-service/service-pay/build/classes/java/main started by yh in /Users/yh/AndroidStudioProjects/spzx-parent)
2024-04-17 00:23:06 The following 1 profile is active: "dev"
2024-04-17 00:23:07 Multiple Spring Data modules found, entering strict repository configuration mode
2024-04-17 00:23:07 Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2024-04-17 00:23:07 Finished Spring Data repository scanning in 8 ms. Found 0 Redis repository interfaces.
2024-04-17 00:23:07 BeanFactory id=dfad7eed-3981-37d8-bb82-d13e22616f2e
2024-04-17 00:23:07 Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$DeferringLoadBalancerInterceptorConfig' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$DeferringLoadBalancerInterceptorConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [lbRestClientPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.
2024-04-17 00:23:07 Bean 'deferringLoadBalancerInterceptor' of type [org.springframework.cloud.client.loadbalancer.DeferringLoadBalancerInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-04-17 00:23:08 Tomcat initialized with port 8512 (http)
2024-04-17 00:23:08 Initializing ProtocolHandler ["http-nio-8512"]
2024-04-17 00:23:08 Starting service [Tomcat]
2024-04-17 00:23:08 Starting Servlet engine: [Apache Tomcat/10.1.19]
2024-04-17 00:23:08 Initializing Spring embedded WebApplicationContext
2024-04-17 00:23:08 Root WebApplicationContext: initialization completed in 2043 ms
2024-04-17 00:23:09 For 'service-order' URL not provided. Will try picking an instance via load-balancing.
2024-04-17 00:23:10 Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-04-17 00:23:10 Starting ProtocolHandler ["http-nio-8512"]
2024-04-17 00:23:10 Tomcat started on port 8512 (http) with context path ''
2024-04-17 00:23:10 initializer namespace from ans.namespace attribute : null
2024-04-17 00:23:10 initializer namespace from ALIBABA_ALIWARE_NAMESPACE attribute :null
2024-04-17 00:23:10 initializer namespace from namespace attribute :null
2024-04-17 00:23:10 [settings] [req-serv] nacos-server port:8848
2024-04-17 00:23:10 [settings] [http-client] connect timeout:1000
2024-04-17 00:23:10 PER_TASK_CONFIG_SIZE: 3000.0
2024-04-17 00:23:10 null No credential found
2024-04-17 00:23:10 [ClientAuthPluginManager] Load ClientAuthService com.alibaba.nacos.client.auth.impl.NacosClientAuthServiceImpl success.
2024-04-17 00:23:10 [ClientAuthPluginManager] Load ClientAuthService com.alibaba.nacos.client.auth.ram.RamClientAuthServiceImpl success.
2024-04-17 00:23:10 [RpcClientFactory] create a new rpc client of b15c9529-0a02-4278-9a95-30e4893fd41e
2024-04-17 00:23:10 Create naming rpc client for uuid->b15c9529-0a02-4278-9a95-30e4893fd41e
2024-04-17 00:23:10 [b15c9529-0a02-4278-9a95-30e4893fd41e] RpcClient init, ServerListFactory = com.alibaba.nacos.client.naming.core.ServerListManager
2024-04-17 00:23:10 [b15c9529-0a02-4278-9a95-30e4893fd41e] Registry connection listener to current client:com.alibaba.nacos.client.naming.remote.gprc.redo.NamingGrpcRedoService
2024-04-17 00:23:10 [b15c9529-0a02-4278-9a95-30e4893fd41e] Register server push request handler:com.alibaba.nacos.client.naming.remote.gprc.NamingPushRequestHandler
2024-04-17 00:23:10 [b15c9529-0a02-4278-9a95-30e4893fd41e] Try to connect to server on start up, server: {serverIp = '14.103.49.141', server main port = 8848}
2024-04-17 00:23:10 grpc client connection server:14.103.49.141 ip,serverPort:9848,grpcTslConfig:{"sslProvider":"","enableTls":false,"mutualAuthEnable":false,"trustAll":false}
2024-04-17 00:23:11 Ready to get current node abilities...
2024-04-17 00:23:11 Ready to initialize current node abilities, support modes: [SDK_CLIENT]
2024-04-17 00:23:11 Initialize current abilities finish...
2024-04-17 00:23:11 [AbilityControlManager] Successfully initialize AbilityControlManager
2024-04-17 00:23:11 [b15c9529-0a02-4278-9a95-30e4893fd41e] Success to connect to server [14.103.49.141:8848] on start up, connectionId = 1713284591104_183.192.231.186_5547
2024-04-17 00:23:11 [b15c9529-0a02-4278-9a95-30e4893fd41e] Notify connected event to listeners.
2024-04-17 00:23:11 Grpc connection connect
2024-04-17 00:23:11 [b15c9529-0a02-4278-9a95-30e4893fd41e] Register server push request handler:com.alibaba.nacos.common.remote.client.RpcClient$ConnectResetRequestHandler
2024-04-17 00:23:11 [b15c9529-0a02-4278-9a95-30e4893fd41e] Register server push request handler:com.alibaba.nacos.common.remote.client.RpcClient$$Lambda$1289/0x0000000801474bc0
2024-04-17 00:23:11 [REGISTER-SERVICE] public registering service service-pay with instance Instance{instanceId='null', ip='192.168.1.8', port=8512, weight=1.0, healthy=true, enabled=true, ephemeral=true, clusterName='DEFAULT', serviceName='null', metadata={IPv6=null, preserved.register.source=SPRING_CLOUD}}
2024-04-17 00:23:11 nacos registry, DEFAULT_GROUP service-pay 192.168.1.8:8512 register finished
2024-04-17 00:23:11 Started PayApplication in 5.907 seconds (process running for 6.629)
2024-04-17 00:24:29 [HttpClientBeanHolder] Start destroying common HttpClient
2024-04-17 00:24:29 [NotifyCenter] Start destroying Publisher
2024-04-17 00:24:29 [NotifyCenter] Destruction of the end
2024-04-17 00:24:29 [HttpClientBeanHolder] Destruction of the end
2024-04-17 00:25:23 Starting PayApplication using Java 17.0.5 with PID 47992 (/Users/yh/AndroidStudioProjects/spzx-parent/spzx-service/service-pay/build/classes/java/main started by yh in /Users/yh/AndroidStudioProjects/spzx-parent)
2024-04-17 00:25:23 The following 1 profile is active: "dev"
2024-04-17 00:25:24 Multiple Spring Data modules found, entering strict repository configuration mode
2024-04-17 00:25:24 Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2024-04-17 00:25:24 Finished Spring Data repository scanning in 8 ms. Found 0 Redis repository interfaces.
2024-04-17 00:25:24 BeanFactory id=dfad7eed-3981-37d8-bb82-d13e22616f2e
2024-04-17 00:25:25 Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$DeferringLoadBalancerInterceptorConfig' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$DeferringLoadBalancerInterceptorConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [lbRestClientPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.
2024-04-17 00:25:25 Bean 'deferringLoadBalancerInterceptor' of type [org.springframework.cloud.client.loadbalancer.DeferringLoadBalancerInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-04-17 00:25:25 Tomcat initialized with port 8512 (http)
2024-04-17 00:25:25 Initializing ProtocolHandler ["http-nio-8512"]
2024-04-17 00:25:25 Starting service [Tomcat]
2024-04-17 00:25:25 Starting Servlet engine: [Apache Tomcat/10.1.19]
2024-04-17 00:25:25 Initializing Spring embedded WebApplicationContext
2024-04-17 00:25:25 Root WebApplicationContext: initialization completed in 1691 ms
2024-04-17 00:25:26 For 'service-order' URL not provided. Will try picking an instance via load-balancing.
2024-04-17 00:25:26 Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-04-17 00:25:26 Starting ProtocolHandler ["http-nio-8512"]
2024-04-17 00:25:26 Tomcat started on port 8512 (http) with context path ''
2024-04-17 00:25:26 initializer namespace from ans.namespace attribute : null
2024-04-17 00:25:26 initializer namespace from ALIBABA_ALIWARE_NAMESPACE attribute :null
2024-04-17 00:25:26 initializer namespace from namespace attribute :null
2024-04-17 00:25:26 [settings] [req-serv] nacos-server port:8848
2024-04-17 00:25:26 [settings] [http-client] connect timeout:1000
2024-04-17 00:25:26 PER_TASK_CONFIG_SIZE: 3000.0
2024-04-17 00:25:26 [ClientAuthPluginManager] Load ClientAuthService com.alibaba.nacos.client.auth.impl.NacosClientAuthServiceImpl success.
2024-04-17 00:25:26 [ClientAuthPluginManager] Load ClientAuthService com.alibaba.nacos.client.auth.ram.RamClientAuthServiceImpl success.
2024-04-17 00:25:26 null No credential found
2024-04-17 00:25:26 [RpcClientFactory] create a new rpc client of 0ffb152a-47de-4966-938b-a4f0580ec4c5
2024-04-17 00:25:26 Create naming rpc client for uuid->0ffb152a-47de-4966-938b-a4f0580ec4c5
2024-04-17 00:25:26 [0ffb152a-47de-4966-938b-a4f0580ec4c5] RpcClient init, ServerListFactory = com.alibaba.nacos.client.naming.core.ServerListManager
2024-04-17 00:25:26 [0ffb152a-47de-4966-938b-a4f0580ec4c5] Registry connection listener to current client:com.alibaba.nacos.client.naming.remote.gprc.redo.NamingGrpcRedoService
2024-04-17 00:25:26 [0ffb152a-47de-4966-938b-a4f0580ec4c5] Register server push request handler:com.alibaba.nacos.client.naming.remote.gprc.NamingPushRequestHandler
2024-04-17 00:25:26 [0ffb152a-47de-4966-938b-a4f0580ec4c5] Try to connect to server on start up, server: {serverIp = '14.103.49.141', server main port = 8848}
2024-04-17 00:25:26 grpc client connection server:14.103.49.141 ip,serverPort:9848,grpcTslConfig:{"sslProvider":"","enableTls":false,"mutualAuthEnable":false,"trustAll":false}
2024-04-17 00:25:27 Ready to get current node abilities...
2024-04-17 00:25:27 Ready to initialize current node abilities, support modes: [SDK_CLIENT]
2024-04-17 00:25:27 Initialize current abilities finish...
2024-04-17 00:25:27 [AbilityControlManager] Successfully initialize AbilityControlManager
2024-04-17 00:25:27 [0ffb152a-47de-4966-938b-a4f0580ec4c5] Success to connect to server [14.103.49.141:8848] on start up, connectionId = 1713284727077_183.192.231.186_5578
2024-04-17 00:25:27 [0ffb152a-47de-4966-938b-a4f0580ec4c5] Notify connected event to listeners.
2024-04-17 00:25:27 Grpc connection connect
2024-04-17 00:25:27 [0ffb152a-47de-4966-938b-a4f0580ec4c5] Register server push request handler:com.alibaba.nacos.common.remote.client.RpcClient$ConnectResetRequestHandler
2024-04-17 00:25:27 [0ffb152a-47de-4966-938b-a4f0580ec4c5] Register server push request handler:com.alibaba.nacos.common.remote.client.RpcClient$$Lambda$1289/0x0000000801455078
2024-04-17 00:25:27 [REGISTER-SERVICE] public registering service service-pay with instance Instance{instanceId='null', ip='192.168.1.8', port=8512, weight=1.0, healthy=true, enabled=true, ephemeral=true, clusterName='DEFAULT', serviceName='null', metadata={IPv6=null, preserved.register.source=SPRING_CLOUD}}
2024-04-17 00:25:27 nacos registry, DEFAULT_GROUP service-pay 192.168.1.8:8512 register finished
2024-04-17 00:25:27 Started PayApplication in 4.313 seconds (process running for 5.283)
2024-04-17 00:43:53 [NotifyCenter] Start destroying Publisher
2024-04-17 00:43:53 [HttpClientBeanHolder] Start destroying common HttpClient
2024-04-17 00:43:53 [NotifyCenter] Destruction of the end
2024-04-17 00:43:53 [HttpClientBeanHolder] Destruction of the end
2024-04-17 00:44:05 Starting PayApplication using Java 17.0.5 with PID 49297 (/Users/yh/AndroidStudioProjects/spzx-parent/spzx-service/service-pay/build/classes/java/main started by yh in /Users/yh/AndroidStudioProjects/spzx-parent)
2024-04-17 00:44:05 The following 1 profile is active: "dev"
2024-04-17 00:44:07 Multiple Spring Data modules found, entering strict repository configuration mode
2024-04-17 00:44:07 Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2024-04-17 00:44:07 Finished Spring Data repository scanning in 11 ms. Found 0 Redis repository interfaces.
2024-04-17 00:44:07 BeanFactory id=dfad7eed-3981-37d8-bb82-d13e22616f2e
2024-04-17 00:44:07 Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$DeferringLoadBalancerInterceptorConfig' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$DeferringLoadBalancerInterceptorConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [lbRestClientPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.
2024-04-17 00:44:07 Bean 'deferringLoadBalancerInterceptor' of type [org.springframework.cloud.client.loadbalancer.DeferringLoadBalancerInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-04-17 00:44:08 Tomcat initialized with port 8512 (http)
2024-04-17 00:44:08 Initializing ProtocolHandler ["http-nio-8512"]
2024-04-17 00:44:08 Starting service [Tomcat]
2024-04-17 00:44:08 Starting Servlet engine: [Apache Tomcat/10.1.19]
2024-04-17 00:44:08 Initializing Spring embedded WebApplicationContext
2024-04-17 00:44:08 Root WebApplicationContext: initialization completed in 2519 ms
2024-04-17 00:44:09 For 'service-order' URL not provided. Will try picking an instance via load-balancing.
2024-04-17 00:44:10 Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-04-17 00:44:10 Starting ProtocolHandler ["http-nio-8512"]
2024-04-17 00:44:10 Tomcat started on port 8512 (http) with context path ''
2024-04-17 00:44:10 initializer namespace from ans.namespace attribute : null
2024-04-17 00:44:10 initializer namespace from ALIBABA_ALIWARE_NAMESPACE attribute :null
2024-04-17 00:44:10 initializer namespace from namespace attribute :null
2024-04-17 00:44:10 [settings] [req-serv] nacos-server port:8848
2024-04-17 00:44:10 [settings] [http-client] connect timeout:1000
2024-04-17 00:44:10 PER_TASK_CONFIG_SIZE: 3000.0
2024-04-17 00:44:10 [ClientAuthPluginManager] Load ClientAuthService com.alibaba.nacos.client.auth.impl.NacosClientAuthServiceImpl success.
2024-04-17 00:44:10 [ClientAuthPluginManager] Load ClientAuthService com.alibaba.nacos.client.auth.ram.RamClientAuthServiceImpl success.
2024-04-17 00:44:10 null No credential found
2024-04-17 00:44:10 [RpcClientFactory] create a new rpc client of 729f4310-7482-4eec-bfcd-e3c186ba4e43
2024-04-17 00:44:10 Create naming rpc client for uuid->729f4310-7482-4eec-bfcd-e3c186ba4e43
2024-04-17 00:44:10 [729f4310-7482-4eec-bfcd-e3c186ba4e43] RpcClient init, ServerListFactory = com.alibaba.nacos.client.naming.core.ServerListManager
2024-04-17 00:44:10 [729f4310-7482-4eec-bfcd-e3c186ba4e43] Registry connection listener to current client:com.alibaba.nacos.client.naming.remote.gprc.redo.NamingGrpcRedoService
2024-04-17 00:44:10 [729f4310-7482-4eec-bfcd-e3c186ba4e43] Register server push request handler:com.alibaba.nacos.client.naming.remote.gprc.NamingPushRequestHandler
2024-04-17 00:44:10 [729f4310-7482-4eec-bfcd-e3c186ba4e43] Try to connect to server on start up, server: {serverIp = '14.103.49.141', server main port = 8848}
2024-04-17 00:44:10 grpc client connection server:14.103.49.141 ip,serverPort:9848,grpcTslConfig:{"sslProvider":"","enableTls":false,"mutualAuthEnable":false,"trustAll":false}
2024-04-17 00:44:11 Ready to get current node abilities...
2024-04-17 00:44:11 Ready to initialize current node abilities, support modes: [SDK_CLIENT]
2024-04-17 00:44:11 Initialize current abilities finish...
2024-04-17 00:44:11 [AbilityControlManager] Successfully initialize AbilityControlManager
2024-04-17 00:44:11 [729f4310-7482-4eec-bfcd-e3c186ba4e43] Success to connect to server [14.103.49.141:8848] on start up, connectionId = 1713285851374_183.192.231.186_5568
2024-04-17 00:44:11 [729f4310-7482-4eec-bfcd-e3c186ba4e43] Notify connected event to listeners.
2024-04-17 00:44:11 Grpc connection connect
2024-04-17 00:44:11 [729f4310-7482-4eec-bfcd-e3c186ba4e43] Register server push request handler:com.alibaba.nacos.common.remote.client.RpcClient$ConnectResetRequestHandler
2024-04-17 00:44:11 [729f4310-7482-4eec-bfcd-e3c186ba4e43] Register server push request handler:com.alibaba.nacos.common.remote.client.RpcClient$$Lambda$1289/0x0000000801476fa8
2024-04-17 00:44:11 [REGISTER-SERVICE] public registering service service-pay with instance Instance{instanceId='null', ip='192.168.1.8', port=8512, weight=1.0, healthy=true, enabled=true, ephemeral=true, clusterName='DEFAULT', serviceName='null', metadata={IPv6=null, preserved.register.source=SPRING_CLOUD}}
2024-04-17 00:44:11 nacos registry, DEFAULT_GROUP service-pay 192.168.1.8:8512 register finished
2024-04-17 00:44:11 Started PayApplication in 6.415 seconds (process running for 7.073)
2024-04-17 00:44:51 Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-04-17 00:44:51 Initializing Servlet 'dispatcherServlet'
2024-04-17 00:44:51 Completed initialization in 1 ms
2024-04-17 00:44:52 HikariPool-1 - Starting...
2024-04-17 00:44:52 HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@26801840
2024-04-17 00:44:52 HikariPool-1 - Start completed.
2024-04-17 00:44:52 LoadBalancerCacheManager not available, returning delegate without caching.
2024-04-17 00:44:52 [SUBSCRIBE-SERVICE] service:service-order, group:DEFAULT_GROUP, clusters: 
2024-04-17 00:44:52 init new ips(1) service: DEFAULT_GROUP@@service-order -> [{"ip":"192.168.1.8","port":8515,"weight":1.0,"healthy":true,"enabled":true,"ephemeral":true,"clusterName":"DEFAULT","serviceName":"DEFAULT_GROUP@@service-order","metadata":{"preserved.register.source":"SPRING_CLOUD"},"ipDeleteTimeout":30000,"instanceHeartBeatInterval":5000,"instanceHeartBeatTimeOut":15000}]
2024-04-17 00:44:52 current ips:(1) service: DEFAULT_GROUP@@service-order -> [{"ip":"192.168.1.8","port":8515,"weight":1.0,"healthy":true,"enabled":true,"ephemeral":true,"clusterName":"DEFAULT","serviceName":"DEFAULT_GROUP@@service-order","metadata":{"preserved.register.source":"SPRING_CLOUD"},"ipDeleteTimeout":30000,"instanceHeartBeatInterval":5000,"instanceHeartBeatTimeOut":15000}]
2024-04-17 00:44:52 Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: feign.FeignException$InternalServerError: [500] during [GET] to [http://service-order/api/order/orderInfo/auth/getOrderInfoByOrderNo/1713257710130] [OrderFeignClient#getOrderInfoByOrderNo(String)]: [{"timestamp":"2024-04-16T16:44:52.649+00:00","status":500,"error":"Internal Server Error","path":"/api/order/orderInfo/auth/getOrderInfoByOrderNo/1713257710130"}]] with root cause
feign.FeignException$InternalServerError: [500] during [GET] to [http://service-order/api/order/orderInfo/auth/getOrderInfoByOrderNo/1713257710130] [OrderFeignClient#getOrderInfoByOrderNo(String)]: [{"timestamp":"2024-04-16T16:44:52.649+00:00","status":500,"error":"Internal Server Error","path":"/api/order/orderInfo/auth/getOrderInfoByOrderNo/1713257710130"}]
	at feign.FeignException.serverErrorStatus(FeignException.java:259)
	at feign.FeignException.errorStatus(FeignException.java:206)
	at feign.FeignException.errorStatus(FeignException.java:194)
	at feign.codec.ErrorDecoder$Default.decode(ErrorDecoder.java:103)
	at feign.InvocationContext.decodeError(InvocationContext.java:126)
	at feign.InvocationContext.proceed(InvocationContext.java:72)
	at feign.ResponseHandler.handleResponse(ResponseHandler.java:63)
	at feign.SynchronousMethodHandler.executeAndDecode(SynchronousMethodHandler.java:114)
	at feign.SynchronousMethodHandler.invoke(SynchronousMethodHandler.java:70)
	at feign.ReflectiveFeign$FeignInvocationHandler.invoke(ReflectiveFeign.java:99)
	at jdk.proxy2/jdk.proxy2.$Proxy101.getOrderInfoByOrderNo(Unknown Source)
	at com.atguigu.spzx.pay.service.impl.PaymentInfoServiceImpl.savePaymentInfo(PaymentInfoServiceImpl.java:27)
	at com.atguigu.spzx.pay.service.impl.AlipayServiceImpl.submitAlipay(AlipayServiceImpl.java:36)
	at com.atguigu.spzx.pay.controller.AlipayController.submitAlipay(AlipayController.java:24)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:925)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:830)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1744)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:833)
2024-04-17 00:44:53 [729f4310-7482-4eec-bfcd-e3c186ba4e43] Receive server push request, request = NotifySubscriberRequest, requestId = 57197
2024-04-17 00:44:53 [729f4310-7482-4eec-bfcd-e3c186ba4e43] Ack server push request, request = NotifySubscriberRequest, requestId = 57197
2024-04-17 00:44:57 Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: feign.FeignException$InternalServerError: [500] during [GET] to [http://service-order/api/order/orderInfo/auth/getOrderInfoByOrderNo/1713257710130] [OrderFeignClient#getOrderInfoByOrderNo(String)]: [{"timestamp":"2024-04-16T16:44:57.232+00:00","status":500,"error":"Internal Server Error","path":"/api/order/orderInfo/auth/getOrderInfoByOrderNo/1713257710130"}]] with root cause
feign.FeignException$InternalServerError: [500] during [GET] to [http://service-order/api/order/orderInfo/auth/getOrderInfoByOrderNo/1713257710130] [OrderFeignClient#getOrderInfoByOrderNo(String)]: [{"timestamp":"2024-04-16T16:44:57.232+00:00","status":500,"error":"Internal Server Error","path":"/api/order/orderInfo/auth/getOrderInfoByOrderNo/1713257710130"}]
	at feign.FeignException.serverErrorStatus(FeignException.java:259)
	at feign.FeignException.errorStatus(FeignException.java:206)
	at feign.FeignException.errorStatus(FeignException.java:194)
	at feign.codec.ErrorDecoder$Default.decode(ErrorDecoder.java:103)
	at feign.InvocationContext.decodeError(InvocationContext.java:126)
	at feign.InvocationContext.proceed(InvocationContext.java:72)
	at feign.ResponseHandler.handleResponse(ResponseHandler.java:63)
	at feign.SynchronousMethodHandler.executeAndDecode(SynchronousMethodHandler.java:114)
	at feign.SynchronousMethodHandler.invoke(SynchronousMethodHandler.java:70)
	at feign.ReflectiveFeign$FeignInvocationHandler.invoke(ReflectiveFeign.java:99)
	at jdk.proxy2/jdk.proxy2.$Proxy101.getOrderInfoByOrderNo(Unknown Source)
	at com.atguigu.spzx.pay.service.impl.PaymentInfoServiceImpl.savePaymentInfo(PaymentInfoServiceImpl.java:27)
	at com.atguigu.spzx.pay.service.impl.AlipayServiceImpl.submitAlipay(AlipayServiceImpl.java:36)
	at com.atguigu.spzx.pay.controller.AlipayController.submitAlipay(AlipayController.java:24)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:925)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:830)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1744)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:833)
2024-04-17 00:44:58 Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: feign.FeignException$InternalServerError: [500] during [GET] to [http://service-order/api/order/orderInfo/auth/getOrderInfoByOrderNo/1713257710130] [OrderFeignClient#getOrderInfoByOrderNo(String)]: [{"timestamp":"2024-04-16T16:44:58.246+00:00","status":500,"error":"Internal Server Error","path":"/api/order/orderInfo/auth/getOrderInfoByOrderNo/1713257710130"}]] with root cause
feign.FeignException$InternalServerError: [500] during [GET] to [http://service-order/api/order/orderInfo/auth/getOrderInfoByOrderNo/1713257710130] [OrderFeignClient#getOrderInfoByOrderNo(String)]: [{"timestamp":"2024-04-16T16:44:58.246+00:00","status":500,"error":"Internal Server Error","path":"/api/order/orderInfo/auth/getOrderInfoByOrderNo/1713257710130"}]
	at feign.FeignException.serverErrorStatus(FeignException.java:259)
	at feign.FeignException.errorStatus(FeignException.java:206)
	at feign.FeignException.errorStatus(FeignException.java:194)
	at feign.codec.ErrorDecoder$Default.decode(ErrorDecoder.java:103)
	at feign.InvocationContext.decodeError(InvocationContext.java:126)
	at feign.InvocationContext.proceed(InvocationContext.java:72)
	at feign.ResponseHandler.handleResponse(ResponseHandler.java:63)
	at feign.SynchronousMethodHandler.executeAndDecode(SynchronousMethodHandler.java:114)
	at feign.SynchronousMethodHandler.invoke(SynchronousMethodHandler.java:70)
	at feign.ReflectiveFeign$FeignInvocationHandler.invoke(ReflectiveFeign.java:99)
	at jdk.proxy2/jdk.proxy2.$Proxy101.getOrderInfoByOrderNo(Unknown Source)
	at com.atguigu.spzx.pay.service.impl.PaymentInfoServiceImpl.savePaymentInfo(PaymentInfoServiceImpl.java:27)
	at com.atguigu.spzx.pay.service.impl.AlipayServiceImpl.submitAlipay(AlipayServiceImpl.java:36)
	at com.atguigu.spzx.pay.controller.AlipayController.submitAlipay(AlipayController.java:24)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:925)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:830)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1744)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:833)
2024-04-17 00:44:59 Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: feign.FeignException$InternalServerError: [500] during [GET] to [http://service-order/api/order/orderInfo/auth/getOrderInfoByOrderNo/1713257710130] [OrderFeignClient#getOrderInfoByOrderNo(String)]: [{"timestamp":"2024-04-16T16:44:59.187+00:00","status":500,"error":"Internal Server Error","path":"/api/order/orderInfo/auth/getOrderInfoByOrderNo/1713257710130"}]] with root cause
feign.FeignException$InternalServerError: [500] during [GET] to [http://service-order/api/order/orderInfo/auth/getOrderInfoByOrderNo/1713257710130] [OrderFeignClient#getOrderInfoByOrderNo(String)]: [{"timestamp":"2024-04-16T16:44:59.187+00:00","status":500,"error":"Internal Server Error","path":"/api/order/orderInfo/auth/getOrderInfoByOrderNo/1713257710130"}]
	at feign.FeignException.serverErrorStatus(FeignException.java:259)
	at feign.FeignException.errorStatus(FeignException.java:206)
	at feign.FeignException.errorStatus(FeignException.java:194)
	at feign.codec.ErrorDecoder$Default.decode(ErrorDecoder.java:103)
	at feign.InvocationContext.decodeError(InvocationContext.java:126)
	at feign.InvocationContext.proceed(InvocationContext.java:72)
	at feign.ResponseHandler.handleResponse(ResponseHandler.java:63)
	at feign.SynchronousMethodHandler.executeAndDecode(SynchronousMethodHandler.java:114)
	at feign.SynchronousMethodHandler.invoke(SynchronousMethodHandler.java:70)
	at feign.ReflectiveFeign$FeignInvocationHandler.invoke(ReflectiveFeign.java:99)
	at jdk.proxy2/jdk.proxy2.$Proxy101.getOrderInfoByOrderNo(Unknown Source)
	at com.atguigu.spzx.pay.service.impl.PaymentInfoServiceImpl.savePaymentInfo(PaymentInfoServiceImpl.java:27)
	at com.atguigu.spzx.pay.service.impl.AlipayServiceImpl.submitAlipay(AlipayServiceImpl.java:36)
	at com.atguigu.spzx.pay.controller.AlipayController.submitAlipay(AlipayController.java:24)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:925)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:830)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1744)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:833)
2024-04-17 00:45:00 Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: feign.FeignException$InternalServerError: [500] during [GET] to [http://service-order/api/order/orderInfo/auth/getOrderInfoByOrderNo/1713257710130] [OrderFeignClient#getOrderInfoByOrderNo(String)]: [{"timestamp":"2024-04-16T16:45:00.426+00:00","status":500,"error":"Internal Server Error","path":"/api/order/orderInfo/auth/getOrderInfoByOrderNo/1713257710130"}]] with root cause
feign.FeignException$InternalServerError: [500] during [GET] to [http://service-order/api/order/orderInfo/auth/getOrderInfoByOrderNo/1713257710130] [OrderFeignClient#getOrderInfoByOrderNo(String)]: [{"timestamp":"2024-04-16T16:45:00.426+00:00","status":500,"error":"Internal Server Error","path":"/api/order/orderInfo/auth/getOrderInfoByOrderNo/1713257710130"}]
	at feign.FeignException.serverErrorStatus(FeignException.java:259)
	at feign.FeignException.errorStatus(FeignException.java:206)
	at feign.FeignException.errorStatus(FeignException.java:194)
	at feign.codec.ErrorDecoder$Default.decode(ErrorDecoder.java:103)
	at feign.InvocationContext.decodeError(InvocationContext.java:126)
	at feign.InvocationContext.proceed(InvocationContext.java:72)
	at feign.ResponseHandler.handleResponse(ResponseHandler.java:63)
	at feign.SynchronousMethodHandler.executeAndDecode(SynchronousMethodHandler.java:114)
	at feign.SynchronousMethodHandler.invoke(SynchronousMethodHandler.java:70)
	at feign.ReflectiveFeign$FeignInvocationHandler.invoke(ReflectiveFeign.java:99)
	at jdk.proxy2/jdk.proxy2.$Proxy101.getOrderInfoByOrderNo(Unknown Source)
	at com.atguigu.spzx.pay.service.impl.PaymentInfoServiceImpl.savePaymentInfo(PaymentInfoServiceImpl.java:27)
	at com.atguigu.spzx.pay.service.impl.AlipayServiceImpl.submitAlipay(AlipayServiceImpl.java:36)
	at com.atguigu.spzx.pay.controller.AlipayController.submitAlipay(AlipayController.java:24)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:925)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:830)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1744)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:833)
2024-04-17 00:45:01 Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: feign.FeignException$InternalServerError: [500] during [GET] to [http://service-order/api/order/orderInfo/auth/getOrderInfoByOrderNo/1713257710130] [OrderFeignClient#getOrderInfoByOrderNo(String)]: [{"timestamp":"2024-04-16T16:45:01.235+00:00","status":500,"error":"Internal Server Error","path":"/api/order/orderInfo/auth/getOrderInfoByOrderNo/1713257710130"}]] with root cause
feign.FeignException$InternalServerError: [500] during [GET] to [http://service-order/api/order/orderInfo/auth/getOrderInfoByOrderNo/1713257710130] [OrderFeignClient#getOrderInfoByOrderNo(String)]: [{"timestamp":"2024-04-16T16:45:01.235+00:00","status":500,"error":"Internal Server Error","path":"/api/order/orderInfo/auth/getOrderInfoByOrderNo/1713257710130"}]
	at feign.FeignException.serverErrorStatus(FeignException.java:259)
	at feign.FeignException.errorStatus(FeignException.java:206)
	at feign.FeignException.errorStatus(FeignException.java:194)
	at feign.codec.ErrorDecoder$Default.decode(ErrorDecoder.java:103)
	at feign.InvocationContext.decodeError(InvocationContext.java:126)
	at feign.InvocationContext.proceed(InvocationContext.java:72)
	at feign.ResponseHandler.handleResponse(ResponseHandler.java:63)
	at feign.SynchronousMethodHandler.executeAndDecode(SynchronousMethodHandler.java:114)
	at feign.SynchronousMethodHandler.invoke(SynchronousMethodHandler.java:70)
	at feign.ReflectiveFeign$FeignInvocationHandler.invoke(ReflectiveFeign.java:99)
	at jdk.proxy2/jdk.proxy2.$Proxy101.getOrderInfoByOrderNo(Unknown Source)
	at com.atguigu.spzx.pay.service.impl.PaymentInfoServiceImpl.savePaymentInfo(PaymentInfoServiceImpl.java:27)
	at com.atguigu.spzx.pay.service.impl.AlipayServiceImpl.submitAlipay(AlipayServiceImpl.java:36)
	at com.atguigu.spzx.pay.controller.AlipayController.submitAlipay(AlipayController.java:24)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:925)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:830)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1744)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:833)
2024-04-17 00:45:18 [729f4310-7482-4eec-bfcd-e3c186ba4e43] Receive server push request, request = NotifySubscriberRequest, requestId = 57200
2024-04-17 00:45:18 [729f4310-7482-4eec-bfcd-e3c186ba4e43] Ack server push request, request = NotifySubscriberRequest, requestId = 57200
2024-04-17 01:01:37 [729f4310-7482-4eec-bfcd-e3c186ba4e43] Receive server push request, request = NotifySubscriberRequest, requestId = 57205
2024-04-17 01:01:37 [729f4310-7482-4eec-bfcd-e3c186ba4e43] Ack server push request, request = NotifySubscriberRequest, requestId = 57205
2024-04-17 01:12:34 [729f4310-7482-4eec-bfcd-e3c186ba4e43] Receive server push request, request = NotifySubscriberRequest, requestId = 57211
2024-04-17 01:12:34 [729f4310-7482-4eec-bfcd-e3c186ba4e43] Ack server push request, request = NotifySubscriberRequest, requestId = 57211
2024-04-17 01:12:40 [NotifyCenter] Start destroying Publisher
2024-04-17 01:12:40 [HttpClientBeanHolder] Start destroying common HttpClient
2024-04-17 01:12:40 [NotifyCenter] Destruction of the end
2024-04-17 01:12:40 [HttpClientBeanHolder] Destruction of the end
2024-04-17 01:12:58 Starting PayApplication using Java 17.0.5 with PID 51047 (/Users/yh/AndroidStudioProjects/spzx-parent/spzx-service/service-pay/build/classes/java/main started by yh in /Users/yh/AndroidStudioProjects/spzx-parent)
2024-04-17 01:12:58 The following 1 profile is active: "dev"
2024-04-17 01:12:59 Multiple Spring Data modules found, entering strict repository configuration mode
2024-04-17 01:12:59 Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2024-04-17 01:12:59 Finished Spring Data repository scanning in 10 ms. Found 0 Redis repository interfaces.
2024-04-17 01:12:59 BeanFactory id=dfad7eed-3981-37d8-bb82-d13e22616f2e
2024-04-17 01:13:00 Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$DeferringLoadBalancerInterceptorConfig' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$DeferringLoadBalancerInterceptorConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [lbRestClientPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.
2024-04-17 01:13:00 Bean 'deferringLoadBalancerInterceptor' of type [org.springframework.cloud.client.loadbalancer.DeferringLoadBalancerInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-04-17 01:13:00 Tomcat initialized with port 8512 (http)
2024-04-17 01:13:00 Initializing ProtocolHandler ["http-nio-8512"]
2024-04-17 01:13:00 Starting service [Tomcat]
2024-04-17 01:13:00 Starting Servlet engine: [Apache Tomcat/10.1.19]
2024-04-17 01:13:00 Initializing Spring embedded WebApplicationContext
2024-04-17 01:13:00 Root WebApplicationContext: initialization completed in 2677 ms
2024-04-17 01:13:01 For 'service-order' URL not provided. Will try picking an instance via load-balancing.
2024-04-17 01:13:02 Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-04-17 01:13:02 Starting ProtocolHandler ["http-nio-8512"]
2024-04-17 01:13:02 Tomcat started on port 8512 (http) with context path ''
2024-04-17 01:13:02 initializer namespace from ans.namespace attribute : null
2024-04-17 01:13:02 initializer namespace from ALIBABA_ALIWARE_NAMESPACE attribute :null
2024-04-17 01:13:02 initializer namespace from namespace attribute :null
2024-04-17 01:13:02 [settings] [req-serv] nacos-server port:8848
2024-04-17 01:13:02 [settings] [http-client] connect timeout:1000
2024-04-17 01:13:02 PER_TASK_CONFIG_SIZE: 3000.0
2024-04-17 01:13:02 null No credential found
2024-04-17 01:13:02 [ClientAuthPluginManager] Load ClientAuthService com.alibaba.nacos.client.auth.impl.NacosClientAuthServiceImpl success.
2024-04-17 01:13:02 [ClientAuthPluginManager] Load ClientAuthService com.alibaba.nacos.client.auth.ram.RamClientAuthServiceImpl success.
2024-04-17 01:13:02 [RpcClientFactory] create a new rpc client of 316ec4ae-fb99-4bd3-95da-b99661f7f654
2024-04-17 01:13:02 Create naming rpc client for uuid->316ec4ae-fb99-4bd3-95da-b99661f7f654
2024-04-17 01:13:02 [316ec4ae-fb99-4bd3-95da-b99661f7f654] RpcClient init, ServerListFactory = com.alibaba.nacos.client.naming.core.ServerListManager
2024-04-17 01:13:02 [316ec4ae-fb99-4bd3-95da-b99661f7f654] Registry connection listener to current client:com.alibaba.nacos.client.naming.remote.gprc.redo.NamingGrpcRedoService
2024-04-17 01:13:02 [316ec4ae-fb99-4bd3-95da-b99661f7f654] Register server push request handler:com.alibaba.nacos.client.naming.remote.gprc.NamingPushRequestHandler
2024-04-17 01:13:02 [316ec4ae-fb99-4bd3-95da-b99661f7f654] Try to connect to server on start up, server: {serverIp = '14.103.49.141', server main port = 8848}
2024-04-17 01:13:02 grpc client connection server:14.103.49.141 ip,serverPort:9848,grpcTslConfig:{"sslProvider":"","enableTls":false,"mutualAuthEnable":false,"trustAll":false}
2024-04-17 01:13:03 Ready to get current node abilities...
2024-04-17 01:13:03 Ready to initialize current node abilities, support modes: [SDK_CLIENT]
2024-04-17 01:13:03 Initialize current abilities finish...
2024-04-17 01:13:03 [AbilityControlManager] Successfully initialize AbilityControlManager
2024-04-17 01:13:03 [316ec4ae-fb99-4bd3-95da-b99661f7f654] Success to connect to server [14.103.49.141:8848] on start up, connectionId = 1713287583268_183.192.231.186_5419
2024-04-17 01:13:03 [316ec4ae-fb99-4bd3-95da-b99661f7f654] Notify connected event to listeners.
2024-04-17 01:13:03 Grpc connection connect
2024-04-17 01:13:03 [316ec4ae-fb99-4bd3-95da-b99661f7f654] Register server push request handler:com.alibaba.nacos.common.remote.client.RpcClient$ConnectResetRequestHandler
2024-04-17 01:13:03 [316ec4ae-fb99-4bd3-95da-b99661f7f654] Register server push request handler:com.alibaba.nacos.common.remote.client.RpcClient$$Lambda$1289/0x0000000801492a50
2024-04-17 01:13:03 [REGISTER-SERVICE] public registering service service-pay with instance Instance{instanceId='null', ip='192.168.1.8', port=8512, weight=1.0, healthy=true, enabled=true, ephemeral=true, clusterName='DEFAULT', serviceName='null', metadata={IPv6=null, preserved.register.source=SPRING_CLOUD}}
2024-04-17 01:13:03 nacos registry, DEFAULT_GROUP service-pay 192.168.1.8:8512 register finished
2024-04-17 01:13:03 Started PayApplication in 6.009 seconds (process running for 6.543)
2024-04-17 01:13:37 Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-04-17 01:13:37 Initializing Servlet 'dispatcherServlet'
2024-04-17 01:13:37 Completed initialization in 1 ms
2024-04-17 01:13:38 HikariPool-1 - Starting...
2024-04-17 01:13:38 HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@61efce03
2024-04-17 01:13:38 HikariPool-1 - Start completed.
2024-04-17 01:13:38 LoadBalancerCacheManager not available, returning delegate without caching.
2024-04-17 01:13:38 [SUBSCRIBE-SERVICE] service:service-order, group:DEFAULT_GROUP, clusters: 
2024-04-17 01:13:38 init new ips(1) service: DEFAULT_GROUP@@service-order -> [{"ip":"192.168.1.8","port":8515,"weight":1.0,"healthy":true,"enabled":true,"ephemeral":true,"clusterName":"DEFAULT","serviceName":"DEFAULT_GROUP@@service-order","metadata":{"preserved.register.source":"SPRING_CLOUD"},"ipDeleteTimeout":30000,"instanceHeartBeatInterval":5000,"instanceHeartBeatTimeOut":15000}]
2024-04-17 01:13:38 current ips:(1) service: DEFAULT_GROUP@@service-order -> [{"ip":"192.168.1.8","port":8515,"weight":1.0,"healthy":true,"enabled":true,"ephemeral":true,"clusterName":"DEFAULT","serviceName":"DEFAULT_GROUP@@service-order","metadata":{"preserved.register.source":"SPRING_CLOUD"},"ipDeleteTimeout":30000,"instanceHeartBeatInterval":5000,"instanceHeartBeatTimeOut":15000}]
2024-04-17 01:13:38 Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: feign.FeignException$InternalServerError: [500] during [GET] to [http://service-order/api/order/orderInfo/auth/getOrderInfoByOrderNo/1713287616085] [OrderFeignClient#getOrderInfoByOrderNo(String)]: [{"timestamp":"2024-04-16T17:13:38.545+00:00","status":500,"error":"Internal Server Error","path":"/api/order/orderInfo/auth/getOrderInfoByOrderNo/1713287616085"}]] with root cause
feign.FeignException$InternalServerError: [500] during [GET] to [http://service-order/api/order/orderInfo/auth/getOrderInfoByOrderNo/1713287616085] [OrderFeignClient#getOrderInfoByOrderNo(String)]: [{"timestamp":"2024-04-16T17:13:38.545+00:00","status":500,"error":"Internal Server Error","path":"/api/order/orderInfo/auth/getOrderInfoByOrderNo/1713287616085"}]
	at feign.FeignException.serverErrorStatus(FeignException.java:259)
	at feign.FeignException.errorStatus(FeignException.java:206)
	at feign.FeignException.errorStatus(FeignException.java:194)
	at feign.codec.ErrorDecoder$Default.decode(ErrorDecoder.java:103)
	at feign.InvocationContext.decodeError(InvocationContext.java:126)
	at feign.InvocationContext.proceed(InvocationContext.java:72)
	at feign.ResponseHandler.handleResponse(ResponseHandler.java:63)
	at feign.SynchronousMethodHandler.executeAndDecode(SynchronousMethodHandler.java:114)
	at feign.SynchronousMethodHandler.invoke(SynchronousMethodHandler.java:70)
	at feign.ReflectiveFeign$FeignInvocationHandler.invoke(ReflectiveFeign.java:99)
	at jdk.proxy2/jdk.proxy2.$Proxy101.getOrderInfoByOrderNo(Unknown Source)
	at com.atguigu.spzx.pay.service.impl.PaymentInfoServiceImpl.savePaymentInfo(PaymentInfoServiceImpl.java:27)
	at com.atguigu.spzx.pay.service.impl.AlipayServiceImpl.submitAlipay(AlipayServiceImpl.java:36)
	at com.atguigu.spzx.pay.controller.AlipayController.submitAlipay(AlipayController.java:24)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:925)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:830)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1744)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:833)
2024-04-17 01:13:39 [316ec4ae-fb99-4bd3-95da-b99661f7f654] Receive server push request, request = NotifySubscriberRequest, requestId = 57226
2024-04-17 01:13:39 [316ec4ae-fb99-4bd3-95da-b99661f7f654] Ack server push request, request = NotifySubscriberRequest, requestId = 57226
2024-04-17 01:14:47 [316ec4ae-fb99-4bd3-95da-b99661f7f654] Receive server push request, request = NotifySubscriberRequest, requestId = 57228
2024-04-17 01:14:47 [316ec4ae-fb99-4bd3-95da-b99661f7f654] Ack server push request, request = NotifySubscriberRequest, requestId = 57228
2024-04-17 01:14:52 [316ec4ae-fb99-4bd3-95da-b99661f7f654] Receive server push request, request = NotifySubscriberRequest, requestId = 57230
2024-04-17 01:14:52 [316ec4ae-fb99-4bd3-95da-b99661f7f654] Ack server push request, request = NotifySubscriberRequest, requestId = 57230
2024-04-17 01:17:28 [316ec4ae-fb99-4bd3-95da-b99661f7f654] Receive server push request, request = NotifySubscriberRequest, requestId = 57235
2024-04-17 01:17:28 [316ec4ae-fb99-4bd3-95da-b99661f7f654] Ack server push request, request = NotifySubscriberRequest, requestId = 57235
2024-04-17 01:17:33 [HttpClientBeanHolder] Start destroying common HttpClient
2024-04-17 01:17:33 [NotifyCenter] Start destroying Publisher
2024-04-17 01:17:33 [NotifyCenter] Destruction of the end
2024-04-17 01:17:33 [HttpClientBeanHolder] Destruction of the end
2024-04-17 09:48:28 Starting PayApplication using Java 17.0.5 with PID 52960 (/Users/yh/AndroidStudioProjects/spzx-parent/spzx-service/service-pay/build/classes/java/main started by yh in /Users/yh/AndroidStudioProjects/spzx-parent)
2024-04-17 09:48:28 The following 1 profile is active: "dev"
2024-04-17 09:48:29 Multiple Spring Data modules found, entering strict repository configuration mode
2024-04-17 09:48:29 Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2024-04-17 09:48:29 Finished Spring Data repository scanning in 10 ms. Found 0 Redis repository interfaces.
2024-04-17 09:48:29 BeanFactory id=dfad7eed-3981-37d8-bb82-d13e22616f2e
2024-04-17 09:48:30 Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$DeferringLoadBalancerInterceptorConfig' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$DeferringLoadBalancerInterceptorConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [lbRestClientPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.
2024-04-17 09:48:30 Bean 'deferringLoadBalancerInterceptor' of type [org.springframework.cloud.client.loadbalancer.DeferringLoadBalancerInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-04-17 09:48:30 Tomcat initialized with port 8512 (http)
2024-04-17 09:48:30 Initializing ProtocolHandler ["http-nio-8512"]
2024-04-17 09:48:30 Starting service [Tomcat]
2024-04-17 09:48:30 Starting Servlet engine: [Apache Tomcat/10.1.19]
2024-04-17 09:48:30 Initializing Spring embedded WebApplicationContext
2024-04-17 09:48:30 Root WebApplicationContext: initialization completed in 2398 ms
2024-04-17 09:48:31 For 'service-order' URL not provided. Will try picking an instance via load-balancing.
2024-04-17 09:48:32 Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-04-17 09:48:32 Starting ProtocolHandler ["http-nio-8512"]
2024-04-17 09:48:32 Tomcat started on port 8512 (http) with context path ''
2024-04-17 09:48:32 initializer namespace from ans.namespace attribute : null
2024-04-17 09:48:32 initializer namespace from ALIBABA_ALIWARE_NAMESPACE attribute :null
2024-04-17 09:48:32 initializer namespace from namespace attribute :null
2024-04-17 09:48:32 [settings] [req-serv] nacos-server port:8848
2024-04-17 09:48:32 [settings] [http-client] connect timeout:1000
2024-04-17 09:48:32 PER_TASK_CONFIG_SIZE: 3000.0
2024-04-17 09:48:32 null No credential found
2024-04-17 09:48:32 [ClientAuthPluginManager] Load ClientAuthService com.alibaba.nacos.client.auth.impl.NacosClientAuthServiceImpl success.
2024-04-17 09:48:32 [ClientAuthPluginManager] Load ClientAuthService com.alibaba.nacos.client.auth.ram.RamClientAuthServiceImpl success.
2024-04-17 09:48:32 [RpcClientFactory] create a new rpc client of 5a1346dd-596f-4927-bbe0-372dd8c13e00
2024-04-17 09:48:32 Create naming rpc client for uuid->5a1346dd-596f-4927-bbe0-372dd8c13e00
2024-04-17 09:48:32 [5a1346dd-596f-4927-bbe0-372dd8c13e00] RpcClient init, ServerListFactory = com.alibaba.nacos.client.naming.core.ServerListManager
2024-04-17 09:48:32 [5a1346dd-596f-4927-bbe0-372dd8c13e00] Registry connection listener to current client:com.alibaba.nacos.client.naming.remote.gprc.redo.NamingGrpcRedoService
2024-04-17 09:48:32 [5a1346dd-596f-4927-bbe0-372dd8c13e00] Register server push request handler:com.alibaba.nacos.client.naming.remote.gprc.NamingPushRequestHandler
2024-04-17 09:48:32 [5a1346dd-596f-4927-bbe0-372dd8c13e00] Try to connect to server on start up, server: {serverIp = '14.103.49.141', server main port = 8848}
2024-04-17 09:48:32 grpc client connection server:14.103.49.141 ip,serverPort:9848,grpcTslConfig:{"sslProvider":"","enableTls":false,"mutualAuthEnable":false,"trustAll":false}
2024-04-17 09:48:33 Ready to get current node abilities...
2024-04-17 09:48:33 Ready to initialize current node abilities, support modes: [SDK_CLIENT]
2024-04-17 09:48:33 Initialize current abilities finish...
2024-04-17 09:48:33 [AbilityControlManager] Successfully initialize AbilityControlManager
2024-04-17 09:48:33 [5a1346dd-596f-4927-bbe0-372dd8c13e00] Success to connect to server [14.103.49.141:8848] on start up, connectionId = 1713318513230_183.192.231.186_5348
2024-04-17 09:48:33 [5a1346dd-596f-4927-bbe0-372dd8c13e00] Notify connected event to listeners.
2024-04-17 09:48:33 Grpc connection connect
2024-04-17 09:48:33 [5a1346dd-596f-4927-bbe0-372dd8c13e00] Register server push request handler:com.alibaba.nacos.common.remote.client.RpcClient$ConnectResetRequestHandler
2024-04-17 09:48:33 [5a1346dd-596f-4927-bbe0-372dd8c13e00] Register server push request handler:com.alibaba.nacos.common.remote.client.RpcClient$$Lambda$1289/0x0000000801493630
2024-04-17 09:48:33 [REGISTER-SERVICE] public registering service service-pay with instance Instance{instanceId='null', ip='192.168.1.8', port=8512, weight=1.0, healthy=true, enabled=true, ephemeral=true, clusterName='DEFAULT', serviceName='null', metadata={IPv6=null, preserved.register.source=SPRING_CLOUD}}
2024-04-17 09:48:33 nacos registry, DEFAULT_GROUP service-pay 192.168.1.8:8512 register finished
2024-04-17 09:48:33 Started PayApplication in 5.901 seconds (process running for 6.545)
2024-04-17 09:50:33 Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-04-17 09:50:33 Initializing Servlet 'dispatcherServlet'
2024-04-17 09:50:33 Completed initialization in 2 ms
2024-04-17 09:50:34 HikariPool-1 - Starting...
2024-04-17 09:50:34 HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@7ef302c1
2024-04-17 09:50:34 HikariPool-1 - Start completed.
2024-04-17 09:50:34 LoadBalancerCacheManager not available, returning delegate without caching.
2024-04-17 09:50:34 [SUBSCRIBE-SERVICE] service:service-order, group:DEFAULT_GROUP, clusters: 
2024-04-17 09:50:34 init new ips(1) service: DEFAULT_GROUP@@service-order -> [{"ip":"192.168.1.8","port":8515,"weight":1.0,"healthy":true,"enabled":true,"ephemeral":true,"clusterName":"DEFAULT","serviceName":"DEFAULT_GROUP@@service-order","metadata":{"preserved.register.source":"SPRING_CLOUD"},"instanceHeartBeatInterval":5000,"instanceHeartBeatTimeOut":15000,"ipDeleteTimeout":30000}]
2024-04-17 09:50:34 current ips:(1) service: DEFAULT_GROUP@@service-order -> [{"ip":"192.168.1.8","port":8515,"weight":1.0,"healthy":true,"enabled":true,"ephemeral":true,"clusterName":"DEFAULT","serviceName":"DEFAULT_GROUP@@service-order","metadata":{"preserved.register.source":"SPRING_CLOUD"},"instanceHeartBeatInterval":5000,"instanceHeartBeatTimeOut":15000,"ipDeleteTimeout":30000}]
2024-04-17 09:50:34 [5a1346dd-596f-4927-bbe0-372dd8c13e00] Receive server push request, request = NotifySubscriberRequest, requestId = 57245
2024-04-17 09:50:34 [5a1346dd-596f-4927-bbe0-372dd8c13e00] Ack server push request, request = NotifySubscriberRequest, requestId = 57245
2024-04-17 10:01:55 Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: org.springframework.dao.QueryTimeoutException: Redis command timed out] with root cause
io.lettuce.core.RedisCommandTimeoutException: Command timed out after 20 second(s)
	at io.lettuce.core.internal.ExceptionFactory.createTimeoutException(ExceptionFactory.java:59)
	at io.lettuce.core.internal.Futures.awaitOrCancel(Futures.java:246)
	at io.lettuce.core.LettuceFutures.awaitOrCancel(LettuceFutures.java:74)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.await(LettuceConnection.java:1008)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.lambda$doInvoke$3(LettuceConnection.java:443)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$Synchronizer.invoke(LettuceInvoker.java:665)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker.just(LettuceInvoker.java:94)
	at org.springframework.data.redis.connection.lettuce.LettuceStringCommands.get(LettuceStringCommands.java:54)
	at org.springframework.data.redis.connection.DefaultedRedisConnection.get(DefaultedRedisConnection.java:284)
	at org.springframework.data.redis.connection.DefaultStringRedisConnection.get(DefaultStringRedisConnection.java:382)
	at org.springframework.data.redis.core.DefaultValueOperations$1.inRedis(DefaultValueOperations.java:54)
	at org.springframework.data.redis.core.AbstractOperations$ValueDeserializingRedisCallback.doInRedis(AbstractOperations.java:61)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:396)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:363)
	at org.springframework.data.redis.core.AbstractOperations.execute(AbstractOperations.java:97)
	at org.springframework.data.redis.core.DefaultValueOperations.get(DefaultValueOperations.java:50)
	at com.atguigu.spzx.common.interceptor.UserLoginAuthInterceptor.preHandle(UserLoginAuthInterceptor.java:27)
	at org.springframework.web.servlet.HandlerExecutionChain.applyPreHandle(HandlerExecutionChain.java:146)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1084)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1744)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:833)
2024-04-17 10:02:02 Reconnecting, last destination was /14.103.49.141:6379
2024-04-17 10:02:02 Reconnected to 14.103.49.141/<unresolved>:6379
2024-04-17 10:37:37 [NotifyCenter] Start destroying Publisher
2024-04-17 10:37:37 [HttpClientBeanHolder] Start destroying common HttpClient
2024-04-17 10:37:37 [NotifyCenter] Destruction of the end
2024-04-17 10:37:37 [HttpClientBeanHolder] Destruction of the end
2024-04-17 10:37:51 Starting PayApplication using Java 17.0.5 with PID 56122 (/Users/yh/AndroidStudioProjects/spzx-parent/spzx-service/service-pay/build/classes/java/main started by yh in /Users/yh/AndroidStudioProjects/spzx-parent)
2024-04-17 10:37:51 The following 1 profile is active: "dev"
2024-04-17 10:37:52 Multiple Spring Data modules found, entering strict repository configuration mode
2024-04-17 10:37:52 Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2024-04-17 10:37:52 Finished Spring Data repository scanning in 12 ms. Found 0 Redis repository interfaces.
2024-04-17 10:37:53 BeanFactory id=d26f99ec-e740-322b-99b0-4e8f4f9afff1
2024-04-17 10:37:53 Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$DeferringLoadBalancerInterceptorConfig' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$DeferringLoadBalancerInterceptorConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [lbRestClientPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.
2024-04-17 10:37:53 Bean 'deferringLoadBalancerInterceptor' of type [org.springframework.cloud.client.loadbalancer.DeferringLoadBalancerInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-04-17 10:37:53 Tomcat initialized with port 8512 (http)
2024-04-17 10:37:53 Initializing ProtocolHandler ["http-nio-8512"]
2024-04-17 10:37:53 Starting service [Tomcat]
2024-04-17 10:37:53 Starting Servlet engine: [Apache Tomcat/10.1.19]
2024-04-17 10:37:54 Initializing Spring embedded WebApplicationContext
2024-04-17 10:37:54 Root WebApplicationContext: initialization completed in 2682 ms
2024-04-17 10:37:55 For 'service-order' URL not provided. Will try picking an instance via load-balancing.
2024-04-17 10:37:55 For 'service-product' URL not provided. Will try picking an instance via load-balancing.
2024-04-17 10:37:56 Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-04-17 10:37:56 Starting ProtocolHandler ["http-nio-8512"]
2024-04-17 10:37:56 Tomcat started on port 8512 (http) with context path ''
2024-04-17 10:37:56 initializer namespace from ans.namespace attribute : null
2024-04-17 10:37:56 initializer namespace from ALIBABA_ALIWARE_NAMESPACE attribute :null
2024-04-17 10:37:56 initializer namespace from namespace attribute :null
2024-04-17 10:37:56 null No credential found
2024-04-17 10:37:56 [settings] [req-serv] nacos-server port:8848
2024-04-17 10:37:56 [settings] [http-client] connect timeout:1000
2024-04-17 10:37:56 PER_TASK_CONFIG_SIZE: 3000.0
2024-04-17 10:37:56 [ClientAuthPluginManager] Load ClientAuthService com.alibaba.nacos.client.auth.impl.NacosClientAuthServiceImpl success.
2024-04-17 10:37:56 [ClientAuthPluginManager] Load ClientAuthService com.alibaba.nacos.client.auth.ram.RamClientAuthServiceImpl success.
2024-04-17 10:37:56 [RpcClientFactory] create a new rpc client of 466e9464-dca3-4585-862e-a19f13f35eb4
2024-04-17 10:37:56 Create naming rpc client for uuid->466e9464-dca3-4585-862e-a19f13f35eb4
2024-04-17 10:37:56 [466e9464-dca3-4585-862e-a19f13f35eb4] RpcClient init, ServerListFactory = com.alibaba.nacos.client.naming.core.ServerListManager
2024-04-17 10:37:56 [466e9464-dca3-4585-862e-a19f13f35eb4] Registry connection listener to current client:com.alibaba.nacos.client.naming.remote.gprc.redo.NamingGrpcRedoService
2024-04-17 10:37:56 [466e9464-dca3-4585-862e-a19f13f35eb4] Register server push request handler:com.alibaba.nacos.client.naming.remote.gprc.NamingPushRequestHandler
2024-04-17 10:37:56 [466e9464-dca3-4585-862e-a19f13f35eb4] Try to connect to server on start up, server: {serverIp = '14.103.49.141', server main port = 8848}
2024-04-17 10:37:56 grpc client connection server:14.103.49.141 ip,serverPort:9848,grpcTslConfig:{"sslProvider":"","enableTls":false,"mutualAuthEnable":false,"trustAll":false}
2024-04-17 10:37:57 Ready to get current node abilities...
2024-04-17 10:37:57 Ready to initialize current node abilities, support modes: [SDK_CLIENT]
2024-04-17 10:37:57 Initialize current abilities finish...
2024-04-17 10:37:57 [AbilityControlManager] Successfully initialize AbilityControlManager
2024-04-17 10:37:57 [466e9464-dca3-4585-862e-a19f13f35eb4] Success to connect to server [14.103.49.141:8848] on start up, connectionId = 1713321477296_183.192.231.186_5279
2024-04-17 10:37:57 [466e9464-dca3-4585-862e-a19f13f35eb4] Notify connected event to listeners.
2024-04-17 10:37:57 Grpc connection connect
2024-04-17 10:37:57 [466e9464-dca3-4585-862e-a19f13f35eb4] Register server push request handler:com.alibaba.nacos.common.remote.client.RpcClient$ConnectResetRequestHandler
2024-04-17 10:37:57 [466e9464-dca3-4585-862e-a19f13f35eb4] Register server push request handler:com.alibaba.nacos.common.remote.client.RpcClient$$Lambda$1289/0x000000080145efa8
2024-04-17 10:37:57 [REGISTER-SERVICE] public registering service service-pay with instance Instance{instanceId='null', ip='192.168.1.8', port=8512, weight=1.0, healthy=true, enabled=true, ephemeral=true, clusterName='DEFAULT', serviceName='null', metadata={IPv6=null, preserved.register.source=SPRING_CLOUD}}
2024-04-17 10:37:57 nacos registry, DEFAULT_GROUP service-pay 192.168.1.8:8512 register finished
2024-04-17 10:37:57 Started PayApplication in 7.318 seconds (process running for 8.008)
2024-04-17 10:42:54 Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-04-17 10:42:54 Initializing Servlet 'dispatcherServlet'
2024-04-17 10:42:54 Completed initialization in 7 ms
2024-04-17 10:42:54 HikariPool-1 - Starting...
2024-04-17 10:42:54 HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@19fe6f8e
2024-04-17 10:42:54 HikariPool-1 - Start completed.
2024-04-17 10:43:08 [NotifyCenter] Start destroying Publisher
2024-04-17 10:43:08 [HttpClientBeanHolder] Start destroying common HttpClient
2024-04-17 10:43:08 [NotifyCenter] Destruction of the end
2024-04-17 10:43:08 [HttpClientBeanHolder] Destruction of the end
2024-04-17 10:43:16 Starting PayApplication using Java 17.0.5 with PID 56592 (/Users/yh/AndroidStudioProjects/spzx-parent/spzx-service/service-pay/build/classes/java/main started by yh in /Users/yh/AndroidStudioProjects/spzx-parent)
2024-04-17 10:43:16 The following 1 profile is active: "dev"
2024-04-17 10:43:17 Multiple Spring Data modules found, entering strict repository configuration mode
2024-04-17 10:43:17 Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2024-04-17 10:43:17 Finished Spring Data repository scanning in 10 ms. Found 0 Redis repository interfaces.
2024-04-17 10:43:18 BeanFactory id=d26f99ec-e740-322b-99b0-4e8f4f9afff1
2024-04-17 10:43:18 Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$DeferringLoadBalancerInterceptorConfig' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$DeferringLoadBalancerInterceptorConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [lbRestClientPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.
2024-04-17 10:43:18 Bean 'deferringLoadBalancerInterceptor' of type [org.springframework.cloud.client.loadbalancer.DeferringLoadBalancerInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-04-17 10:43:19 Tomcat initialized with port 8512 (http)
2024-04-17 10:43:19 Initializing ProtocolHandler ["http-nio-8512"]
2024-04-17 10:43:19 Starting service [Tomcat]
2024-04-17 10:43:19 Starting Servlet engine: [Apache Tomcat/10.1.19]
2024-04-17 10:43:19 Initializing Spring embedded WebApplicationContext
2024-04-17 10:43:19 Root WebApplicationContext: initialization completed in 2818 ms
2024-04-17 10:43:20 For 'service-order' URL not provided. Will try picking an instance via load-balancing.
2024-04-17 10:43:20 For 'service-product' URL not provided. Will try picking an instance via load-balancing.
2024-04-17 10:43:21 Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-04-17 10:43:21 Starting ProtocolHandler ["http-nio-8512"]
2024-04-17 10:43:21 Tomcat started on port 8512 (http) with context path ''
2024-04-17 10:43:21 initializer namespace from ans.namespace attribute : null
2024-04-17 10:43:21 initializer namespace from ALIBABA_ALIWARE_NAMESPACE attribute :null
2024-04-17 10:43:21 initializer namespace from namespace attribute :null
2024-04-17 10:43:21 [settings] [req-serv] nacos-server port:8848
2024-04-17 10:43:21 [settings] [http-client] connect timeout:1000
2024-04-17 10:43:21 PER_TASK_CONFIG_SIZE: 3000.0
2024-04-17 10:43:21 [ClientAuthPluginManager] Load ClientAuthService com.alibaba.nacos.client.auth.impl.NacosClientAuthServiceImpl success.
2024-04-17 10:43:21 [ClientAuthPluginManager] Load ClientAuthService com.alibaba.nacos.client.auth.ram.RamClientAuthServiceImpl success.
2024-04-17 10:43:21 null No credential found
2024-04-17 10:43:21 [RpcClientFactory] create a new rpc client of a9aed35c-cf81-443e-a8b1-c0c5219d86ca
2024-04-17 10:43:21 Create naming rpc client for uuid->a9aed35c-cf81-443e-a8b1-c0c5219d86ca
2024-04-17 10:43:21 [a9aed35c-cf81-443e-a8b1-c0c5219d86ca] RpcClient init, ServerListFactory = com.alibaba.nacos.client.naming.core.ServerListManager
2024-04-17 10:43:21 [a9aed35c-cf81-443e-a8b1-c0c5219d86ca] Registry connection listener to current client:com.alibaba.nacos.client.naming.remote.gprc.redo.NamingGrpcRedoService
2024-04-17 10:43:21 [a9aed35c-cf81-443e-a8b1-c0c5219d86ca] Register server push request handler:com.alibaba.nacos.client.naming.remote.gprc.NamingPushRequestHandler
2024-04-17 10:43:21 [a9aed35c-cf81-443e-a8b1-c0c5219d86ca] Try to connect to server on start up, server: {serverIp = '14.103.49.141', server main port = 8848}
2024-04-17 10:43:21 grpc client connection server:14.103.49.141 ip,serverPort:9848,grpcTslConfig:{"sslProvider":"","enableTls":false,"mutualAuthEnable":false,"trustAll":false}
2024-04-17 10:43:21 Ready to get current node abilities...
2024-04-17 10:43:21 Ready to initialize current node abilities, support modes: [SDK_CLIENT]
2024-04-17 10:43:21 Initialize current abilities finish...
2024-04-17 10:43:21 [AbilityControlManager] Successfully initialize AbilityControlManager
2024-04-17 10:43:22 [a9aed35c-cf81-443e-a8b1-c0c5219d86ca] Success to connect to server [14.103.49.141:8848] on start up, connectionId = 1713321801935_183.192.231.186_5123
2024-04-17 10:43:22 [a9aed35c-cf81-443e-a8b1-c0c5219d86ca] Notify connected event to listeners.
2024-04-17 10:43:22 Grpc connection connect
2024-04-17 10:43:22 [a9aed35c-cf81-443e-a8b1-c0c5219d86ca] Register server push request handler:com.alibaba.nacos.common.remote.client.RpcClient$ConnectResetRequestHandler
2024-04-17 10:43:22 [a9aed35c-cf81-443e-a8b1-c0c5219d86ca] Register server push request handler:com.alibaba.nacos.common.remote.client.RpcClient$$Lambda$1289/0x0000000801492188
2024-04-17 10:43:22 [REGISTER-SERVICE] public registering service service-pay with instance Instance{instanceId='null', ip='192.168.1.8', port=8512, weight=1.0, healthy=true, enabled=true, ephemeral=true, clusterName='DEFAULT', serviceName='null', metadata={IPv6=null, preserved.register.source=SPRING_CLOUD}}
2024-04-17 10:43:22 nacos registry, DEFAULT_GROUP service-pay 192.168.1.8:8512 register finished
2024-04-17 10:43:22 Started PayApplication in 6.441 seconds (process running for 7.061)
2024-04-17 10:43:30 Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-04-17 10:43:30 Initializing Servlet 'dispatcherServlet'
2024-04-17 10:43:30 Completed initialization in 1 ms
2024-04-17 10:43:31 HikariPool-1 - Starting...
2024-04-17 10:43:31 HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@207aa45f
2024-04-17 10:43:31 HikariPool-1 - Start completed.
2024-04-17 10:44:33 [HttpClientBeanHolder] Start destroying common HttpClient
2024-04-17 10:44:33 [NotifyCenter] Start destroying Publisher
2024-04-17 10:44:33 [NotifyCenter] Destruction of the end
2024-04-17 10:44:33 [HttpClientBeanHolder] Destruction of the end
2024-04-17 10:44:36 Starting PayApplication using Java 17.0.5 with PID 56691 (/Users/yh/AndroidStudioProjects/spzx-parent/spzx-service/service-pay/build/classes/java/main started by yh in /Users/yh/AndroidStudioProjects/spzx-parent)
2024-04-17 10:44:36 The following 1 profile is active: "dev"
2024-04-17 10:44:37 Multiple Spring Data modules found, entering strict repository configuration mode
2024-04-17 10:44:37 Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2024-04-17 10:44:37 Finished Spring Data repository scanning in 6 ms. Found 0 Redis repository interfaces.
2024-04-17 10:44:37 BeanFactory id=d26f99ec-e740-322b-99b0-4e8f4f9afff1
2024-04-17 10:44:37 Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$DeferringLoadBalancerInterceptorConfig' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$DeferringLoadBalancerInterceptorConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [lbRestClientPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.
2024-04-17 10:44:37 Bean 'deferringLoadBalancerInterceptor' of type [org.springframework.cloud.client.loadbalancer.DeferringLoadBalancerInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-04-17 10:44:37 Tomcat initialized with port 8512 (http)
2024-04-17 10:44:37 Initializing ProtocolHandler ["http-nio-8512"]
2024-04-17 10:44:37 Starting service [Tomcat]
2024-04-17 10:44:37 Starting Servlet engine: [Apache Tomcat/10.1.19]
2024-04-17 10:44:37 Initializing Spring embedded WebApplicationContext
2024-04-17 10:44:37 Root WebApplicationContext: initialization completed in 1378 ms
2024-04-17 10:44:38 For 'service-order' URL not provided. Will try picking an instance via load-balancing.
2024-04-17 10:44:38 For 'service-product' URL not provided. Will try picking an instance via load-balancing.
2024-04-17 10:44:38 Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-04-17 10:44:38 Starting ProtocolHandler ["http-nio-8512"]
2024-04-17 10:44:38 Tomcat started on port 8512 (http) with context path ''
2024-04-17 10:44:38 initializer namespace from ans.namespace attribute : null
2024-04-17 10:44:38 initializer namespace from ALIBABA_ALIWARE_NAMESPACE attribute :null
2024-04-17 10:44:38 initializer namespace from namespace attribute :null
2024-04-17 10:44:38 null No credential found
2024-04-17 10:44:38 [settings] [req-serv] nacos-server port:8848
2024-04-17 10:44:38 [settings] [http-client] connect timeout:1000
2024-04-17 10:44:38 PER_TASK_CONFIG_SIZE: 3000.0
2024-04-17 10:44:38 [ClientAuthPluginManager] Load ClientAuthService com.alibaba.nacos.client.auth.impl.NacosClientAuthServiceImpl success.
2024-04-17 10:44:38 [ClientAuthPluginManager] Load ClientAuthService com.alibaba.nacos.client.auth.ram.RamClientAuthServiceImpl success.
2024-04-17 10:44:38 [RpcClientFactory] create a new rpc client of cce337c6-598c-4bac-8242-c4615fc30005
2024-04-17 10:44:38 Create naming rpc client for uuid->cce337c6-598c-4bac-8242-c4615fc30005
2024-04-17 10:44:38 [cce337c6-598c-4bac-8242-c4615fc30005] RpcClient init, ServerListFactory = com.alibaba.nacos.client.naming.core.ServerListManager
2024-04-17 10:44:38 [cce337c6-598c-4bac-8242-c4615fc30005] Registry connection listener to current client:com.alibaba.nacos.client.naming.remote.gprc.redo.NamingGrpcRedoService
2024-04-17 10:44:38 [cce337c6-598c-4bac-8242-c4615fc30005] Register server push request handler:com.alibaba.nacos.client.naming.remote.gprc.NamingPushRequestHandler
2024-04-17 10:44:39 [cce337c6-598c-4bac-8242-c4615fc30005] Try to connect to server on start up, server: {serverIp = '14.103.49.141', server main port = 8848}
2024-04-17 10:44:39 grpc client connection server:14.103.49.141 ip,serverPort:9848,grpcTslConfig:{"sslProvider":"","enableTls":false,"mutualAuthEnable":false,"trustAll":false}
2024-04-17 10:44:39 Ready to get current node abilities...
2024-04-17 10:44:39 Ready to initialize current node abilities, support modes: [SDK_CLIENT]
2024-04-17 10:44:39 Initialize current abilities finish...
2024-04-17 10:44:39 [AbilityControlManager] Successfully initialize AbilityControlManager
2024-04-17 10:44:39 [cce337c6-598c-4bac-8242-c4615fc30005] Success to connect to server [14.103.49.141:8848] on start up, connectionId = 1713321879541_183.192.231.186_5190
2024-04-17 10:44:39 [cce337c6-598c-4bac-8242-c4615fc30005] Notify connected event to listeners.
2024-04-17 10:44:39 Grpc connection connect
2024-04-17 10:44:39 [cce337c6-598c-4bac-8242-c4615fc30005] Register server push request handler:com.alibaba.nacos.common.remote.client.RpcClient$ConnectResetRequestHandler
2024-04-17 10:44:39 [cce337c6-598c-4bac-8242-c4615fc30005] Register server push request handler:com.alibaba.nacos.common.remote.client.RpcClient$$Lambda$1289/0x000000080145efa8
2024-04-17 10:44:39 [REGISTER-SERVICE] public registering service service-pay with instance Instance{instanceId='null', ip='192.168.1.8', port=8512, weight=1.0, healthy=true, enabled=true, ephemeral=true, clusterName='DEFAULT', serviceName='null', metadata={IPv6=null, preserved.register.source=SPRING_CLOUD}}
2024-04-17 10:44:39 nacos registry, DEFAULT_GROUP service-pay 192.168.1.8:8512 register finished
2024-04-17 10:44:39 Started PayApplication in 3.744 seconds (process running for 4.293)
2024-04-17 10:46:08 [NotifyCenter] Start destroying Publisher
2024-04-17 10:46:08 [HttpClientBeanHolder] Start destroying common HttpClient
2024-04-17 10:46:08 [NotifyCenter] Destruction of the end
2024-04-17 10:46:08 [HttpClientBeanHolder] Destruction of the end
2024-04-17 10:46:10 Starting PayApplication using Java 17.0.5 with PID 56786 (/Users/yh/AndroidStudioProjects/spzx-parent/spzx-service/service-pay/build/classes/java/main started by yh in /Users/yh/AndroidStudioProjects/spzx-parent)
2024-04-17 10:46:10 The following 1 profile is active: "dev"
2024-04-17 10:46:11 Multiple Spring Data modules found, entering strict repository configuration mode
2024-04-17 10:46:11 Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2024-04-17 10:46:11 Finished Spring Data repository scanning in 6 ms. Found 0 Redis repository interfaces.
2024-04-17 10:46:11 BeanFactory id=d26f99ec-e740-322b-99b0-4e8f4f9afff1
2024-04-17 10:46:11 Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$DeferringLoadBalancerInterceptorConfig' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$DeferringLoadBalancerInterceptorConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [lbRestClientPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.
2024-04-17 10:46:11 Bean 'deferringLoadBalancerInterceptor' of type [org.springframework.cloud.client.loadbalancer.DeferringLoadBalancerInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-04-17 10:46:11 Tomcat initialized with port 8512 (http)
2024-04-17 10:46:11 Initializing ProtocolHandler ["http-nio-8512"]
2024-04-17 10:46:11 Starting service [Tomcat]
2024-04-17 10:46:11 Starting Servlet engine: [Apache Tomcat/10.1.19]
2024-04-17 10:46:11 Initializing Spring embedded WebApplicationContext
2024-04-17 10:46:11 Root WebApplicationContext: initialization completed in 1397 ms
2024-04-17 10:46:12 For 'service-order' URL not provided. Will try picking an instance via load-balancing.
2024-04-17 10:46:12 For 'service-product' URL not provided. Will try picking an instance via load-balancing.
2024-04-17 10:46:12 Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-04-17 10:46:12 Starting ProtocolHandler ["http-nio-8512"]
2024-04-17 10:46:12 Tomcat started on port 8512 (http) with context path ''
2024-04-17 10:46:12 initializer namespace from ans.namespace attribute : null
2024-04-17 10:46:12 initializer namespace from ALIBABA_ALIWARE_NAMESPACE attribute :null
2024-04-17 10:46:12 initializer namespace from namespace attribute :null
2024-04-17 10:46:13 null No credential found
2024-04-17 10:46:13 [settings] [req-serv] nacos-server port:8848
2024-04-17 10:46:13 [settings] [http-client] connect timeout:1000
2024-04-17 10:46:13 PER_TASK_CONFIG_SIZE: 3000.0
2024-04-17 10:46:13 [ClientAuthPluginManager] Load ClientAuthService com.alibaba.nacos.client.auth.impl.NacosClientAuthServiceImpl success.
2024-04-17 10:46:13 [ClientAuthPluginManager] Load ClientAuthService com.alibaba.nacos.client.auth.ram.RamClientAuthServiceImpl success.
2024-04-17 10:46:13 [RpcClientFactory] create a new rpc client of e7c43b92-c297-40e3-90fa-dfb06719c3e3
2024-04-17 10:46:13 Create naming rpc client for uuid->e7c43b92-c297-40e3-90fa-dfb06719c3e3
2024-04-17 10:46:13 [e7c43b92-c297-40e3-90fa-dfb06719c3e3] RpcClient init, ServerListFactory = com.alibaba.nacos.client.naming.core.ServerListManager
2024-04-17 10:46:13 [e7c43b92-c297-40e3-90fa-dfb06719c3e3] Registry connection listener to current client:com.alibaba.nacos.client.naming.remote.gprc.redo.NamingGrpcRedoService
2024-04-17 10:46:13 [e7c43b92-c297-40e3-90fa-dfb06719c3e3] Register server push request handler:com.alibaba.nacos.client.naming.remote.gprc.NamingPushRequestHandler
2024-04-17 10:46:13 [e7c43b92-c297-40e3-90fa-dfb06719c3e3] Try to connect to server on start up, server: {serverIp = '14.103.49.141', server main port = 8848}
2024-04-17 10:46:13 grpc client connection server:14.103.49.141 ip,serverPort:9848,grpcTslConfig:{"sslProvider":"","enableTls":false,"mutualAuthEnable":false,"trustAll":false}
2024-04-17 10:46:13 Ready to get current node abilities...
2024-04-17 10:46:13 Ready to initialize current node abilities, support modes: [SDK_CLIENT]
2024-04-17 10:46:13 Initialize current abilities finish...
2024-04-17 10:46:13 [AbilityControlManager] Successfully initialize AbilityControlManager
2024-04-17 10:46:13 [e7c43b92-c297-40e3-90fa-dfb06719c3e3] Success to connect to server [14.103.49.141:8848] on start up, connectionId = 1713321973592_183.192.231.186_5324
2024-04-17 10:46:13 [e7c43b92-c297-40e3-90fa-dfb06719c3e3] Notify connected event to listeners.
2024-04-17 10:46:13 Grpc connection connect
2024-04-17 10:46:13 [e7c43b92-c297-40e3-90fa-dfb06719c3e3] Register server push request handler:com.alibaba.nacos.common.remote.client.RpcClient$ConnectResetRequestHandler
2024-04-17 10:46:13 [e7c43b92-c297-40e3-90fa-dfb06719c3e3] Register server push request handler:com.alibaba.nacos.common.remote.client.RpcClient$$Lambda$1289/0x000000080147cbc0
2024-04-17 10:46:13 [REGISTER-SERVICE] public registering service service-pay with instance Instance{instanceId='null', ip='192.168.1.8', port=8512, weight=1.0, healthy=true, enabled=true, ephemeral=true, clusterName='DEFAULT', serviceName='null', metadata={IPv6=null, preserved.register.source=SPRING_CLOUD}}
2024-04-17 10:46:13 nacos registry, DEFAULT_GROUP service-pay 192.168.1.8:8512 register finished
2024-04-17 10:46:13 Started PayApplication in 3.826 seconds (process running for 4.515)
2024-04-17 10:46:22 Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-04-17 10:46:22 Initializing Servlet 'dispatcherServlet'
2024-04-17 10:46:22 Completed initialization in 1 ms
2024-04-17 10:46:22 HikariPool-1 - Starting...
2024-04-17 10:46:22 HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@22f48e15
2024-04-17 10:46:23 HikariPool-1 - Start completed.
2024-04-17 10:46:43 [HttpClientBeanHolder] Start destroying common HttpClient
2024-04-17 10:46:43 [NotifyCenter] Start destroying Publisher
2024-04-17 10:46:43 [NotifyCenter] Destruction of the end
2024-04-17 10:46:43 [HttpClientBeanHolder] Destruction of the end
2024-04-17 10:46:44 Starting PayApplication using Java 17.0.5 with PID 56825 (/Users/yh/AndroidStudioProjects/spzx-parent/spzx-service/service-pay/build/classes/java/main started by yh in /Users/yh/AndroidStudioProjects/spzx-parent)
2024-04-17 10:46:44 The following 1 profile is active: "dev"
2024-04-17 10:46:45 Multiple Spring Data modules found, entering strict repository configuration mode
2024-04-17 10:46:45 Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2024-04-17 10:46:45 Finished Spring Data repository scanning in 5 ms. Found 0 Redis repository interfaces.
2024-04-17 10:46:45 BeanFactory id=d26f99ec-e740-322b-99b0-4e8f4f9afff1
2024-04-17 10:46:46 Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$DeferringLoadBalancerInterceptorConfig' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$DeferringLoadBalancerInterceptorConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [lbRestClientPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.
2024-04-17 10:46:46 Bean 'deferringLoadBalancerInterceptor' of type [org.springframework.cloud.client.loadbalancer.DeferringLoadBalancerInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-04-17 10:46:46 Tomcat initialized with port 8512 (http)
2024-04-17 10:46:46 Initializing ProtocolHandler ["http-nio-8512"]
2024-04-17 10:46:46 Starting service [Tomcat]
2024-04-17 10:46:46 Starting Servlet engine: [Apache Tomcat/10.1.19]
2024-04-17 10:46:46 Initializing Spring embedded WebApplicationContext
2024-04-17 10:46:46 Root WebApplicationContext: initialization completed in 1223 ms
2024-04-17 10:46:46 For 'service-order' URL not provided. Will try picking an instance via load-balancing.
2024-04-17 10:46:46 For 'service-product' URL not provided. Will try picking an instance via load-balancing.
2024-04-17 10:46:47 Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-04-17 10:46:47 Starting ProtocolHandler ["http-nio-8512"]
2024-04-17 10:46:47 Tomcat started on port 8512 (http) with context path ''
2024-04-17 10:46:47 initializer namespace from ans.namespace attribute : null
2024-04-17 10:46:47 initializer namespace from ALIBABA_ALIWARE_NAMESPACE attribute :null
2024-04-17 10:46:47 initializer namespace from namespace attribute :null
2024-04-17 10:46:47 [settings] [req-serv] nacos-server port:8848
2024-04-17 10:46:47 [settings] [http-client] connect timeout:1000
2024-04-17 10:46:47 PER_TASK_CONFIG_SIZE: 3000.0
2024-04-17 10:46:47 null No credential found
2024-04-17 10:46:47 [ClientAuthPluginManager] Load ClientAuthService com.alibaba.nacos.client.auth.impl.NacosClientAuthServiceImpl success.
2024-04-17 10:46:47 [ClientAuthPluginManager] Load ClientAuthService com.alibaba.nacos.client.auth.ram.RamClientAuthServiceImpl success.
2024-04-17 10:46:47 [RpcClientFactory] create a new rpc client of 279195b2-f831-484c-aea5-ba1446df8383
2024-04-17 10:46:47 Create naming rpc client for uuid->279195b2-f831-484c-aea5-ba1446df8383
2024-04-17 10:46:47 [279195b2-f831-484c-aea5-ba1446df8383] RpcClient init, ServerListFactory = com.alibaba.nacos.client.naming.core.ServerListManager
2024-04-17 10:46:47 [279195b2-f831-484c-aea5-ba1446df8383] Registry connection listener to current client:com.alibaba.nacos.client.naming.remote.gprc.redo.NamingGrpcRedoService
2024-04-17 10:46:47 [279195b2-f831-484c-aea5-ba1446df8383] Register server push request handler:com.alibaba.nacos.client.naming.remote.gprc.NamingPushRequestHandler
2024-04-17 10:46:47 [279195b2-f831-484c-aea5-ba1446df8383] Try to connect to server on start up, server: {serverIp = '14.103.49.141', server main port = 8848}
2024-04-17 10:46:47 grpc client connection server:14.103.49.141 ip,serverPort:9848,grpcTslConfig:{"sslProvider":"","enableTls":false,"mutualAuthEnable":false,"trustAll":false}
2024-04-17 10:46:47 Ready to get current node abilities...
2024-04-17 10:46:47 Ready to initialize current node abilities, support modes: [SDK_CLIENT]
2024-04-17 10:46:47 Initialize current abilities finish...
2024-04-17 10:46:47 [AbilityControlManager] Successfully initialize AbilityControlManager
2024-04-17 10:46:47 [279195b2-f831-484c-aea5-ba1446df8383] Success to connect to server [14.103.49.141:8848] on start up, connectionId = 1713322007767_183.192.231.186_5406
2024-04-17 10:46:47 [279195b2-f831-484c-aea5-ba1446df8383] Notify connected event to listeners.
2024-04-17 10:46:47 Grpc connection connect
2024-04-17 10:46:47 [279195b2-f831-484c-aea5-ba1446df8383] Register server push request handler:com.alibaba.nacos.common.remote.client.RpcClient$ConnectResetRequestHandler
2024-04-17 10:46:47 [279195b2-f831-484c-aea5-ba1446df8383] Register server push request handler:com.alibaba.nacos.common.remote.client.RpcClient$$Lambda$1289/0x0000000801460450
2024-04-17 10:46:47 [REGISTER-SERVICE] public registering service service-pay with instance Instance{instanceId='null', ip='192.168.1.8', port=8512, weight=1.0, healthy=true, enabled=true, ephemeral=true, clusterName='DEFAULT', serviceName='null', metadata={IPv6=null, preserved.register.source=SPRING_CLOUD}}
2024-04-17 10:46:47 nacos registry, DEFAULT_GROUP service-pay 192.168.1.8:8512 register finished
2024-04-17 10:46:47 Started PayApplication in 3.354 seconds (process running for 3.915)
2024-04-17 10:46:55 Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-04-17 10:46:55 Initializing Servlet 'dispatcherServlet'
2024-04-17 10:46:55 Completed initialization in 1 ms
2024-04-17 10:46:56 HikariPool-1 - Starting...
2024-04-17 10:46:56 HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@7c899094
2024-04-17 10:46:56 HikariPool-1 - Start completed.
2024-04-17 11:46:31 HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=14m34s390ms).
2024-04-17 11:46:43 [279195b2-f831-484c-aea5-ba1446df8383] Server healthy check fail, currentConnection = 1713322007767_183.192.231.186_5406
2024-04-17 11:46:43 [279195b2-f831-484c-aea5-ba1446df8383] Try to reconnect to a new server, server is  not appointed, will choose a random server.
2024-04-17 11:46:43 grpc client connection server:14.103.49.141 ip,serverPort:9848,grpcTslConfig:{"sslProvider":"","enableTls":false,"mutualAuthEnable":false,"trustAll":false}
2024-04-17 11:46:43 [279195b2-f831-484c-aea5-ba1446df8383] Success to connect a server [14.103.49.141:8848], connectionId = 1713325603292_183.192.231.186_5546
2024-04-17 11:46:43 [279195b2-f831-484c-aea5-ba1446df8383] Abandon prev connection, server is 14.103.49.141:8848, connectionId is 1713322007767_183.192.231.186_5406
2024-04-17 11:46:43 Close current connection 1713322007767_183.192.231.186_5406
2024-04-17 11:46:43 [1713322007767_183.192.231.186_5406]Ignore error event,isRunning:false,isAbandon=true
2024-04-17 11:46:43 [279195b2-f831-484c-aea5-ba1446df8383] Notify disconnected event to listeners
2024-04-17 11:46:43 Grpc connection disconnect, mark to redo
2024-04-17 11:46:43 mark to redo completed
2024-04-17 11:46:43 [279195b2-f831-484c-aea5-ba1446df8383] Notify connected event to listeners.
2024-04-17 11:46:43 Grpc connection connect
2024-04-17 11:46:46 Redo instance operation REGISTER for DEFAULT_GROUP@@service-pay
2024-04-17 12:09:24 [HttpClientBeanHolder] Start destroying common HttpClient
2024-04-17 12:09:24 [NotifyCenter] Start destroying Publisher
2024-04-17 12:09:24 [NotifyCenter] Destruction of the end
2024-04-17 12:09:24 [HttpClientBeanHolder] Destruction of the end
