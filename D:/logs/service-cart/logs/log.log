2024-04-29 19:05:48 Starting CartApplication using Java 17.0.5 with PID 26466 (/Users/yh/AndroidStudioProjects/spzx-parent/spzx-service/service-cart/build/classes/java/main started by yh in /Users/yh/AndroidStudioProjects/spzx-parent)
2024-04-29 19:05:48 The following 1 profile is active: "dev"
2024-04-29 19:05:49 Multiple Spring Data modules found, entering strict repository configuration mode
2024-04-29 19:05:49 Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2024-04-29 19:05:49 Finished Spring Data repository scanning in 11 ms. Found 0 Redis repository interfaces.
2024-04-29 19:05:50 BeanFactory id=a5d3380a-61ef-3701-8823-659dc43bef8d
2024-04-29 19:05:50 Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$DeferringLoadBalancerInterceptorConfig' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$DeferringLoadBalancerInterceptorConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [lbRestClientPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.
2024-04-29 19:05:50 Bean 'deferringLoadBalancerInterceptor' of type [org.springframework.cloud.client.loadbalancer.DeferringLoadBalancerInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-04-29 19:05:50 Tomcat initialized with port 8514 (http)
2024-04-29 19:05:50 Initializing ProtocolHandler ["http-nio-8514"]
2024-04-29 19:05:50 Starting service [Tomcat]
2024-04-29 19:05:50 Starting Servlet engine: [Apache Tomcat/10.1.19]
2024-04-29 19:05:50 Initializing Spring embedded WebApplicationContext
2024-04-29 19:05:50 Root WebApplicationContext: initialization completed in 2503 ms
2024-04-29 19:05:52 Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-04-29 19:05:53 Starting ProtocolHandler ["http-nio-8514"]
2024-04-29 19:05:53 Tomcat started on port 8514 (http) with context path ''
2024-04-29 19:05:53 initializer namespace from ans.namespace attribute : null
2024-04-29 19:05:53 initializer namespace from ALIBABA_ALIWARE_NAMESPACE attribute :null
2024-04-29 19:05:53 initializer namespace from namespace attribute :null
2024-04-29 19:05:53 [settings] [req-serv] nacos-server port:8848
2024-04-29 19:05:53 [settings] [http-client] connect timeout:1000
2024-04-29 19:05:53 PER_TASK_CONFIG_SIZE: 3000.0
2024-04-29 19:05:53 null No credential found
2024-04-29 19:05:53 [ClientAuthPluginManager] Load ClientAuthService com.alibaba.nacos.client.auth.impl.NacosClientAuthServiceImpl success.
2024-04-29 19:05:53 [ClientAuthPluginManager] Load ClientAuthService com.alibaba.nacos.client.auth.ram.RamClientAuthServiceImpl success.
2024-04-29 19:05:53 [RpcClientFactory] create a new rpc client of 8c1cb383-4c2f-4b46-a818-feecc5dd0b00
2024-04-29 19:05:53 Create naming rpc client for uuid->8c1cb383-4c2f-4b46-a818-feecc5dd0b00
2024-04-29 19:05:53 [8c1cb383-4c2f-4b46-a818-feecc5dd0b00] RpcClient init, ServerListFactory = com.alibaba.nacos.client.naming.core.ServerListManager
2024-04-29 19:05:53 [8c1cb383-4c2f-4b46-a818-feecc5dd0b00] Registry connection listener to current client:com.alibaba.nacos.client.naming.remote.gprc.redo.NamingGrpcRedoService
2024-04-29 19:05:53 [8c1cb383-4c2f-4b46-a818-feecc5dd0b00] Register server push request handler:com.alibaba.nacos.client.naming.remote.gprc.NamingPushRequestHandler
2024-04-29 19:05:53 [8c1cb383-4c2f-4b46-a818-feecc5dd0b00] Try to connect to server on start up, server: {serverIp = '14.103.49.141', server main port = 8848}
2024-04-29 19:05:53 grpc client connection server:14.103.49.141 ip,serverPort:9848,grpcTslConfig:{"sslProvider":"","enableTls":false,"mutualAuthEnable":false,"trustAll":false}
2024-04-29 19:05:54 Ready to get current node abilities...
2024-04-29 19:05:54 Ready to initialize current node abilities, support modes: [SDK_CLIENT]
2024-04-29 19:05:54 Initialize current abilities finish...
2024-04-29 19:05:54 [AbilityControlManager] Successfully initialize AbilityControlManager
2024-04-29 19:05:54 [8c1cb383-4c2f-4b46-a818-feecc5dd0b00] Success to connect to server [14.103.49.141:8848] on start up, connectionId = 1714388754246_183.192.230.83_1516
2024-04-29 19:05:54 [8c1cb383-4c2f-4b46-a818-feecc5dd0b00] Notify connected event to listeners.
2024-04-29 19:05:54 Grpc connection connect
2024-04-29 19:05:54 [8c1cb383-4c2f-4b46-a818-feecc5dd0b00] Register server push request handler:com.alibaba.nacos.common.remote.client.RpcClient$ConnectResetRequestHandler
2024-04-29 19:05:54 [8c1cb383-4c2f-4b46-a818-feecc5dd0b00] Register server push request handler:com.alibaba.nacos.common.remote.client.RpcClient$$Lambda$1246/0x0000000801463ad0
2024-04-29 19:05:54 [REGISTER-SERVICE] public registering service service-cart with instance Instance{instanceId='null', ip='192.168.1.3', port=8514, weight=1.0, healthy=true, enabled=true, ephemeral=true, clusterName='DEFAULT', serviceName='null', metadata={IPv6=null, preserved.register.source=SPRING_CLOUD}}
2024-04-29 19:05:54 nacos registry, DEFAULT_GROUP service-cart 192.168.1.3:8514 register finished
2024-04-29 19:05:54 Started CartApplication in 6.627 seconds (process running for 7.344)
2024-04-29 19:06:06 [NotifyCenter] Start destroying Publisher
2024-04-29 19:06:06 [HttpClientBeanHolder] Start destroying common HttpClient
2024-04-29 19:06:06 [NotifyCenter] Destruction of the end
2024-04-29 19:06:06 [HttpClientBeanHolder] Destruction of the end
2024-04-29 19:18:04 Starting CartApplication using Java 17.0.5 with PID 27115 (/Users/yh/AndroidStudioProjects/spzx-parent/spzx-service/service-cart/build/classes/java/main started by yh in /Users/yh/AndroidStudioProjects/spzx-parent)
2024-04-29 19:18:04 The following 1 profile is active: "dev"
2024-04-29 19:18:05 Multiple Spring Data modules found, entering strict repository configuration mode
2024-04-29 19:18:05 Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2024-04-29 19:18:05 Finished Spring Data repository scanning in 16 ms. Found 0 Redis repository interfaces.
2024-04-29 19:18:06 BeanFactory id=a5d3380a-61ef-3701-8823-659dc43bef8d
2024-04-29 19:18:06 Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$DeferringLoadBalancerInterceptorConfig' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$DeferringLoadBalancerInterceptorConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [lbRestClientPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.
2024-04-29 19:18:06 Bean 'deferringLoadBalancerInterceptor' of type [org.springframework.cloud.client.loadbalancer.DeferringLoadBalancerInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-04-29 19:18:07 Tomcat initialized with port 8514 (http)
2024-04-29 19:18:07 Initializing ProtocolHandler ["http-nio-8514"]
2024-04-29 19:18:07 Starting service [Tomcat]
2024-04-29 19:18:07 Starting Servlet engine: [Apache Tomcat/10.1.19]
2024-04-29 19:18:07 Initializing Spring embedded WebApplicationContext
2024-04-29 19:18:07 Root WebApplicationContext: initialization completed in 2991 ms
2024-04-29 19:18:10 Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-04-29 19:18:10 Starting ProtocolHandler ["http-nio-8514"]
2024-04-29 19:18:10 Tomcat started on port 8514 (http) with context path ''
2024-04-29 19:18:10 initializer namespace from ans.namespace attribute : null
2024-04-29 19:18:10 initializer namespace from ALIBABA_ALIWARE_NAMESPACE attribute :null
2024-04-29 19:18:10 initializer namespace from namespace attribute :null
2024-04-29 19:18:10 [settings] [req-serv] nacos-server port:8848
2024-04-29 19:18:10 [settings] [http-client] connect timeout:1000
2024-04-29 19:18:10 PER_TASK_CONFIG_SIZE: 3000.0
2024-04-29 19:18:10 null No credential found
2024-04-29 19:18:10 [ClientAuthPluginManager] Load ClientAuthService com.alibaba.nacos.client.auth.impl.NacosClientAuthServiceImpl success.
2024-04-29 19:18:10 [ClientAuthPluginManager] Load ClientAuthService com.alibaba.nacos.client.auth.ram.RamClientAuthServiceImpl success.
2024-04-29 19:18:10 [RpcClientFactory] create a new rpc client of 7580c44d-e8f7-4990-84fc-93e319ff4a20
2024-04-29 19:18:10 Create naming rpc client for uuid->7580c44d-e8f7-4990-84fc-93e319ff4a20
2024-04-29 19:18:10 [7580c44d-e8f7-4990-84fc-93e319ff4a20] RpcClient init, ServerListFactory = com.alibaba.nacos.client.naming.core.ServerListManager
2024-04-29 19:18:10 [7580c44d-e8f7-4990-84fc-93e319ff4a20] Registry connection listener to current client:com.alibaba.nacos.client.naming.remote.gprc.redo.NamingGrpcRedoService
2024-04-29 19:18:10 [7580c44d-e8f7-4990-84fc-93e319ff4a20] Register server push request handler:com.alibaba.nacos.client.naming.remote.gprc.NamingPushRequestHandler
2024-04-29 19:18:10 [7580c44d-e8f7-4990-84fc-93e319ff4a20] Try to connect to server on start up, server: {serverIp = '14.103.49.141', server main port = 8848}
2024-04-29 19:18:10 grpc client connection server:14.103.49.141 ip,serverPort:9848,grpcTslConfig:{"sslProvider":"","enableTls":false,"mutualAuthEnable":false,"trustAll":false}
2024-04-29 19:18:11 Ready to get current node abilities...
2024-04-29 19:18:11 Ready to initialize current node abilities, support modes: [SDK_CLIENT]
2024-04-29 19:18:11 Initialize current abilities finish...
2024-04-29 19:18:11 [AbilityControlManager] Successfully initialize AbilityControlManager
2024-04-29 19:18:11 [7580c44d-e8f7-4990-84fc-93e319ff4a20] Success to connect to server [14.103.49.141:8848] on start up, connectionId = 1714389491194_183.192.230.83_1200
2024-04-29 19:18:11 [7580c44d-e8f7-4990-84fc-93e319ff4a20] Notify connected event to listeners.
2024-04-29 19:18:11 Grpc connection connect
2024-04-29 19:18:11 [7580c44d-e8f7-4990-84fc-93e319ff4a20] Register server push request handler:com.alibaba.nacos.common.remote.client.RpcClient$ConnectResetRequestHandler
2024-04-29 19:18:11 [7580c44d-e8f7-4990-84fc-93e319ff4a20] Register server push request handler:com.alibaba.nacos.common.remote.client.RpcClient$$Lambda$1246/0x000000080145a3d0
2024-04-29 19:18:11 [REGISTER-SERVICE] public registering service service-cart with instance Instance{instanceId='null', ip='192.168.1.3', port=8514, weight=1.0, healthy=true, enabled=true, ephemeral=true, clusterName='DEFAULT', serviceName='null', metadata={IPv6=null, preserved.register.source=SPRING_CLOUD}}
2024-04-29 19:18:11 nacos registry, DEFAULT_GROUP service-cart 192.168.1.3:8514 register finished
2024-04-29 19:18:11 Started CartApplication in 7.789 seconds (process running for 8.385)
2024-04-29 19:20:02 [HttpClientBeanHolder] Start destroying common HttpClient
2024-04-29 19:20:02 [NotifyCenter] Start destroying Publisher
2024-04-29 19:20:02 [NotifyCenter] Destruction of the end
2024-04-29 19:20:02 [HttpClientBeanHolder] Destruction of the end
