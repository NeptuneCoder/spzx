2024-04-11 21:32:52 Starting CartApplication using Java 17.0.5 with PID 45018 (/Users/yh/AndroidStudioProjects/spzx-parent/spzx-service/service-cart/build/classes/java/main started by yh in /Users/yh/AndroidStudioProjects/spzx-parent)
2024-04-11 21:32:52 The following 1 profile is active: "dev"
2024-04-11 21:32:52 Multiple Spring Data modules found, entering strict repository configuration mode
2024-04-11 21:32:52 Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2024-04-11 21:32:52 Finished Spring Data repository scanning in 5 ms. Found 0 Redis repository interfaces.
2024-04-11 21:32:53 No MyBatis mapper was found in '[com.atguigu.spzx.cart]' package. Please check your configuration.
2024-04-11 21:32:53 Tomcat initialized with port 8514 (http)
2024-04-11 21:32:53 Initializing ProtocolHandler ["http-nio-8514"]
2024-04-11 21:32:53 Starting service [Tomcat]
2024-04-11 21:32:53 Starting Servlet engine: [Apache Tomcat/10.1.19]
2024-04-11 21:32:53 Initializing Spring embedded WebApplicationContext
2024-04-11 21:32:53 Root WebApplicationContext: initialization completed in 979 ms
2024-04-11 21:32:54 Starting ProtocolHandler ["http-nio-8514"]
2024-04-11 21:32:54 Tomcat started on port 8514 (http) with context path ''
2024-04-11 21:32:54 Started CartApplication in 2.091 seconds (process running for 2.673)
2024-04-14 11:50:35 Starting CartApplication using Java 17.0.5 with PID 7976 (/Users/yh/AndroidStudioProjects/spzx-parent/spzx-service/service-cart/build/classes/java/main started by yh in /Users/yh/AndroidStudioProjects/spzx-parent)
2024-04-14 11:50:35 The following 1 profile is active: "dev"
2024-04-14 11:50:35 Multiple Spring Data modules found, entering strict repository configuration mode
2024-04-14 11:50:35 Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2024-04-14 11:50:35 Finished Spring Data repository scanning in 4 ms. Found 0 Redis repository interfaces.
2024-04-14 11:50:36 No MyBatis mapper was found in '[com.atguigu.spzx.cart]' package. Please check your configuration.
2024-04-14 11:50:36 BeanFactory id=d6fb92e3-310c-3d45-9eda-1dfe65155559
2024-04-14 11:50:36 Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$DeferringLoadBalancerInterceptorConfig' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$DeferringLoadBalancerInterceptorConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [lbRestClientPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.
2024-04-14 11:50:36 Bean 'deferringLoadBalancerInterceptor' of type [org.springframework.cloud.client.loadbalancer.DeferringLoadBalancerInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-04-14 11:50:36 Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [loadBalancerWebClientBuilderBeanPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.
2024-04-14 11:50:36 Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [loadBalancerWebClientBuilderBeanPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-04-14 11:50:36 Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [loadBalancerWebClientBuilderBeanPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-04-14 11:50:36 Tomcat initialized with port 8514 (http)
2024-04-14 11:50:36 Initializing ProtocolHandler ["http-nio-8514"]
2024-04-14 11:50:36 Starting service [Tomcat]
2024-04-14 11:50:36 Starting Servlet engine: [Apache Tomcat/10.1.19]
2024-04-14 11:50:36 Initializing Spring embedded WebApplicationContext
2024-04-14 11:50:36 Root WebApplicationContext: initialization completed in 1331 ms
2024-04-14 11:50:36 For 'service-product' URL not provided. Will try picking an instance via load-balancing.
2024-04-14 11:50:37 Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-04-14 11:50:37 Starting ProtocolHandler ["http-nio-8514"]
2024-04-14 11:50:37 Tomcat started on port 8514 (http) with context path ''
2024-04-14 11:50:37 Started CartApplication in 3.313 seconds (process running for 3.789)
2024-04-14 11:56:41 Starting CartApplication using Java 17.0.5 with PID 8224 (/Users/yh/AndroidStudioProjects/spzx-parent/spzx-service/service-cart/build/classes/java/main started by yh in /Users/yh/AndroidStudioProjects/spzx-parent)
2024-04-14 11:56:41 The following 1 profile is active: "dev"
2024-04-14 11:56:41 Multiple Spring Data modules found, entering strict repository configuration mode
2024-04-14 11:56:41 Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2024-04-14 11:56:41 Finished Spring Data repository scanning in 6 ms. Found 0 Redis repository interfaces.
2024-04-14 11:56:42 No MyBatis mapper was found in '[com.atguigu.spzx.cart]' package. Please check your configuration.
2024-04-14 11:56:42 BeanFactory id=2d53ddbb-2726-3cfe-931b-43e5e238c112
2024-04-14 11:56:42 Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$DeferringLoadBalancerInterceptorConfig' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$DeferringLoadBalancerInterceptorConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [lbRestClientPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.
2024-04-14 11:56:42 Bean 'deferringLoadBalancerInterceptor' of type [org.springframework.cloud.client.loadbalancer.DeferringLoadBalancerInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-04-14 11:56:42 Tomcat initialized with port 8514 (http)
2024-04-14 11:56:42 Initializing ProtocolHandler ["http-nio-8514"]
2024-04-14 11:56:42 Starting service [Tomcat]
2024-04-14 11:56:42 Starting Servlet engine: [Apache Tomcat/10.1.19]
2024-04-14 11:56:42 Initializing Spring embedded WebApplicationContext
2024-04-14 11:56:42 Root WebApplicationContext: initialization completed in 1321 ms
2024-04-14 11:56:42 For 'service-product' URL not provided. Will try picking an instance via load-balancing.
2024-04-14 11:56:43 Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-04-14 11:56:43 Starting ProtocolHandler ["http-nio-8514"]
2024-04-14 11:56:43 Tomcat started on port 8514 (http) with context path ''
2024-04-14 11:56:43 Started CartApplication in 2.883 seconds (process running for 3.406)
2024-04-14 12:36:30 Starting CartApplication using Java 17.0.5 with PID 9170 (/Users/yh/AndroidStudioProjects/spzx-parent/spzx-service/service-cart/build/classes/java/main started by yh in /Users/yh/AndroidStudioProjects/spzx-parent)
2024-04-14 12:36:30 The following 1 profile is active: "dev"
2024-04-14 12:36:31 Multiple Spring Data modules found, entering strict repository configuration mode
2024-04-14 12:36:31 Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2024-04-14 12:36:31 Finished Spring Data repository scanning in 5 ms. Found 0 Redis repository interfaces.
2024-04-14 12:36:31 No MyBatis mapper was found in '[com.atguigu.spzx.cart]' package. Please check your configuration.
2024-04-14 12:36:31 BeanFactory id=2d53ddbb-2726-3cfe-931b-43e5e238c112
2024-04-14 12:36:31 Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$DeferringLoadBalancerInterceptorConfig' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$DeferringLoadBalancerInterceptorConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [lbRestClientPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.
2024-04-14 12:36:31 Bean 'deferringLoadBalancerInterceptor' of type [org.springframework.cloud.client.loadbalancer.DeferringLoadBalancerInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-04-14 12:36:31 Tomcat initialized with port 8514 (http)
2024-04-14 12:36:31 Initializing ProtocolHandler ["http-nio-8514"]
2024-04-14 12:36:31 Starting service [Tomcat]
2024-04-14 12:36:31 Starting Servlet engine: [Apache Tomcat/10.1.19]
2024-04-14 12:36:31 Initializing Spring embedded WebApplicationContext
2024-04-14 12:36:31 Root WebApplicationContext: initialization completed in 1541 ms
2024-04-14 12:36:32 For 'service-product' URL not provided. Will try picking an instance via load-balancing.
2024-04-14 12:36:33 Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-04-14 12:36:33 Starting ProtocolHandler ["http-nio-8514"]
2024-04-14 12:36:33 Tomcat started on port 8514 (http) with context path ''
2024-04-14 12:36:33 Started CartApplication in 3.353 seconds (process running for 4.041)
2024-04-14 13:02:15 Starting CartApplication using Java 17.0.5 with PID 9732 (/Users/yh/AndroidStudioProjects/spzx-parent/spzx-service/service-cart/build/classes/java/main started by yh in /Users/yh/AndroidStudioProjects/spzx-parent)
2024-04-14 13:02:15 The following 1 profile is active: "dev"
2024-04-14 13:02:15 Multiple Spring Data modules found, entering strict repository configuration mode
2024-04-14 13:02:15 Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2024-04-14 13:02:15 Finished Spring Data repository scanning in 6 ms. Found 0 Redis repository interfaces.
2024-04-14 13:02:16 No MyBatis mapper was found in '[com.atguigu.spzx.cart]' package. Please check your configuration.
2024-04-14 13:02:16 BeanFactory id=2d53ddbb-2726-3cfe-931b-43e5e238c112
2024-04-14 13:02:16 Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$DeferringLoadBalancerInterceptorConfig' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$DeferringLoadBalancerInterceptorConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [lbRestClientPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.
2024-04-14 13:02:16 Bean 'deferringLoadBalancerInterceptor' of type [org.springframework.cloud.client.loadbalancer.DeferringLoadBalancerInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-04-14 13:02:16 Tomcat initialized with port 8514 (http)
2024-04-14 13:02:16 Initializing ProtocolHandler ["http-nio-8514"]
2024-04-14 13:02:16 Starting service [Tomcat]
2024-04-14 13:02:16 Starting Servlet engine: [Apache Tomcat/10.1.19]
2024-04-14 13:02:16 Initializing Spring embedded WebApplicationContext
2024-04-14 13:02:16 Root WebApplicationContext: initialization completed in 1358 ms
2024-04-14 13:02:16 For 'service-product' URL not provided. Will try picking an instance via load-balancing.
2024-04-14 13:02:17 Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-04-14 13:02:17 Starting ProtocolHandler ["http-nio-8514"]
2024-04-14 13:02:17 Tomcat started on port 8514 (http) with context path ''
2024-04-14 13:02:17 Started CartApplication in 2.837 seconds (process running for 3.317)
2024-04-16 09:27:58 Starting CartApplication using Java 17.0.5 with PID 1368 (/Users/yh/AndroidStudioProjects/spzx-parent/spzx-service/service-cart/build/classes/java/main started by yh in /Users/yh/AndroidStudioProjects/spzx-parent)
2024-04-16 09:27:58 The following 1 profile is active: "dev"
2024-04-16 09:27:59 Multiple Spring Data modules found, entering strict repository configuration mode
2024-04-16 09:27:59 Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2024-04-16 09:27:59 Finished Spring Data repository scanning in 6 ms. Found 0 Redis repository interfaces.
2024-04-16 09:27:59 No MyBatis mapper was found in '[com.atguigu.spzx.cart]' package. Please check your configuration.
2024-04-16 09:27:59 BeanFactory id=2d53ddbb-2726-3cfe-931b-43e5e238c112
2024-04-16 09:27:59 Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$DeferringLoadBalancerInterceptorConfig' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$DeferringLoadBalancerInterceptorConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [lbRestClientPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.
2024-04-16 09:27:59 Bean 'deferringLoadBalancerInterceptor' of type [org.springframework.cloud.client.loadbalancer.DeferringLoadBalancerInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-04-16 09:28:00 Tomcat initialized with port 8514 (http)
2024-04-16 09:28:00 Initializing ProtocolHandler ["http-nio-8514"]
2024-04-16 09:28:00 Starting service [Tomcat]
2024-04-16 09:28:00 Starting Servlet engine: [Apache Tomcat/10.1.19]
2024-04-16 09:28:00 Initializing Spring embedded WebApplicationContext
2024-04-16 09:28:00 Root WebApplicationContext: initialization completed in 1462 ms
2024-04-16 09:28:00 For 'service-product' URL not provided. Will try picking an instance via load-balancing.
2024-04-16 09:28:01 Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-04-16 09:28:01 Starting ProtocolHandler ["http-nio-8514"]
2024-04-16 09:28:01 Tomcat started on port 8514 (http) with context path ''
2024-04-16 09:28:01 Started CartApplication in 3.027 seconds (process running for 3.572)
2024-04-16 09:57:26 Starting CartApplication using Java 17.0.5 with PID 4708 (/Users/yh/AndroidStudioProjects/spzx-parent/spzx-service/service-cart/build/classes/java/main started by yh in /Users/yh/AndroidStudioProjects/spzx-parent)
2024-04-16 09:57:26 The following 1 profile is active: "dev"
2024-04-16 09:57:27 Multiple Spring Data modules found, entering strict repository configuration mode
2024-04-16 09:57:27 Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2024-04-16 09:57:27 Finished Spring Data repository scanning in 5 ms. Found 0 Redis repository interfaces.
2024-04-16 09:57:27 No MyBatis mapper was found in '[com.atguigu.spzx.cart]' package. Please check your configuration.
2024-04-16 09:57:27 BeanFactory id=2d53ddbb-2726-3cfe-931b-43e5e238c112
2024-04-16 09:57:27 Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$DeferringLoadBalancerInterceptorConfig' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$DeferringLoadBalancerInterceptorConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [lbRestClientPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.
2024-04-16 09:57:27 Bean 'deferringLoadBalancerInterceptor' of type [org.springframework.cloud.client.loadbalancer.DeferringLoadBalancerInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-04-16 09:57:27 Tomcat initialized with port 8514 (http)
2024-04-16 09:57:27 Initializing ProtocolHandler ["http-nio-8514"]
2024-04-16 09:57:27 Starting service [Tomcat]
2024-04-16 09:57:27 Starting Servlet engine: [Apache Tomcat/10.1.19]
2024-04-16 09:57:27 Initializing Spring embedded WebApplicationContext
2024-04-16 09:57:27 Root WebApplicationContext: initialization completed in 1552 ms
2024-04-16 09:57:28 For 'service-product' URL not provided. Will try picking an instance via load-balancing.
2024-04-16 09:57:29 Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-04-16 09:57:29 Starting ProtocolHandler ["http-nio-8514"]
2024-04-16 09:57:29 Exception encountered during context initialization - cancelling refresh attempt: org.springframework.context.ApplicationContextException: Failed to start bean 'webServerStartStop'
2024-04-16 09:57:29 

Error starting ApplicationContext. To display the condition evaluation report re-run your application with 'debug' enabled.
2024-04-16 09:57:29 

***************************
APPLICATION FAILED TO START
***************************

Description:

Web server failed to start. Port 8514 was already in use.

Action:

Identify and stop the process that's listening on port 8514 or configure this application to listen on another port.

2024-04-16 09:58:01 Starting CartApplication using Java 17.0.5 with PID 4749 (/Users/yh/AndroidStudioProjects/spzx-parent/spzx-service/service-cart/build/classes/java/main started by yh in /Users/yh/AndroidStudioProjects/spzx-parent)
2024-04-16 09:58:01 The following 1 profile is active: "dev"
2024-04-16 09:58:02 Multiple Spring Data modules found, entering strict repository configuration mode
2024-04-16 09:58:02 Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2024-04-16 09:58:02 Finished Spring Data repository scanning in 4 ms. Found 0 Redis repository interfaces.
2024-04-16 09:58:02 No MyBatis mapper was found in '[com.atguigu.spzx.cart]' package. Please check your configuration.
2024-04-16 09:58:02 BeanFactory id=2d53ddbb-2726-3cfe-931b-43e5e238c112
2024-04-16 09:58:02 Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$DeferringLoadBalancerInterceptorConfig' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$DeferringLoadBalancerInterceptorConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [lbRestClientPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.
2024-04-16 09:58:02 Bean 'deferringLoadBalancerInterceptor' of type [org.springframework.cloud.client.loadbalancer.DeferringLoadBalancerInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-04-16 09:58:02 Tomcat initialized with port 8514 (http)
2024-04-16 09:58:02 Initializing ProtocolHandler ["http-nio-8514"]
2024-04-16 09:58:02 Starting service [Tomcat]
2024-04-16 09:58:02 Starting Servlet engine: [Apache Tomcat/10.1.19]
2024-04-16 09:58:02 Initializing Spring embedded WebApplicationContext
2024-04-16 09:58:02 Root WebApplicationContext: initialization completed in 1194 ms
2024-04-16 09:58:03 For 'service-product' URL not provided. Will try picking an instance via load-balancing.
2024-04-16 09:58:03 Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-04-16 09:58:03 Starting ProtocolHandler ["http-nio-8514"]
2024-04-16 09:58:03 Exception encountered during context initialization - cancelling refresh attempt: org.springframework.context.ApplicationContextException: Failed to start bean 'webServerStartStop'
2024-04-16 09:58:03 

Error starting ApplicationContext. To display the condition evaluation report re-run your application with 'debug' enabled.
2024-04-16 09:58:03 

***************************
APPLICATION FAILED TO START
***************************

Description:

Web server failed to start. Port 8514 was already in use.

Action:

Identify and stop the process that's listening on port 8514 or configure this application to listen on another port.

2024-04-16 10:04:10 Starting CartApplication using Java 17.0.5 with PID 5201 (/Users/yh/AndroidStudioProjects/spzx-parent/spzx-service/service-cart/build/classes/java/main started by yh in /Users/yh/AndroidStudioProjects/spzx-parent)
2024-04-16 10:04:10 The following 1 profile is active: "dev"
2024-04-16 10:04:11 Multiple Spring Data modules found, entering strict repository configuration mode
2024-04-16 10:04:11 Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2024-04-16 10:04:11 Finished Spring Data repository scanning in 5 ms. Found 0 Redis repository interfaces.
2024-04-16 10:04:11 No MyBatis mapper was found in '[com.atguigu.spzx.cart]' package. Please check your configuration.
2024-04-16 10:04:11 BeanFactory id=2d53ddbb-2726-3cfe-931b-43e5e238c112
2024-04-16 10:04:11 Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$DeferringLoadBalancerInterceptorConfig' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$DeferringLoadBalancerInterceptorConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [lbRestClientPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.
2024-04-16 10:04:11 Bean 'deferringLoadBalancerInterceptor' of type [org.springframework.cloud.client.loadbalancer.DeferringLoadBalancerInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-04-16 10:04:11 Tomcat initialized with port 8514 (http)
2024-04-16 10:04:11 Initializing ProtocolHandler ["http-nio-8514"]
2024-04-16 10:04:11 Starting service [Tomcat]
2024-04-16 10:04:11 Starting Servlet engine: [Apache Tomcat/10.1.19]
2024-04-16 10:04:11 Initializing Spring embedded WebApplicationContext
2024-04-16 10:04:11 Root WebApplicationContext: initialization completed in 1122 ms
2024-04-16 10:04:12 For 'service-product' URL not provided. Will try picking an instance via load-balancing.
2024-04-16 10:04:12 Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-04-16 10:04:12 Starting ProtocolHandler ["http-nio-8514"]
2024-04-16 10:04:12 Tomcat started on port 8514 (http) with context path ''
2024-04-16 10:04:12 Started CartApplication in 2.452 seconds (process running for 2.883)
2024-04-16 10:52:21 Starting CartApplication using Java 17.0.5 with PID 6516 (/Users/yh/AndroidStudioProjects/spzx-parent/spzx-service/service-cart/build/classes/java/main started by yh in /Users/yh/AndroidStudioProjects/spzx-parent)
2024-04-16 10:52:21 The following 1 profile is active: "dev"
2024-04-16 10:52:22 Multiple Spring Data modules found, entering strict repository configuration mode
2024-04-16 10:52:22 Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2024-04-16 10:52:22 Finished Spring Data repository scanning in 5 ms. Found 0 Redis repository interfaces.
2024-04-16 10:52:22 No MyBatis mapper was found in '[com.atguigu.spzx.cart]' package. Please check your configuration.
2024-04-16 10:52:22 BeanFactory id=2d53ddbb-2726-3cfe-931b-43e5e238c112
2024-04-16 10:52:23 Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$DeferringLoadBalancerInterceptorConfig' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$DeferringLoadBalancerInterceptorConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [lbRestClientPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.
2024-04-16 10:52:23 Bean 'deferringLoadBalancerInterceptor' of type [org.springframework.cloud.client.loadbalancer.DeferringLoadBalancerInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-04-16 10:52:23 Tomcat initialized with port 8514 (http)
2024-04-16 10:52:23 Initializing ProtocolHandler ["http-nio-8514"]
2024-04-16 10:52:23 Starting service [Tomcat]
2024-04-16 10:52:23 Starting Servlet engine: [Apache Tomcat/10.1.19]
2024-04-16 10:52:23 Initializing Spring embedded WebApplicationContext
2024-04-16 10:52:23 Root WebApplicationContext: initialization completed in 1317 ms
2024-04-16 10:52:23 For 'service-product' URL not provided. Will try picking an instance via load-balancing.
2024-04-16 10:52:24 Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-04-16 10:52:24 Starting ProtocolHandler ["http-nio-8514"]
2024-04-16 10:52:24 Tomcat started on port 8514 (http) with context path ''
2024-04-16 10:52:24 Started CartApplication in 2.899 seconds (process running for 3.352)
2024-04-16 12:04:42 Starting CartApplication using Java 17.0.5 with PID 8400 (/Users/yh/AndroidStudioProjects/spzx-parent/spzx-service/service-cart/build/classes/java/main started by yh in /Users/yh/AndroidStudioProjects/spzx-parent)
2024-04-16 12:04:42 The following 1 profile is active: "dev"
2024-04-16 12:04:43 Multiple Spring Data modules found, entering strict repository configuration mode
2024-04-16 12:04:43 Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2024-04-16 12:04:43 Finished Spring Data repository scanning in 5 ms. Found 0 Redis repository interfaces.
2024-04-16 12:04:43 No MyBatis mapper was found in '[com.atguigu.spzx.cart]' package. Please check your configuration.
2024-04-16 12:04:43 BeanFactory id=2d53ddbb-2726-3cfe-931b-43e5e238c112
2024-04-16 12:04:44 Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$DeferringLoadBalancerInterceptorConfig' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$DeferringLoadBalancerInterceptorConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [lbRestClientPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.
2024-04-16 12:04:44 Bean 'deferringLoadBalancerInterceptor' of type [org.springframework.cloud.client.loadbalancer.DeferringLoadBalancerInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-04-16 12:04:44 Tomcat initialized with port 8514 (http)
2024-04-16 12:04:44 Initializing ProtocolHandler ["http-nio-8514"]
2024-04-16 12:04:44 Starting service [Tomcat]
2024-04-16 12:04:44 Starting Servlet engine: [Apache Tomcat/10.1.19]
2024-04-16 12:04:44 Initializing Spring embedded WebApplicationContext
2024-04-16 12:04:44 Root WebApplicationContext: initialization completed in 1719 ms
2024-04-16 12:04:44 For 'service-product' URL not provided. Will try picking an instance via load-balancing.
2024-04-16 12:04:45 Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-04-16 12:04:45 Starting ProtocolHandler ["http-nio-8514"]
2024-04-16 12:04:45 Tomcat started on port 8514 (http) with context path ''
2024-04-16 12:04:45 Started CartApplication in 3.783 seconds (process running for 4.415)
2024-04-16 12:21:29 Starting CartApplication using Java 17.0.5 with PID 9067 (/Users/yh/AndroidStudioProjects/spzx-parent/spzx-service/service-cart/build/classes/java/main started by yh in /Users/yh/AndroidStudioProjects/spzx-parent)
2024-04-16 12:21:29 The following 1 profile is active: "dev"
2024-04-16 12:21:30 Multiple Spring Data modules found, entering strict repository configuration mode
2024-04-16 12:21:30 Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2024-04-16 12:21:30 Finished Spring Data repository scanning in 5 ms. Found 0 Redis repository interfaces.
2024-04-16 12:21:30 No MyBatis mapper was found in '[com.atguigu.spzx.cart]' package. Please check your configuration.
2024-04-16 12:21:30 BeanFactory id=eb91b4db-54b4-305f-a53a-59fab0735cf8
2024-04-16 12:21:30 Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$DeferringLoadBalancerInterceptorConfig' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$DeferringLoadBalancerInterceptorConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [lbRestClientPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.
2024-04-16 12:21:30 Bean 'deferringLoadBalancerInterceptor' of type [org.springframework.cloud.client.loadbalancer.DeferringLoadBalancerInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-04-16 12:21:30 Tomcat initialized with port 8514 (http)
2024-04-16 12:21:31 Initializing ProtocolHandler ["http-nio-8514"]
2024-04-16 12:21:31 Starting service [Tomcat]
2024-04-16 12:21:31 Starting Servlet engine: [Apache Tomcat/10.1.19]
2024-04-16 12:21:31 Initializing Spring embedded WebApplicationContext
2024-04-16 12:21:31 Root WebApplicationContext: initialization completed in 1368 ms
2024-04-16 12:21:31 For 'service-product' URL not provided. Will try picking an instance via load-balancing.
2024-04-16 12:21:32 Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-04-16 12:21:32 Starting ProtocolHandler ["http-nio-8514"]
2024-04-16 12:21:32 Tomcat started on port 8514 (http) with context path ''
2024-04-16 12:21:32 initializer namespace from ans.namespace attribute : null
2024-04-16 12:21:32 initializer namespace from ALIBABA_ALIWARE_NAMESPACE attribute :null
2024-04-16 12:21:32 initializer namespace from namespace attribute :null
2024-04-16 12:21:32 null No credential found
2024-04-16 12:21:32 [settings] [req-serv] nacos-server port:8848
2024-04-16 12:21:32 [settings] [http-client] connect timeout:1000
2024-04-16 12:21:32 PER_TASK_CONFIG_SIZE: 3000.0
2024-04-16 12:21:32 [ClientAuthPluginManager] Load ClientAuthService com.alibaba.nacos.client.auth.impl.NacosClientAuthServiceImpl success.
2024-04-16 12:21:32 [ClientAuthPluginManager] Load ClientAuthService com.alibaba.nacos.client.auth.ram.RamClientAuthServiceImpl success.
2024-04-16 12:21:32 [RpcClientFactory] create a new rpc client of 9be2a569-3b81-43c3-86e5-2f672e1130c3
2024-04-16 12:21:32 Create naming rpc client for uuid->9be2a569-3b81-43c3-86e5-2f672e1130c3
2024-04-16 12:21:32 [9be2a569-3b81-43c3-86e5-2f672e1130c3] RpcClient init, ServerListFactory = com.alibaba.nacos.client.naming.core.ServerListManager
2024-04-16 12:21:32 [9be2a569-3b81-43c3-86e5-2f672e1130c3] Registry connection listener to current client:com.alibaba.nacos.client.naming.remote.gprc.redo.NamingGrpcRedoService
2024-04-16 12:21:32 [9be2a569-3b81-43c3-86e5-2f672e1130c3] Register server push request handler:com.alibaba.nacos.client.naming.remote.gprc.NamingPushRequestHandler
2024-04-16 12:21:32 [9be2a569-3b81-43c3-86e5-2f672e1130c3] Try to connect to server on start up, server: {serverIp = '14.103.49.141', server main port = 8848}
2024-04-16 12:21:32 grpc client connection server:14.103.49.141 ip,serverPort:9848,grpcTslConfig:{"sslProvider":"","enableTls":false,"mutualAuthEnable":false,"trustAll":false}
2024-04-16 12:21:32 Ready to get current node abilities...
2024-04-16 12:21:32 Ready to initialize current node abilities, support modes: [SDK_CLIENT]
2024-04-16 12:21:32 Initialize current abilities finish...
2024-04-16 12:21:32 [AbilityControlManager] Successfully initialize AbilityControlManager
2024-04-16 12:21:32 [9be2a569-3b81-43c3-86e5-2f672e1130c3] Success to connect to server [14.103.49.141:8848] on start up, connectionId = 1713241292725_183.192.231.186_5177
2024-04-16 12:21:32 [9be2a569-3b81-43c3-86e5-2f672e1130c3] Notify connected event to listeners.
2024-04-16 12:21:32 Grpc connection connect
2024-04-16 12:21:32 [9be2a569-3b81-43c3-86e5-2f672e1130c3] Register server push request handler:com.alibaba.nacos.common.remote.client.RpcClient$ConnectResetRequestHandler
2024-04-16 12:21:32 [9be2a569-3b81-43c3-86e5-2f672e1130c3] Register server push request handler:com.alibaba.nacos.common.remote.client.RpcClient$$Lambda$1270/0x0000000801467260
2024-04-16 12:21:32 [REGISTER-SERVICE] public registering service service-cart with instance Instance{instanceId='null', ip='192.168.1.8', port=8514, weight=1.0, healthy=true, enabled=true, ephemeral=true, clusterName='DEFAULT', serviceName='null', metadata={IPv6=null, preserved.register.source=SPRING_CLOUD}}
2024-04-16 12:21:32 nacos registry, DEFAULT_GROUP service-cart 192.168.1.8:8514 register finished
2024-04-16 12:21:32 Started CartApplication in 3.663 seconds (process running for 4.276)
2024-04-16 12:21:54 Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-04-16 12:21:54 Initializing Servlet 'dispatcherServlet'
2024-04-16 12:21:54 Completed initialization in 1 ms
2024-04-16 12:21:55 LoadBalancerCacheManager not available, returning delegate without caching.
2024-04-16 12:21:55 [SUBSCRIBE-SERVICE] service:service-product, group:DEFAULT_GROUP, clusters: 
2024-04-16 12:21:55 init new ips(1) service: DEFAULT_GROUP@@service-product -> [{"ip":"192.168.1.8","port":8511,"weight":1.0,"healthy":true,"enabled":true,"ephemeral":true,"clusterName":"DEFAULT","serviceName":"DEFAULT_GROUP@@service-product","metadata":{"preserved.register.source":"SPRING_CLOUD"},"ipDeleteTimeout":30000,"instanceHeartBeatInterval":5000,"instanceHeartBeatTimeOut":15000}]
2024-04-16 12:21:55 current ips:(1) service: DEFAULT_GROUP@@service-product -> [{"ip":"192.168.1.8","port":8511,"weight":1.0,"healthy":true,"enabled":true,"ephemeral":true,"clusterName":"DEFAULT","serviceName":"DEFAULT_GROUP@@service-product","metadata":{"preserved.register.source":"SPRING_CLOUD"},"ipDeleteTimeout":30000,"instanceHeartBeatInterval":5000,"instanceHeartBeatTimeOut":15000}]
2024-04-16 12:21:55 Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: feign.FeignException$InternalServerError: [500] during [GET] to [http://service-product/api/product/getBySkuId/12] [ProductFeignClient#getBySkuId(Long)]: [{"timestamp":"2024-04-16T04:21:55.362+00:00","status":500,"error":"Internal Server Error","path":"/api/product/getBySkuId/12"}]] with root cause
feign.FeignException$InternalServerError: [500] during [GET] to [http://service-product/api/product/getBySkuId/12] [ProductFeignClient#getBySkuId(Long)]: [{"timestamp":"2024-04-16T04:21:55.362+00:00","status":500,"error":"Internal Server Error","path":"/api/product/getBySkuId/12"}]
	at feign.FeignException.serverErrorStatus(FeignException.java:259)
	at feign.FeignException.errorStatus(FeignException.java:206)
	at feign.FeignException.errorStatus(FeignException.java:194)
	at feign.codec.ErrorDecoder$Default.decode(ErrorDecoder.java:103)
	at feign.InvocationContext.decodeError(InvocationContext.java:126)
	at feign.InvocationContext.proceed(InvocationContext.java:72)
	at feign.ResponseHandler.handleResponse(ResponseHandler.java:63)
	at feign.SynchronousMethodHandler.executeAndDecode(SynchronousMethodHandler.java:114)
	at feign.SynchronousMethodHandler.invoke(SynchronousMethodHandler.java:70)
	at feign.ReflectiveFeign$FeignInvocationHandler.invoke(ReflectiveFeign.java:99)
	at jdk.proxy2/jdk.proxy2.$Proxy100.getBySkuId(Unknown Source)
	at com.atguigu.spzx.cart.service.impl.CartServiceImpl.addToCart(CartServiceImpl.java:59)
	at com.atguigu.spzx.cart.controller.CartController.addToCart(CartController.java:20)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:925)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:830)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1744)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:833)
2024-04-16 12:21:55 [9be2a569-3b81-43c3-86e5-2f672e1130c3] Receive server push request, request = NotifySubscriberRequest, requestId = 48802
2024-04-16 12:21:55 [9be2a569-3b81-43c3-86e5-2f672e1130c3] Ack server push request, request = NotifySubscriberRequest, requestId = 48802
2024-04-16 12:30:30 [NotifyCenter] Start destroying Publisher
2024-04-16 12:30:30 [HttpClientBeanHolder] Start destroying common HttpClient
2024-04-16 12:30:30 [NotifyCenter] Destruction of the end
2024-04-16 12:30:30 [HttpClientBeanHolder] Destruction of the end
2024-04-16 12:30:32 Starting CartApplication using Java 17.0.5 with PID 9522 (/Users/yh/AndroidStudioProjects/spzx-parent/spzx-service/service-cart/build/classes/java/main started by yh in /Users/yh/AndroidStudioProjects/spzx-parent)
2024-04-16 12:30:32 The following 1 profile is active: "dev"
2024-04-16 12:30:33 Multiple Spring Data modules found, entering strict repository configuration mode
2024-04-16 12:30:33 Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2024-04-16 12:30:33 Finished Spring Data repository scanning in 5 ms. Found 0 Redis repository interfaces.
2024-04-16 12:30:33 BeanFactory id=a5d3380a-61ef-3701-8823-659dc43bef8d
2024-04-16 12:30:33 Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$DeferringLoadBalancerInterceptorConfig' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$DeferringLoadBalancerInterceptorConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [lbRestClientPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.
2024-04-16 12:30:33 Bean 'deferringLoadBalancerInterceptor' of type [org.springframework.cloud.client.loadbalancer.DeferringLoadBalancerInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-04-16 12:30:33 Tomcat initialized with port 8514 (http)
2024-04-16 12:30:33 Initializing ProtocolHandler ["http-nio-8514"]
2024-04-16 12:30:33 Starting service [Tomcat]
2024-04-16 12:30:33 Starting Servlet engine: [Apache Tomcat/10.1.19]
2024-04-16 12:30:34 Initializing Spring embedded WebApplicationContext
2024-04-16 12:30:34 Root WebApplicationContext: initialization completed in 1359 ms
2024-04-16 12:30:35 Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-04-16 12:30:35 Starting ProtocolHandler ["http-nio-8514"]
2024-04-16 12:30:35 Tomcat started on port 8514 (http) with context path ''
2024-04-16 12:30:35 initializer namespace from ans.namespace attribute : null
2024-04-16 12:30:35 initializer namespace from ALIBABA_ALIWARE_NAMESPACE attribute :null
2024-04-16 12:30:35 initializer namespace from namespace attribute :null
2024-04-16 12:30:35 null No credential found
2024-04-16 12:30:35 [settings] [req-serv] nacos-server port:8848
2024-04-16 12:30:35 [settings] [http-client] connect timeout:1000
2024-04-16 12:30:35 PER_TASK_CONFIG_SIZE: 3000.0
2024-04-16 12:30:35 [ClientAuthPluginManager] Load ClientAuthService com.alibaba.nacos.client.auth.impl.NacosClientAuthServiceImpl success.
2024-04-16 12:30:35 [ClientAuthPluginManager] Load ClientAuthService com.alibaba.nacos.client.auth.ram.RamClientAuthServiceImpl success.
2024-04-16 12:30:35 [RpcClientFactory] create a new rpc client of 8c0b669a-a57b-412c-8afc-2fb34e7c045a
2024-04-16 12:30:35 Create naming rpc client for uuid->8c0b669a-a57b-412c-8afc-2fb34e7c045a
2024-04-16 12:30:35 [8c0b669a-a57b-412c-8afc-2fb34e7c045a] RpcClient init, ServerListFactory = com.alibaba.nacos.client.naming.core.ServerListManager
2024-04-16 12:30:35 [8c0b669a-a57b-412c-8afc-2fb34e7c045a] Registry connection listener to current client:com.alibaba.nacos.client.naming.remote.gprc.redo.NamingGrpcRedoService
2024-04-16 12:30:35 [8c0b669a-a57b-412c-8afc-2fb34e7c045a] Register server push request handler:com.alibaba.nacos.client.naming.remote.gprc.NamingPushRequestHandler
2024-04-16 12:30:35 [8c0b669a-a57b-412c-8afc-2fb34e7c045a] Try to connect to server on start up, server: {serverIp = '14.103.49.141', server main port = 8848}
2024-04-16 12:30:35 grpc client connection server:14.103.49.141 ip,serverPort:9848,grpcTslConfig:{"sslProvider":"","enableTls":false,"mutualAuthEnable":false,"trustAll":false}
2024-04-16 12:30:35 Ready to get current node abilities...
2024-04-16 12:30:35 Ready to initialize current node abilities, support modes: [SDK_CLIENT]
2024-04-16 12:30:35 Initialize current abilities finish...
2024-04-16 12:30:35 [AbilityControlManager] Successfully initialize AbilityControlManager
2024-04-16 12:30:35 [8c0b669a-a57b-412c-8afc-2fb34e7c045a] Success to connect to server [14.103.49.141:8848] on start up, connectionId = 1713241835752_183.192.231.186_5325
2024-04-16 12:30:35 [8c0b669a-a57b-412c-8afc-2fb34e7c045a] Notify connected event to listeners.
2024-04-16 12:30:35 Grpc connection connect
2024-04-16 12:30:35 [8c0b669a-a57b-412c-8afc-2fb34e7c045a] Register server push request handler:com.alibaba.nacos.common.remote.client.RpcClient$ConnectResetRequestHandler
2024-04-16 12:30:35 [8c0b669a-a57b-412c-8afc-2fb34e7c045a] Register server push request handler:com.alibaba.nacos.common.remote.client.RpcClient$$Lambda$1246/0x0000000801463ad0
2024-04-16 12:30:35 [REGISTER-SERVICE] public registering service service-cart with instance Instance{instanceId='null', ip='192.168.1.8', port=8514, weight=1.0, healthy=true, enabled=true, ephemeral=true, clusterName='DEFAULT', serviceName='null', metadata={IPv6=null, preserved.register.source=SPRING_CLOUD}}
2024-04-16 12:30:35 nacos registry, DEFAULT_GROUP service-cart 192.168.1.8:8514 register finished
2024-04-16 12:30:35 Started CartApplication in 3.654 seconds (process running for 4.18)
2024-04-16 12:31:01 Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-04-16 12:31:01 Initializing Servlet 'dispatcherServlet'
2024-04-16 12:31:01 Completed initialization in 1 ms
2024-04-16 12:31:28 HikariPool-1 - Starting...
2024-04-16 12:31:28 HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@19c7dea6
2024-04-16 12:31:28 HikariPool-1 - Start completed.
2024-04-16 12:31:52 Resolved [org.springframework.web.HttpRequestMethodNotSupportedException: Request method 'GET' is not supported]
2024-04-16 12:32:36 [NotifyCenter] Start destroying Publisher
2024-04-16 12:32:36 [HttpClientBeanHolder] Start destroying common HttpClient
2024-04-16 12:32:36 [NotifyCenter] Destruction of the end
2024-04-16 12:32:36 [HttpClientBeanHolder] Destruction of the end
2024-04-16 12:32:45 Starting CartApplication using Java 17.0.5 with PID 9632 (/Users/yh/AndroidStudioProjects/spzx-parent/spzx-service/service-cart/build/classes/java/main started by yh in /Users/yh/AndroidStudioProjects/spzx-parent)
2024-04-16 12:32:45 The following 1 profile is active: "dev"
2024-04-16 12:32:46 Multiple Spring Data modules found, entering strict repository configuration mode
2024-04-16 12:32:46 Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2024-04-16 12:32:46 Finished Spring Data repository scanning in 9 ms. Found 0 Redis repository interfaces.
2024-04-16 12:32:46 BeanFactory id=a5d3380a-61ef-3701-8823-659dc43bef8d
2024-04-16 12:32:47 Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$DeferringLoadBalancerInterceptorConfig' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$DeferringLoadBalancerInterceptorConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [lbRestClientPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.
2024-04-16 12:32:47 Bean 'deferringLoadBalancerInterceptor' of type [org.springframework.cloud.client.loadbalancer.DeferringLoadBalancerInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-04-16 12:32:47 Tomcat initialized with port 8514 (http)
2024-04-16 12:32:47 Initializing ProtocolHandler ["http-nio-8514"]
2024-04-16 12:32:47 Starting service [Tomcat]
2024-04-16 12:32:47 Starting Servlet engine: [Apache Tomcat/10.1.19]
2024-04-16 12:32:47 Initializing Spring embedded WebApplicationContext
2024-04-16 12:32:47 Root WebApplicationContext: initialization completed in 1350 ms
2024-04-16 12:32:48 Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-04-16 12:32:48 Starting ProtocolHandler ["http-nio-8514"]
2024-04-16 12:32:48 Tomcat started on port 8514 (http) with context path ''
2024-04-16 12:32:48 initializer namespace from ans.namespace attribute : null
2024-04-16 12:32:48 initializer namespace from ALIBABA_ALIWARE_NAMESPACE attribute :null
2024-04-16 12:32:48 initializer namespace from namespace attribute :null
2024-04-16 12:32:48 [settings] [req-serv] nacos-server port:8848
2024-04-16 12:32:48 null No credential found
2024-04-16 12:32:48 [settings] [http-client] connect timeout:1000
2024-04-16 12:32:48 PER_TASK_CONFIG_SIZE: 3000.0
2024-04-16 12:32:48 [ClientAuthPluginManager] Load ClientAuthService com.alibaba.nacos.client.auth.impl.NacosClientAuthServiceImpl success.
2024-04-16 12:32:48 [ClientAuthPluginManager] Load ClientAuthService com.alibaba.nacos.client.auth.ram.RamClientAuthServiceImpl success.
2024-04-16 12:32:48 [RpcClientFactory] create a new rpc client of 46085d1d-469f-46ad-8b54-be152fdaaa75
2024-04-16 12:32:48 Create naming rpc client for uuid->46085d1d-469f-46ad-8b54-be152fdaaa75
2024-04-16 12:32:48 [46085d1d-469f-46ad-8b54-be152fdaaa75] RpcClient init, ServerListFactory = com.alibaba.nacos.client.naming.core.ServerListManager
2024-04-16 12:32:48 [46085d1d-469f-46ad-8b54-be152fdaaa75] Registry connection listener to current client:com.alibaba.nacos.client.naming.remote.gprc.redo.NamingGrpcRedoService
2024-04-16 12:32:48 [46085d1d-469f-46ad-8b54-be152fdaaa75] Register server push request handler:com.alibaba.nacos.client.naming.remote.gprc.NamingPushRequestHandler
2024-04-16 12:32:48 [46085d1d-469f-46ad-8b54-be152fdaaa75] Try to connect to server on start up, server: {serverIp = '14.103.49.141', server main port = 8848}
2024-04-16 12:32:48 grpc client connection server:14.103.49.141 ip,serverPort:9848,grpcTslConfig:{"sslProvider":"","enableTls":false,"mutualAuthEnable":false,"trustAll":false}
2024-04-16 12:32:49 Ready to get current node abilities...
2024-04-16 12:32:49 Ready to initialize current node abilities, support modes: [SDK_CLIENT]
2024-04-16 12:32:49 Initialize current abilities finish...
2024-04-16 12:32:49 [AbilityControlManager] Successfully initialize AbilityControlManager
2024-04-16 12:32:49 [46085d1d-469f-46ad-8b54-be152fdaaa75] Success to connect to server [14.103.49.141:8848] on start up, connectionId = 1713241969127_183.192.231.186_5391
2024-04-16 12:32:49 [46085d1d-469f-46ad-8b54-be152fdaaa75] Notify connected event to listeners.
2024-04-16 12:32:49 Grpc connection connect
2024-04-16 12:32:49 [46085d1d-469f-46ad-8b54-be152fdaaa75] Register server push request handler:com.alibaba.nacos.common.remote.client.RpcClient$ConnectResetRequestHandler
2024-04-16 12:32:49 [46085d1d-469f-46ad-8b54-be152fdaaa75] Register server push request handler:com.alibaba.nacos.common.remote.client.RpcClient$$Lambda$1246/0x0000000801460878
2024-04-16 12:32:49 [REGISTER-SERVICE] public registering service service-cart with instance Instance{instanceId='null', ip='192.168.1.8', port=8514, weight=1.0, healthy=true, enabled=true, ephemeral=true, clusterName='DEFAULT', serviceName='null', metadata={IPv6=null, preserved.register.source=SPRING_CLOUD}}
2024-04-16 12:32:49 nacos registry, DEFAULT_GROUP service-cart 192.168.1.8:8514 register finished
2024-04-16 12:32:49 Started CartApplication in 3.719 seconds (process running for 4.233)
2024-04-16 12:32:49 Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-04-16 12:32:49 Initializing Servlet 'dispatcherServlet'
2024-04-16 12:32:49 Completed initialization in 2 ms
2024-04-16 12:33:32 [NotifyCenter] Start destroying Publisher
2024-04-16 12:33:32 [HttpClientBeanHolder] Start destroying common HttpClient
2024-04-16 12:33:32 [NotifyCenter] Destruction of the end
2024-04-16 12:33:32 [HttpClientBeanHolder] Destruction of the end
2024-04-16 12:33:34 Starting CartApplication using Java 17.0.5 with PID 9676 (/Users/yh/AndroidStudioProjects/spzx-parent/spzx-service/service-cart/build/classes/java/main started by yh in /Users/yh/AndroidStudioProjects/spzx-parent)
2024-04-16 12:33:34 The following 1 profile is active: "dev"
2024-04-16 12:33:35 Multiple Spring Data modules found, entering strict repository configuration mode
2024-04-16 12:33:35 Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2024-04-16 12:33:35 Finished Spring Data repository scanning in 4 ms. Found 0 Redis repository interfaces.
2024-04-16 12:33:35 BeanFactory id=a5d3380a-61ef-3701-8823-659dc43bef8d
2024-04-16 12:33:35 Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$DeferringLoadBalancerInterceptorConfig' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$DeferringLoadBalancerInterceptorConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [lbRestClientPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.
2024-04-16 12:33:35 Bean 'deferringLoadBalancerInterceptor' of type [org.springframework.cloud.client.loadbalancer.DeferringLoadBalancerInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-04-16 12:33:35 Tomcat initialized with port 8514 (http)
2024-04-16 12:33:35 Initializing ProtocolHandler ["http-nio-8514"]
2024-04-16 12:33:35 Starting service [Tomcat]
2024-04-16 12:33:35 Starting Servlet engine: [Apache Tomcat/10.1.19]
2024-04-16 12:33:36 Initializing Spring embedded WebApplicationContext
2024-04-16 12:33:36 Root WebApplicationContext: initialization completed in 1219 ms
2024-04-16 12:33:36 Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-04-16 12:33:36 Starting ProtocolHandler ["http-nio-8514"]
2024-04-16 12:33:37 Tomcat started on port 8514 (http) with context path ''
2024-04-16 12:33:37 initializer namespace from ans.namespace attribute : null
2024-04-16 12:33:37 initializer namespace from ALIBABA_ALIWARE_NAMESPACE attribute :null
2024-04-16 12:33:37 initializer namespace from namespace attribute :null
2024-04-16 12:33:37 [settings] [req-serv] nacos-server port:8848
2024-04-16 12:33:37 [settings] [http-client] connect timeout:1000
2024-04-16 12:33:37 PER_TASK_CONFIG_SIZE: 3000.0
2024-04-16 12:33:37 null No credential found
2024-04-16 12:33:37 [ClientAuthPluginManager] Load ClientAuthService com.alibaba.nacos.client.auth.impl.NacosClientAuthServiceImpl success.
2024-04-16 12:33:37 [ClientAuthPluginManager] Load ClientAuthService com.alibaba.nacos.client.auth.ram.RamClientAuthServiceImpl success.
2024-04-16 12:33:37 [RpcClientFactory] create a new rpc client of b06e43bd-efff-40ed-a4cf-b1dd1674512e
2024-04-16 12:33:37 Create naming rpc client for uuid->b06e43bd-efff-40ed-a4cf-b1dd1674512e
2024-04-16 12:33:37 [b06e43bd-efff-40ed-a4cf-b1dd1674512e] RpcClient init, ServerListFactory = com.alibaba.nacos.client.naming.core.ServerListManager
2024-04-16 12:33:37 [b06e43bd-efff-40ed-a4cf-b1dd1674512e] Registry connection listener to current client:com.alibaba.nacos.client.naming.remote.gprc.redo.NamingGrpcRedoService
2024-04-16 12:33:37 [b06e43bd-efff-40ed-a4cf-b1dd1674512e] Register server push request handler:com.alibaba.nacos.client.naming.remote.gprc.NamingPushRequestHandler
2024-04-16 12:33:37 [b06e43bd-efff-40ed-a4cf-b1dd1674512e] Try to connect to server on start up, server: {serverIp = '14.103.49.141', server main port = 8848}
2024-04-16 12:33:37 grpc client connection server:14.103.49.141 ip,serverPort:9848,grpcTslConfig:{"sslProvider":"","enableTls":false,"mutualAuthEnable":false,"trustAll":false}
2024-04-16 12:33:37 Ready to get current node abilities...
2024-04-16 12:33:37 Ready to initialize current node abilities, support modes: [SDK_CLIENT]
2024-04-16 12:33:37 Initialize current abilities finish...
2024-04-16 12:33:37 [AbilityControlManager] Successfully initialize AbilityControlManager
2024-04-16 12:33:37 [b06e43bd-efff-40ed-a4cf-b1dd1674512e] Success to connect to server [14.103.49.141:8848] on start up, connectionId = 1713242017597_183.192.231.186_5407
2024-04-16 12:33:37 [b06e43bd-efff-40ed-a4cf-b1dd1674512e] Notify connected event to listeners.
2024-04-16 12:33:37 Grpc connection connect
2024-04-16 12:33:37 [b06e43bd-efff-40ed-a4cf-b1dd1674512e] Register server push request handler:com.alibaba.nacos.common.remote.client.RpcClient$ConnectResetRequestHandler
2024-04-16 12:33:37 [b06e43bd-efff-40ed-a4cf-b1dd1674512e] Register server push request handler:com.alibaba.nacos.common.remote.client.RpcClient$$Lambda$1246/0x0000000801460958
2024-04-16 12:33:37 [REGISTER-SERVICE] public registering service service-cart with instance Instance{instanceId='null', ip='192.168.1.8', port=8514, weight=1.0, healthy=true, enabled=true, ephemeral=true, clusterName='DEFAULT', serviceName='null', metadata={IPv6=null, preserved.register.source=SPRING_CLOUD}}
2024-04-16 12:33:37 nacos registry, DEFAULT_GROUP service-cart 192.168.1.8:8514 register finished
2024-04-16 12:33:37 Started CartApplication in 3.34 seconds (process running for 3.78)
2024-04-16 12:34:04 Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-04-16 12:34:04 Initializing Servlet 'dispatcherServlet'
2024-04-16 12:34:04 Completed initialization in 2 ms
2024-04-16 12:34:43 [NotifyCenter] Start destroying Publisher
2024-04-16 12:34:43 [HttpClientBeanHolder] Start destroying common HttpClient
2024-04-16 12:34:43 [NotifyCenter] Destruction of the end
2024-04-16 12:34:43 [HttpClientBeanHolder] Destruction of the end
2024-04-16 12:34:54 De-registering from Nacos Server now...
2024-04-16 12:34:54 [DEREGISTER-SERVICE] public deregistering service service-cart with instance: Instance{instanceId='null', ip='192.168.1.8', port=8514, weight=1.0, healthy=true, enabled=true, ephemeral=true, clusterName='DEFAULT', serviceName='null', metadata={}}
2024-04-16 12:34:54 De-registration finished.
2024-04-16 12:34:54 com.alibaba.nacos.client.naming.cache.ServiceInfoHolder do shutdown begin
2024-04-16 12:34:54 com.alibaba.nacos.client.naming.backups.FailoverReactor do shutdown begin
2024-04-16 12:34:54 com.alibaba.nacos.client.naming.backups.FailoverReactor do shutdown stop
2024-04-16 12:34:54 com.alibaba.nacos.client.naming.cache.ServiceInfoHolder do shutdown stop
2024-04-16 12:34:54 com.alibaba.nacos.client.naming.remote.NamingClientProxyDelegate do shutdown begin
2024-04-16 12:34:54 com.alibaba.nacos.client.naming.core.ServiceInfoUpdateService do shutdown begin
2024-04-16 12:34:54 com.alibaba.nacos.client.naming.core.ServiceInfoUpdateService do shutdown stop
2024-04-16 12:34:54 com.alibaba.nacos.client.naming.core.ServerListManager do shutdown begin
2024-04-16 12:34:54 [NamingHttpClientManager] Start destroying NacosRestTemplate
2024-04-16 12:34:54 [NamingHttpClientManager] Destruction of the end
2024-04-16 12:34:54 com.alibaba.nacos.client.naming.core.ServerListManager do shutdown stop
2024-04-16 12:34:54 com.alibaba.nacos.client.naming.remote.http.NamingHttpClientProxy do shutdown begin
2024-04-16 12:34:54 [NamingHttpClientManager] Start destroying NacosRestTemplate
2024-04-16 12:34:54 [NamingHttpClientManager] Destruction of the end
2024-04-16 12:34:54 com.alibaba.nacos.client.naming.remote.http.NamingHttpClientProxy do shutdown stop
2024-04-16 12:34:54 Shutdown naming grpc client proxy for  uuid->b06e43bd-efff-40ed-a4cf-b1dd1674512e
2024-04-16 12:34:54 Shutdown grpc redo service executor java.util.concurrent.ScheduledThreadPoolExecutor@5d865023[Running, pool size = 1, active threads = 0, queued tasks = 1, completed tasks = 25]
2024-04-16 12:34:54 Shutdown rpc client, set status to shutdown
2024-04-16 12:34:54 Shutdown client event executor java.util.concurrent.ScheduledThreadPoolExecutor@5b6a8ee4[Running, pool size = 2, active threads = 2, queued tasks = 0, completed tasks = 0]
2024-04-16 12:34:54 Close current connection 1713242017597_183.192.231.186_5407
2024-04-16 12:34:54 [1713242017597_183.192.231.186_5407]Ignore error event,isRunning:false,isAbandon=false
2024-04-16 12:34:54 Shutdown grpc executor java.util.concurrent.ThreadPoolExecutor@37707963[Running, pool size = 7, active threads = 0, queued tasks = 0, completed tasks = 39]
2024-04-16 12:34:54 shutdown and remove naming rpc client  for uuid ->b06e43bd-efff-40ed-a4cf-b1dd1674512e
2024-04-16 12:34:54 [null] CredentialWatcher is stopped
2024-04-16 12:34:54 [null] CredentialService is freed
2024-04-16 12:34:54 com.alibaba.nacos.client.naming.remote.NamingClientProxyDelegate do shutdown stop
2024-04-16 12:34:57 Starting CartApplication using Java 17.0.5 with PID 9747 (/Users/yh/AndroidStudioProjects/spzx-parent/spzx-service/service-cart/build/classes/java/main started by yh in /Users/yh/AndroidStudioProjects/spzx-parent)
2024-04-16 12:34:57 The following 1 profile is active: "dev"
2024-04-16 12:34:57 Multiple Spring Data modules found, entering strict repository configuration mode
2024-04-16 12:34:57 Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2024-04-16 12:34:57 Finished Spring Data repository scanning in 5 ms. Found 0 Redis repository interfaces.
2024-04-16 12:34:57 BeanFactory id=a5d3380a-61ef-3701-8823-659dc43bef8d
2024-04-16 12:34:58 Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$DeferringLoadBalancerInterceptorConfig' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$DeferringLoadBalancerInterceptorConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [lbRestClientPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.
2024-04-16 12:34:58 Bean 'deferringLoadBalancerInterceptor' of type [org.springframework.cloud.client.loadbalancer.DeferringLoadBalancerInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-04-16 12:34:58 Tomcat initialized with port 8514 (http)
2024-04-16 12:34:58 Initializing ProtocolHandler ["http-nio-8514"]
2024-04-16 12:34:58 Starting service [Tomcat]
2024-04-16 12:34:58 Starting Servlet engine: [Apache Tomcat/10.1.19]
2024-04-16 12:34:58 Initializing Spring embedded WebApplicationContext
2024-04-16 12:34:58 Root WebApplicationContext: initialization completed in 1268 ms
2024-04-16 12:34:59 Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-04-16 12:34:59 Starting ProtocolHandler ["http-nio-8514"]
2024-04-16 12:34:59 Tomcat started on port 8514 (http) with context path ''
2024-04-16 12:34:59 initializer namespace from ans.namespace attribute : null
2024-04-16 12:34:59 initializer namespace from ALIBABA_ALIWARE_NAMESPACE attribute :null
2024-04-16 12:34:59 initializer namespace from namespace attribute :null
2024-04-16 12:34:59 [settings] [req-serv] nacos-server port:8848
2024-04-16 12:34:59 [settings] [http-client] connect timeout:1000
2024-04-16 12:34:59 null No credential found
2024-04-16 12:34:59 PER_TASK_CONFIG_SIZE: 3000.0
2024-04-16 12:34:59 [ClientAuthPluginManager] Load ClientAuthService com.alibaba.nacos.client.auth.impl.NacosClientAuthServiceImpl success.
2024-04-16 12:34:59 [ClientAuthPluginManager] Load ClientAuthService com.alibaba.nacos.client.auth.ram.RamClientAuthServiceImpl success.
2024-04-16 12:34:59 [RpcClientFactory] create a new rpc client of d8065a20-2506-42c2-8519-0f6cd139b77b
2024-04-16 12:34:59 Create naming rpc client for uuid->d8065a20-2506-42c2-8519-0f6cd139b77b
2024-04-16 12:34:59 [d8065a20-2506-42c2-8519-0f6cd139b77b] RpcClient init, ServerListFactory = com.alibaba.nacos.client.naming.core.ServerListManager
2024-04-16 12:34:59 [d8065a20-2506-42c2-8519-0f6cd139b77b] Registry connection listener to current client:com.alibaba.nacos.client.naming.remote.gprc.redo.NamingGrpcRedoService
2024-04-16 12:34:59 [d8065a20-2506-42c2-8519-0f6cd139b77b] Register server push request handler:com.alibaba.nacos.client.naming.remote.gprc.NamingPushRequestHandler
2024-04-16 12:34:59 [d8065a20-2506-42c2-8519-0f6cd139b77b] Try to connect to server on start up, server: {serverIp = '14.103.49.141', server main port = 8848}
2024-04-16 12:34:59 grpc client connection server:14.103.49.141 ip,serverPort:9848,grpcTslConfig:{"sslProvider":"","enableTls":false,"mutualAuthEnable":false,"trustAll":false}
2024-04-16 12:34:59 Ready to get current node abilities...
2024-04-16 12:34:59 Ready to initialize current node abilities, support modes: [SDK_CLIENT]
2024-04-16 12:34:59 Initialize current abilities finish...
2024-04-16 12:34:59 [AbilityControlManager] Successfully initialize AbilityControlManager
2024-04-16 12:34:59 [d8065a20-2506-42c2-8519-0f6cd139b77b] Success to connect to server [14.103.49.141:8848] on start up, connectionId = 1713242099861_183.192.231.186_5493
2024-04-16 12:34:59 [d8065a20-2506-42c2-8519-0f6cd139b77b] Notify connected event to listeners.
2024-04-16 12:34:59 Grpc connection connect
2024-04-16 12:34:59 [d8065a20-2506-42c2-8519-0f6cd139b77b] Register server push request handler:com.alibaba.nacos.common.remote.client.RpcClient$ConnectResetRequestHandler
2024-04-16 12:34:59 [d8065a20-2506-42c2-8519-0f6cd139b77b] Register server push request handler:com.alibaba.nacos.common.remote.client.RpcClient$$Lambda$1246/0x0000000801460450
2024-04-16 12:34:59 [REGISTER-SERVICE] public registering service service-cart with instance Instance{instanceId='null', ip='192.168.1.8', port=8514, weight=1.0, healthy=true, enabled=true, ephemeral=true, clusterName='DEFAULT', serviceName='null', metadata={IPv6=null, preserved.register.source=SPRING_CLOUD}}
2024-04-16 12:34:59 nacos registry, DEFAULT_GROUP service-cart 192.168.1.8:8514 register finished
2024-04-16 12:34:59 Started CartApplication in 3.338 seconds (process running for 3.777)
2024-04-16 12:35:00 Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-04-16 12:35:00 Initializing Servlet 'dispatcherServlet'
2024-04-16 12:35:00 Completed initialization in 2 ms
2024-04-16 12:35:05 Resolved [org.springframework.web.HttpRequestMethodNotSupportedException: Request method 'GET' is not supported]
2024-04-16 12:35:50 Resolved [org.springframework.web.HttpRequestMethodNotSupportedException: Request method 'GET' is not supported]
2024-04-16 12:36:18 Resolved [org.springframework.web.HttpRequestMethodNotSupportedException: Request method 'GET' is not supported]
2024-04-16 12:37:07 [HttpClientBeanHolder] Start destroying common HttpClient
2024-04-16 12:37:07 [NotifyCenter] Start destroying Publisher
2024-04-16 12:37:07 [NotifyCenter] Destruction of the end
2024-04-16 12:37:07 [HttpClientBeanHolder] Destruction of the end
2024-04-16 12:37:11 Starting CartApplication using Java 17.0.5 with PID 9873 (/Users/yh/AndroidStudioProjects/spzx-parent/spzx-service/service-cart/build/classes/java/main started by yh in /Users/yh/AndroidStudioProjects/spzx-parent)
2024-04-16 12:37:11 The following 1 profile is active: "dev"
2024-04-16 12:37:12 Multiple Spring Data modules found, entering strict repository configuration mode
2024-04-16 12:37:12 Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2024-04-16 12:37:12 Finished Spring Data repository scanning in 4 ms. Found 0 Redis repository interfaces.
2024-04-16 12:37:12 BeanFactory id=a5d3380a-61ef-3701-8823-659dc43bef8d
2024-04-16 12:37:12 Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$DeferringLoadBalancerInterceptorConfig' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$DeferringLoadBalancerInterceptorConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [lbRestClientPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.
2024-04-16 12:37:12 Bean 'deferringLoadBalancerInterceptor' of type [org.springframework.cloud.client.loadbalancer.DeferringLoadBalancerInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-04-16 12:37:12 Tomcat initialized with port 8514 (http)
2024-04-16 12:37:12 Initializing ProtocolHandler ["http-nio-8514"]
2024-04-16 12:37:12 Starting service [Tomcat]
2024-04-16 12:37:12 Starting Servlet engine: [Apache Tomcat/10.1.19]
2024-04-16 12:37:12 Initializing Spring embedded WebApplicationContext
2024-04-16 12:37:12 Root WebApplicationContext: initialization completed in 1202 ms
2024-04-16 12:37:13 Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-04-16 12:37:13 Starting ProtocolHandler ["http-nio-8514"]
2024-04-16 12:37:13 Tomcat started on port 8514 (http) with context path ''
2024-04-16 12:37:13 initializer namespace from ans.namespace attribute : null
2024-04-16 12:37:13 initializer namespace from ALIBABA_ALIWARE_NAMESPACE attribute :null
2024-04-16 12:37:13 initializer namespace from namespace attribute :null
2024-04-16 12:37:13 [settings] [req-serv] nacos-server port:8848
2024-04-16 12:37:13 [settings] [http-client] connect timeout:1000
2024-04-16 12:37:13 PER_TASK_CONFIG_SIZE: 3000.0
2024-04-16 12:37:13 null No credential found
2024-04-16 12:37:13 [ClientAuthPluginManager] Load ClientAuthService com.alibaba.nacos.client.auth.impl.NacosClientAuthServiceImpl success.
2024-04-16 12:37:13 [ClientAuthPluginManager] Load ClientAuthService com.alibaba.nacos.client.auth.ram.RamClientAuthServiceImpl success.
2024-04-16 12:37:13 [RpcClientFactory] create a new rpc client of 01d4676f-20e2-4da6-82d4-e5b1888ca97e
2024-04-16 12:37:13 Create naming rpc client for uuid->01d4676f-20e2-4da6-82d4-e5b1888ca97e
2024-04-16 12:37:13 [01d4676f-20e2-4da6-82d4-e5b1888ca97e] RpcClient init, ServerListFactory = com.alibaba.nacos.client.naming.core.ServerListManager
2024-04-16 12:37:13 [01d4676f-20e2-4da6-82d4-e5b1888ca97e] Registry connection listener to current client:com.alibaba.nacos.client.naming.remote.gprc.redo.NamingGrpcRedoService
2024-04-16 12:37:13 [01d4676f-20e2-4da6-82d4-e5b1888ca97e] Register server push request handler:com.alibaba.nacos.client.naming.remote.gprc.NamingPushRequestHandler
2024-04-16 12:37:13 [01d4676f-20e2-4da6-82d4-e5b1888ca97e] Try to connect to server on start up, server: {serverIp = '14.103.49.141', server main port = 8848}
2024-04-16 12:37:13 grpc client connection server:14.103.49.141 ip,serverPort:9848,grpcTslConfig:{"sslProvider":"","enableTls":false,"mutualAuthEnable":false,"trustAll":false}
2024-04-16 12:37:14 Ready to get current node abilities...
2024-04-16 12:37:14 Ready to initialize current node abilities, support modes: [SDK_CLIENT]
2024-04-16 12:37:14 Initialize current abilities finish...
2024-04-16 12:37:14 [AbilityControlManager] Successfully initialize AbilityControlManager
2024-04-16 12:37:14 [01d4676f-20e2-4da6-82d4-e5b1888ca97e] Success to connect to server [14.103.49.141:8848] on start up, connectionId = 1713242234422_183.192.231.186_5538
2024-04-16 12:37:14 [01d4676f-20e2-4da6-82d4-e5b1888ca97e] Notify connected event to listeners.
2024-04-16 12:37:14 Grpc connection connect
2024-04-16 12:37:14 [01d4676f-20e2-4da6-82d4-e5b1888ca97e] Register server push request handler:com.alibaba.nacos.common.remote.client.RpcClient$ConnectResetRequestHandler
2024-04-16 12:37:14 [01d4676f-20e2-4da6-82d4-e5b1888ca97e] Register server push request handler:com.alibaba.nacos.common.remote.client.RpcClient$$Lambda$1246/0x0000000801464bc0
2024-04-16 12:37:14 [REGISTER-SERVICE] public registering service service-cart with instance Instance{instanceId='null', ip='192.168.1.8', port=8514, weight=1.0, healthy=true, enabled=true, ephemeral=true, clusterName='DEFAULT', serviceName='null', metadata={IPv6=null, preserved.register.source=SPRING_CLOUD}}
2024-04-16 12:37:14 nacos registry, DEFAULT_GROUP service-cart 192.168.1.8:8514 register finished
2024-04-16 12:37:14 Started CartApplication in 3.34 seconds (process running for 3.774)
2024-04-16 12:37:18 Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-04-16 12:37:18 Initializing Servlet 'dispatcherServlet'
2024-04-16 12:37:18 Completed initialization in 2 ms
2024-04-16 12:37:55 HikariPool-1 - Starting...
2024-04-16 12:37:55 HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@664723a3
2024-04-16 12:37:55 HikariPool-1 - Start completed.
2024-04-16 13:33:01 Starting CartApplication using Java 17.0.5 with PID 12748 (/Users/yh/AndroidStudioProjects/spzx-parent/spzx-service/service-cart/build/classes/java/main started by yh in /Users/yh/AndroidStudioProjects/spzx-parent)
2024-04-16 13:33:01 The following 1 profile is active: "dev"
2024-04-16 13:33:02 Multiple Spring Data modules found, entering strict repository configuration mode
2024-04-16 13:33:02 Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2024-04-16 13:33:02 Finished Spring Data repository scanning in 5 ms. Found 0 Redis repository interfaces.
2024-04-16 13:33:02 BeanFactory id=a5d3380a-61ef-3701-8823-659dc43bef8d
2024-04-16 13:33:02 Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$DeferringLoadBalancerInterceptorConfig' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$DeferringLoadBalancerInterceptorConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [lbRestClientPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.
2024-04-16 13:33:02 Bean 'deferringLoadBalancerInterceptor' of type [org.springframework.cloud.client.loadbalancer.DeferringLoadBalancerInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-04-16 13:33:02 Tomcat initialized with port 8514 (http)
2024-04-16 13:33:02 Initializing ProtocolHandler ["http-nio-8514"]
2024-04-16 13:33:02 Starting service [Tomcat]
2024-04-16 13:33:02 Starting Servlet engine: [Apache Tomcat/10.1.19]
2024-04-16 13:33:02 Initializing Spring embedded WebApplicationContext
2024-04-16 13:33:02 Root WebApplicationContext: initialization completed in 1449 ms
2024-04-16 13:33:03 Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-04-16 13:33:03 Starting ProtocolHandler ["http-nio-8514"]
2024-04-16 13:33:03 Exception encountered during context initialization - cancelling refresh attempt: org.springframework.context.ApplicationContextException: Failed to start bean 'webServerStartStop'
2024-04-16 13:33:03 

Error starting ApplicationContext. To display the condition evaluation report re-run your application with 'debug' enabled.
2024-04-16 13:33:03 

***************************
APPLICATION FAILED TO START
***************************

Description:

Web server failed to start. Port 8514 was already in use.

Action:

Identify and stop the process that's listening on port 8514 or configure this application to listen on another port.

2024-04-16 13:35:27 Starting CartApplication using Java 17.0.5 with PID 12982 (/Users/yh/AndroidStudioProjects/spzx-parent/spzx-service/service-cart/build/classes/java/main started by yh in /Users/yh/AndroidStudioProjects/spzx-parent)
2024-04-16 13:35:27 The following 1 profile is active: "dev"
2024-04-16 13:35:27 Multiple Spring Data modules found, entering strict repository configuration mode
2024-04-16 13:35:27 Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2024-04-16 13:35:27 Finished Spring Data repository scanning in 6 ms. Found 0 Redis repository interfaces.
2024-04-16 13:35:28 BeanFactory id=a5d3380a-61ef-3701-8823-659dc43bef8d
2024-04-16 13:35:28 Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$DeferringLoadBalancerInterceptorConfig' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$DeferringLoadBalancerInterceptorConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [lbRestClientPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.
2024-04-16 13:35:28 Bean 'deferringLoadBalancerInterceptor' of type [org.springframework.cloud.client.loadbalancer.DeferringLoadBalancerInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-04-16 13:35:28 Tomcat initialized with port 8514 (http)
2024-04-16 13:35:28 Initializing ProtocolHandler ["http-nio-8514"]
2024-04-16 13:35:28 Starting service [Tomcat]
2024-04-16 13:35:28 Starting Servlet engine: [Apache Tomcat/10.1.19]
2024-04-16 13:35:28 Initializing Spring embedded WebApplicationContext
2024-04-16 13:35:28 Root WebApplicationContext: initialization completed in 1197 ms
2024-04-16 13:35:29 Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-04-16 13:35:29 Starting ProtocolHandler ["http-nio-8514"]
2024-04-16 13:35:29 Tomcat started on port 8514 (http) with context path ''
2024-04-16 13:35:29 initializer namespace from ans.namespace attribute : null
2024-04-16 13:35:29 initializer namespace from ALIBABA_ALIWARE_NAMESPACE attribute :null
2024-04-16 13:35:29 initializer namespace from namespace attribute :null
2024-04-16 13:35:29 [settings] [req-serv] nacos-server port:8848
2024-04-16 13:35:29 [settings] [http-client] connect timeout:1000
2024-04-16 13:35:29 PER_TASK_CONFIG_SIZE: 3000.0
2024-04-16 13:35:29 [ClientAuthPluginManager] Load ClientAuthService com.alibaba.nacos.client.auth.impl.NacosClientAuthServiceImpl success.
2024-04-16 13:35:29 [ClientAuthPluginManager] Load ClientAuthService com.alibaba.nacos.client.auth.ram.RamClientAuthServiceImpl success.
2024-04-16 13:35:29 null No credential found
2024-04-16 13:35:29 [RpcClientFactory] create a new rpc client of 2ec02047-e518-4766-84aa-cfb12adf3045
2024-04-16 13:35:29 Create naming rpc client for uuid->2ec02047-e518-4766-84aa-cfb12adf3045
2024-04-16 13:35:29 [2ec02047-e518-4766-84aa-cfb12adf3045] RpcClient init, ServerListFactory = com.alibaba.nacos.client.naming.core.ServerListManager
2024-04-16 13:35:29 [2ec02047-e518-4766-84aa-cfb12adf3045] Registry connection listener to current client:com.alibaba.nacos.client.naming.remote.gprc.redo.NamingGrpcRedoService
2024-04-16 13:35:29 [2ec02047-e518-4766-84aa-cfb12adf3045] Register server push request handler:com.alibaba.nacos.client.naming.remote.gprc.NamingPushRequestHandler
2024-04-16 13:35:29 [2ec02047-e518-4766-84aa-cfb12adf3045] Try to connect to server on start up, server: {serverIp = '14.103.49.141', server main port = 8848}
2024-04-16 13:35:29 grpc client connection server:14.103.49.141 ip,serverPort:9848,grpcTslConfig:{"sslProvider":"","enableTls":false,"mutualAuthEnable":false,"trustAll":false}
2024-04-16 13:35:30 Ready to get current node abilities...
2024-04-16 13:35:30 Ready to initialize current node abilities, support modes: [SDK_CLIENT]
2024-04-16 13:35:30 Initialize current abilities finish...
2024-04-16 13:35:30 [AbilityControlManager] Successfully initialize AbilityControlManager
2024-04-16 13:35:30 [2ec02047-e518-4766-84aa-cfb12adf3045] Success to connect to server [14.103.49.141:8848] on start up, connectionId = 1713245730069_183.192.231.186_5345
2024-04-16 13:35:30 [2ec02047-e518-4766-84aa-cfb12adf3045] Notify connected event to listeners.
2024-04-16 13:35:30 Grpc connection connect
2024-04-16 13:35:30 [2ec02047-e518-4766-84aa-cfb12adf3045] Register server push request handler:com.alibaba.nacos.common.remote.client.RpcClient$ConnectResetRequestHandler
2024-04-16 13:35:30 [2ec02047-e518-4766-84aa-cfb12adf3045] Register server push request handler:com.alibaba.nacos.common.remote.client.RpcClient$$Lambda$1246/0x0000000801465078
2024-04-16 13:35:30 [REGISTER-SERVICE] public registering service service-cart with instance Instance{instanceId='null', ip='192.168.1.8', port=8514, weight=1.0, healthy=true, enabled=true, ephemeral=true, clusterName='DEFAULT', serviceName='null', metadata={IPv6=null, preserved.register.source=SPRING_CLOUD}}
2024-04-16 13:35:30 nacos registry, DEFAULT_GROUP service-cart 192.168.1.8:8514 register finished
2024-04-16 13:35:30 Started CartApplication in 3.325 seconds (process running for 3.767)
2024-04-16 13:36:06 Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-04-16 13:36:06 Initializing Servlet 'dispatcherServlet'
2024-04-16 13:36:06 Completed initialization in 2 ms
2024-04-16 13:36:13 HikariPool-1 - Starting...
2024-04-16 13:36:14 HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@c8e2f2d
2024-04-16 13:36:14 HikariPool-1 - Start completed.
2024-04-16 14:27:30 Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: org.springframework.dao.QueryTimeoutException: Redis command timed out] with root cause
io.lettuce.core.RedisCommandTimeoutException: Command timed out after 20 second(s)
	at io.lettuce.core.internal.ExceptionFactory.createTimeoutException(ExceptionFactory.java:59)
	at io.lettuce.core.internal.Futures.awaitOrCancel(Futures.java:246)
	at io.lettuce.core.LettuceFutures.awaitOrCancel(LettuceFutures.java:74)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.await(LettuceConnection.java:1008)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.lambda$doInvoke$3(LettuceConnection.java:443)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$Synchronizer.invoke(LettuceInvoker.java:665)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker.just(LettuceInvoker.java:94)
	at org.springframework.data.redis.connection.lettuce.LettuceStringCommands.get(LettuceStringCommands.java:54)
	at org.springframework.data.redis.connection.DefaultedRedisConnection.get(DefaultedRedisConnection.java:284)
	at org.springframework.data.redis.connection.DefaultStringRedisConnection.get(DefaultStringRedisConnection.java:382)
	at org.springframework.data.redis.core.DefaultValueOperations$1.inRedis(DefaultValueOperations.java:54)
	at org.springframework.data.redis.core.AbstractOperations$ValueDeserializingRedisCallback.doInRedis(AbstractOperations.java:61)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:396)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:363)
	at org.springframework.data.redis.core.AbstractOperations.execute(AbstractOperations.java:97)
	at org.springframework.data.redis.core.DefaultValueOperations.get(DefaultValueOperations.java:50)
	at com.atguigu.spzx.common.interceptor.UserLoginAuthInterceptor.preHandle(UserLoginAuthInterceptor.java:28)
	at org.springframework.web.servlet.HandlerExecutionChain.applyPreHandle(HandlerExecutionChain.java:146)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1084)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1744)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:833)
2024-04-16 14:27:37 Reconnecting, last destination was /14.103.49.141:6379
2024-04-16 14:27:37 Reconnected to 14.103.49.141/<unresolved>:6379
2024-04-16 14:29:52 Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: java.lang.NullPointerException: Cannot invoke "com.atguigu.spzx.model.entity.user.UserInfo.getId()" because the return value of "com.atguigu.xpzx.utils.AuthContextUtil.getUserInfo()" is null] with root cause
java.lang.NullPointerException: Cannot invoke "com.atguigu.spzx.model.entity.user.UserInfo.getId()" because the return value of "com.atguigu.xpzx.utils.AuthContextUtil.getUserInfo()" is null
	at com.atguigu.spzx.cart.service.impl.CartServiceImpl.getAllChecked(CartServiceImpl.java:169)
	at com.atguigu.spzx.cart.controller.CartController.getAllCkecked(CartController.java:78)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:925)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:830)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1744)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:833)
2024-04-16 14:40:50 Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: org.springframework.data.redis.RedisSystemException: Redis exception] with root cause
java.io.IOException: Operation timed out
	at java.base/sun.nio.ch.SocketDispatcher.read0(Native Method)
	at java.base/sun.nio.ch.SocketDispatcher.read(SocketDispatcher.java:47)
	at java.base/sun.nio.ch.IOUtil.readIntoNativeBuffer(IOUtil.java:330)
	at java.base/sun.nio.ch.IOUtil.read(IOUtil.java:284)
	at java.base/sun.nio.ch.IOUtil.read(IOUtil.java:259)
	at java.base/sun.nio.ch.SocketChannelImpl.read(SocketChannelImpl.java:417)
	at io.netty.buffer.PooledByteBuf.setBytes(PooledByteBuf.java:255)
	at io.netty.buffer.AbstractByteBuf.writeBytes(AbstractByteBuf.java:1132)
	at io.netty.channel.socket.nio.NioSocketChannel.doReadBytes(NioSocketChannel.java:357)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:151)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:833)
2024-04-16 14:40:50 Reconnecting, last destination was /14.103.49.141:6379
2024-04-16 14:40:50 Reconnected to 14.103.49.141/<unresolved>:6379
2024-04-16 16:02:22 [HttpClientBeanHolder] Start destroying common HttpClient
2024-04-16 16:02:22 [NotifyCenter] Start destroying Publisher
2024-04-16 16:02:22 [NotifyCenter] Destruction of the end
2024-04-16 16:02:22 [HttpClientBeanHolder] Destruction of the end
2024-04-16 16:03:15 Starting CartApplication using Java 17.0.5 with PID 21032 (/Users/yh/AndroidStudioProjects/spzx-parent/spzx-service/service-cart/build/classes/java/main started by yh in /Users/yh/AndroidStudioProjects/spzx-parent)
2024-04-16 16:03:15 The following 1 profile is active: "dev"
2024-04-16 16:03:16 Multiple Spring Data modules found, entering strict repository configuration mode
2024-04-16 16:03:16 Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2024-04-16 16:03:16 Finished Spring Data repository scanning in 9 ms. Found 0 Redis repository interfaces.
2024-04-16 16:03:16 BeanFactory id=a5d3380a-61ef-3701-8823-659dc43bef8d
2024-04-16 16:03:17 Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$DeferringLoadBalancerInterceptorConfig' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$DeferringLoadBalancerInterceptorConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [lbRestClientPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.
2024-04-16 16:03:17 Bean 'deferringLoadBalancerInterceptor' of type [org.springframework.cloud.client.loadbalancer.DeferringLoadBalancerInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-04-16 16:03:17 Tomcat initialized with port 8514 (http)
2024-04-16 16:03:17 Initializing ProtocolHandler ["http-nio-8514"]
2024-04-16 16:03:17 Starting service [Tomcat]
2024-04-16 16:03:17 Starting Servlet engine: [Apache Tomcat/10.1.19]
2024-04-16 16:03:17 Initializing Spring embedded WebApplicationContext
2024-04-16 16:03:17 Root WebApplicationContext: initialization completed in 1927 ms
2024-04-16 16:03:18 Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-04-16 16:03:18 Starting ProtocolHandler ["http-nio-8514"]
2024-04-16 16:03:18 Tomcat started on port 8514 (http) with context path ''
2024-04-16 16:03:18 initializer namespace from ans.namespace attribute : null
2024-04-16 16:03:18 initializer namespace from ALIBABA_ALIWARE_NAMESPACE attribute :null
2024-04-16 16:03:18 initializer namespace from namespace attribute :null
2024-04-16 16:03:18 [settings] [req-serv] nacos-server port:8848
2024-04-16 16:03:18 [settings] [http-client] connect timeout:1000
2024-04-16 16:03:18 PER_TASK_CONFIG_SIZE: 3000.0
2024-04-16 16:03:18 [ClientAuthPluginManager] Load ClientAuthService com.alibaba.nacos.client.auth.impl.NacosClientAuthServiceImpl success.
2024-04-16 16:03:18 [ClientAuthPluginManager] Load ClientAuthService com.alibaba.nacos.client.auth.ram.RamClientAuthServiceImpl success.
2024-04-16 16:03:18 null No credential found
2024-04-16 16:03:18 [RpcClientFactory] create a new rpc client of 3b82650f-5141-4e41-863b-b9dc9a02e743
2024-04-16 16:03:18 Create naming rpc client for uuid->3b82650f-5141-4e41-863b-b9dc9a02e743
2024-04-16 16:03:18 [3b82650f-5141-4e41-863b-b9dc9a02e743] RpcClient init, ServerListFactory = com.alibaba.nacos.client.naming.core.ServerListManager
2024-04-16 16:03:18 [3b82650f-5141-4e41-863b-b9dc9a02e743] Registry connection listener to current client:com.alibaba.nacos.client.naming.remote.gprc.redo.NamingGrpcRedoService
2024-04-16 16:03:18 [3b82650f-5141-4e41-863b-b9dc9a02e743] Register server push request handler:com.alibaba.nacos.client.naming.remote.gprc.NamingPushRequestHandler
2024-04-16 16:03:18 [3b82650f-5141-4e41-863b-b9dc9a02e743] Try to connect to server on start up, server: {serverIp = '14.103.49.141', server main port = 8848}
2024-04-16 16:03:18 grpc client connection server:14.103.49.141 ip,serverPort:9848,grpcTslConfig:{"sslProvider":"","enableTls":false,"mutualAuthEnable":false,"trustAll":false}
2024-04-16 16:03:19 Ready to get current node abilities...
2024-04-16 16:03:19 Ready to initialize current node abilities, support modes: [SDK_CLIENT]
2024-04-16 16:03:19 Initialize current abilities finish...
2024-04-16 16:03:19 [AbilityControlManager] Successfully initialize AbilityControlManager
2024-04-16 16:03:19 [3b82650f-5141-4e41-863b-b9dc9a02e743] Success to connect to server [14.103.49.141:8848] on start up, connectionId = 1713254599383_183.192.231.186_5301
2024-04-16 16:03:19 [3b82650f-5141-4e41-863b-b9dc9a02e743] Notify connected event to listeners.
2024-04-16 16:03:19 Grpc connection connect
2024-04-16 16:03:19 [3b82650f-5141-4e41-863b-b9dc9a02e743] Register server push request handler:com.alibaba.nacos.common.remote.client.RpcClient$ConnectResetRequestHandler
2024-04-16 16:03:19 [3b82650f-5141-4e41-863b-b9dc9a02e743] Register server push request handler:com.alibaba.nacos.common.remote.client.RpcClient$$Lambda$1246/0x000000080145a3d0
2024-04-16 16:03:19 [REGISTER-SERVICE] public registering service service-cart with instance Instance{instanceId='null', ip='192.168.1.8', port=8514, weight=1.0, healthy=true, enabled=true, ephemeral=true, clusterName='DEFAULT', serviceName='null', metadata={IPv6=null, preserved.register.source=SPRING_CLOUD}}
2024-04-16 16:03:19 nacos registry, DEFAULT_GROUP service-cart 192.168.1.8:8514 register finished
2024-04-16 16:03:19 Started CartApplication in 4.485 seconds (process running for 5.029)
2024-04-16 16:18:47 [HttpClientBeanHolder] Start destroying common HttpClient
2024-04-16 16:18:47 [NotifyCenter] Start destroying Publisher
2024-04-16 16:18:47 [NotifyCenter] Destruction of the end
2024-04-16 16:18:47 [HttpClientBeanHolder] Destruction of the end
2024-04-16 16:18:51 Starting CartApplication using Java 17.0.5 with PID 21908 (/Users/yh/AndroidStudioProjects/spzx-parent/spzx-service/service-cart/build/classes/java/main started by yh in /Users/yh/AndroidStudioProjects/spzx-parent)
2024-04-16 16:18:51 The following 1 profile is active: "dev"
2024-04-16 16:18:52 Multiple Spring Data modules found, entering strict repository configuration mode
2024-04-16 16:18:52 Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2024-04-16 16:18:52 Finished Spring Data repository scanning in 5 ms. Found 0 Redis repository interfaces.
2024-04-16 16:18:52 BeanFactory id=a5d3380a-61ef-3701-8823-659dc43bef8d
2024-04-16 16:18:52 Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$DeferringLoadBalancerInterceptorConfig' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$DeferringLoadBalancerInterceptorConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [lbRestClientPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.
2024-04-16 16:18:52 Bean 'deferringLoadBalancerInterceptor' of type [org.springframework.cloud.client.loadbalancer.DeferringLoadBalancerInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-04-16 16:18:53 Tomcat initialized with port 8514 (http)
2024-04-16 16:18:53 Initializing ProtocolHandler ["http-nio-8514"]
2024-04-16 16:18:53 Starting service [Tomcat]
2024-04-16 16:18:53 Starting Servlet engine: [Apache Tomcat/10.1.19]
2024-04-16 16:18:53 Initializing Spring embedded WebApplicationContext
2024-04-16 16:18:53 Root WebApplicationContext: initialization completed in 1376 ms
2024-04-16 16:18:54 Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-04-16 16:18:54 Starting ProtocolHandler ["http-nio-8514"]
2024-04-16 16:18:54 Tomcat started on port 8514 (http) with context path ''
2024-04-16 16:18:54 initializer namespace from ans.namespace attribute : null
2024-04-16 16:18:54 initializer namespace from ALIBABA_ALIWARE_NAMESPACE attribute :null
2024-04-16 16:18:54 initializer namespace from namespace attribute :null
2024-04-16 16:18:54 null No credential found
2024-04-16 16:18:54 [settings] [req-serv] nacos-server port:8848
2024-04-16 16:18:54 [settings] [http-client] connect timeout:1000
2024-04-16 16:18:54 PER_TASK_CONFIG_SIZE: 3000.0
2024-04-16 16:18:54 [ClientAuthPluginManager] Load ClientAuthService com.alibaba.nacos.client.auth.impl.NacosClientAuthServiceImpl success.
2024-04-16 16:18:54 [ClientAuthPluginManager] Load ClientAuthService com.alibaba.nacos.client.auth.ram.RamClientAuthServiceImpl success.
2024-04-16 16:18:54 [RpcClientFactory] create a new rpc client of 46e3b871-10f5-4575-b7a3-68aafe63c31a
2024-04-16 16:18:54 Create naming rpc client for uuid->46e3b871-10f5-4575-b7a3-68aafe63c31a
2024-04-16 16:18:54 [46e3b871-10f5-4575-b7a3-68aafe63c31a] RpcClient init, ServerListFactory = com.alibaba.nacos.client.naming.core.ServerListManager
2024-04-16 16:18:54 [46e3b871-10f5-4575-b7a3-68aafe63c31a] Registry connection listener to current client:com.alibaba.nacos.client.naming.remote.gprc.redo.NamingGrpcRedoService
2024-04-16 16:18:54 [46e3b871-10f5-4575-b7a3-68aafe63c31a] Register server push request handler:com.alibaba.nacos.client.naming.remote.gprc.NamingPushRequestHandler
2024-04-16 16:18:54 [46e3b871-10f5-4575-b7a3-68aafe63c31a] Try to connect to server on start up, server: {serverIp = '14.103.49.141', server main port = 8848}
2024-04-16 16:18:54 grpc client connection server:14.103.49.141 ip,serverPort:9848,grpcTslConfig:{"sslProvider":"","enableTls":false,"mutualAuthEnable":false,"trustAll":false}
2024-04-16 16:18:54 Ready to get current node abilities...
2024-04-16 16:18:54 Ready to initialize current node abilities, support modes: [SDK_CLIENT]
2024-04-16 16:18:54 Initialize current abilities finish...
2024-04-16 16:18:54 [AbilityControlManager] Successfully initialize AbilityControlManager
2024-04-16 16:18:54 [46e3b871-10f5-4575-b7a3-68aafe63c31a] Success to connect to server [14.103.49.141:8848] on start up, connectionId = 1713255534816_183.192.231.186_5243
2024-04-16 16:18:54 [46e3b871-10f5-4575-b7a3-68aafe63c31a] Notify connected event to listeners.
2024-04-16 16:18:54 Grpc connection connect
2024-04-16 16:18:54 [46e3b871-10f5-4575-b7a3-68aafe63c31a] Register server push request handler:com.alibaba.nacos.common.remote.client.RpcClient$ConnectResetRequestHandler
2024-04-16 16:18:54 [46e3b871-10f5-4575-b7a3-68aafe63c31a] Register server push request handler:com.alibaba.nacos.common.remote.client.RpcClient$$Lambda$1246/0x0000000801462188
2024-04-16 16:18:54 [REGISTER-SERVICE] public registering service service-cart with instance Instance{instanceId='null', ip='192.168.1.8', port=8514, weight=1.0, healthy=true, enabled=true, ephemeral=true, clusterName='DEFAULT', serviceName='null', metadata={IPv6=null, preserved.register.source=SPRING_CLOUD}}
2024-04-16 16:18:54 nacos registry, DEFAULT_GROUP service-cart 192.168.1.8:8514 register finished
2024-04-16 16:18:54 Started CartApplication in 3.702 seconds (process running for 4.184)
2024-04-16 16:22:40 Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-04-16 16:22:40 Initializing Servlet 'dispatcherServlet'
2024-04-16 16:22:40 Completed initialization in 2 ms
2024-04-16 16:22:48 HikariPool-1 - Starting...
2024-04-16 16:22:48 HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@1ec44243
2024-04-16 16:22:48 HikariPool-1 - Start completed.
2024-04-16 16:37:40 Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: org.springframework.data.redis.RedisSystemException: Redis exception] with root cause
java.io.IOException: Operation timed out
	at java.base/sun.nio.ch.SocketDispatcher.read0(Native Method)
	at java.base/sun.nio.ch.SocketDispatcher.read(SocketDispatcher.java:47)
	at java.base/sun.nio.ch.IOUtil.readIntoNativeBuffer(IOUtil.java:330)
	at java.base/sun.nio.ch.IOUtil.read(IOUtil.java:284)
	at java.base/sun.nio.ch.IOUtil.read(IOUtil.java:259)
	at java.base/sun.nio.ch.SocketChannelImpl.read(SocketChannelImpl.java:417)
	at io.netty.buffer.PooledByteBuf.setBytes(PooledByteBuf.java:255)
	at io.netty.buffer.AbstractByteBuf.writeBytes(AbstractByteBuf.java:1132)
	at io.netty.channel.socket.nio.NioSocketChannel.doReadBytes(NioSocketChannel.java:357)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:151)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:833)
2024-04-16 16:37:40 Reconnecting, last destination was /14.103.49.141:6379
2024-04-16 16:37:40 Reconnected to 14.103.49.141/<unresolved>:6379
2024-04-16 16:44:52 Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: org.springframework.data.redis.RedisSystemException: Redis exception] with root cause
java.io.IOException: Operation timed out
	at java.base/sun.nio.ch.SocketDispatcher.read0(Native Method)
	at java.base/sun.nio.ch.SocketDispatcher.read(SocketDispatcher.java:47)
	at java.base/sun.nio.ch.IOUtil.readIntoNativeBuffer(IOUtil.java:330)
	at java.base/sun.nio.ch.IOUtil.read(IOUtil.java:284)
	at java.base/sun.nio.ch.IOUtil.read(IOUtil.java:259)
	at java.base/sun.nio.ch.SocketChannelImpl.read(SocketChannelImpl.java:417)
	at io.netty.buffer.PooledByteBuf.setBytes(PooledByteBuf.java:255)
	at io.netty.buffer.AbstractByteBuf.writeBytes(AbstractByteBuf.java:1132)
	at io.netty.buffer.WrappedByteBuf.writeBytes(WrappedByteBuf.java:821)
	at io.netty.channel.socket.nio.NioSocketChannel.doReadBytes(NioSocketChannel.java:357)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:151)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:833)
2024-04-16 16:44:53 Reconnecting, last destination was /14.103.49.141:6379
2024-04-16 16:44:53 Reconnected to 14.103.49.141/<unresolved>:6379
2024-04-16 16:45:08 [NotifyCenter] Start destroying Publisher
2024-04-16 16:45:08 [HttpClientBeanHolder] Start destroying common HttpClient
2024-04-16 16:45:08 [NotifyCenter] Destruction of the end
2024-04-16 16:45:08 [HttpClientBeanHolder] Destruction of the end
2024-04-16 16:45:22 Starting CartApplication using Java 17.0.5 with PID 24764 (/Users/yh/AndroidStudioProjects/spzx-parent/spzx-service/service-cart/build/classes/java/main started by yh in /Users/yh/AndroidStudioProjects/spzx-parent)
2024-04-16 16:45:22 The following 1 profile is active: "dev"
2024-04-16 16:45:23 Multiple Spring Data modules found, entering strict repository configuration mode
2024-04-16 16:45:23 Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2024-04-16 16:45:23 Finished Spring Data repository scanning in 8 ms. Found 0 Redis repository interfaces.
2024-04-16 16:45:24 BeanFactory id=a5d3380a-61ef-3701-8823-659dc43bef8d
2024-04-16 16:45:24 Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$DeferringLoadBalancerInterceptorConfig' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$DeferringLoadBalancerInterceptorConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [lbRestClientPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.
2024-04-16 16:45:24 Bean 'deferringLoadBalancerInterceptor' of type [org.springframework.cloud.client.loadbalancer.DeferringLoadBalancerInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-04-16 16:45:24 Tomcat initialized with port 8514 (http)
2024-04-16 16:45:24 Initializing ProtocolHandler ["http-nio-8514"]
2024-04-16 16:45:24 Starting service [Tomcat]
2024-04-16 16:45:24 Starting Servlet engine: [Apache Tomcat/10.1.19]
2024-04-16 16:45:24 Initializing Spring embedded WebApplicationContext
2024-04-16 16:45:24 Root WebApplicationContext: initialization completed in 1989 ms
2024-04-16 16:45:25 Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-04-16 16:45:25 Starting ProtocolHandler ["http-nio-8514"]
2024-04-16 16:45:26 Tomcat started on port 8514 (http) with context path ''
2024-04-16 16:45:26 initializer namespace from ans.namespace attribute : null
2024-04-16 16:45:26 initializer namespace from ALIBABA_ALIWARE_NAMESPACE attribute :null
2024-04-16 16:45:26 initializer namespace from namespace attribute :null
2024-04-16 16:45:26 [settings] [req-serv] nacos-server port:8848
2024-04-16 16:45:26 [settings] [http-client] connect timeout:1000
2024-04-16 16:45:26 PER_TASK_CONFIG_SIZE: 3000.0
2024-04-16 16:45:26 null No credential found
2024-04-16 16:45:26 [ClientAuthPluginManager] Load ClientAuthService com.alibaba.nacos.client.auth.impl.NacosClientAuthServiceImpl success.
2024-04-16 16:45:26 [ClientAuthPluginManager] Load ClientAuthService com.alibaba.nacos.client.auth.ram.RamClientAuthServiceImpl success.
2024-04-16 16:45:26 [RpcClientFactory] create a new rpc client of 9abe7478-d247-4a04-b96d-befbfbc4984c
2024-04-16 16:45:26 Create naming rpc client for uuid->9abe7478-d247-4a04-b96d-befbfbc4984c
2024-04-16 16:45:26 [9abe7478-d247-4a04-b96d-befbfbc4984c] RpcClient init, ServerListFactory = com.alibaba.nacos.client.naming.core.ServerListManager
2024-04-16 16:45:26 [9abe7478-d247-4a04-b96d-befbfbc4984c] Registry connection listener to current client:com.alibaba.nacos.client.naming.remote.gprc.redo.NamingGrpcRedoService
2024-04-16 16:45:26 [9abe7478-d247-4a04-b96d-befbfbc4984c] Register server push request handler:com.alibaba.nacos.client.naming.remote.gprc.NamingPushRequestHandler
2024-04-16 16:45:26 [9abe7478-d247-4a04-b96d-befbfbc4984c] Try to connect to server on start up, server: {serverIp = '14.103.49.141', server main port = 8848}
2024-04-16 16:45:26 grpc client connection server:14.103.49.141 ip,serverPort:9848,grpcTslConfig:{"sslProvider":"","enableTls":false,"mutualAuthEnable":false,"trustAll":false}
2024-04-16 16:45:26 Ready to get current node abilities...
2024-04-16 16:45:26 Ready to initialize current node abilities, support modes: [SDK_CLIENT]
2024-04-16 16:45:26 Initialize current abilities finish...
2024-04-16 16:45:26 [AbilityControlManager] Successfully initialize AbilityControlManager
2024-04-16 16:45:26 [9abe7478-d247-4a04-b96d-befbfbc4984c] Success to connect to server [14.103.49.141:8848] on start up, connectionId = 1713257126619_183.192.231.186_5240
2024-04-16 16:45:26 [9abe7478-d247-4a04-b96d-befbfbc4984c] Notify connected event to listeners.
2024-04-16 16:45:26 Grpc connection connect
2024-04-16 16:45:26 [9abe7478-d247-4a04-b96d-befbfbc4984c] Register server push request handler:com.alibaba.nacos.common.remote.client.RpcClient$ConnectResetRequestHandler
2024-04-16 16:45:26 [9abe7478-d247-4a04-b96d-befbfbc4984c] Register server push request handler:com.alibaba.nacos.common.remote.client.RpcClient$$Lambda$1246/0x000000080145d7d8
2024-04-16 16:45:26 [REGISTER-SERVICE] public registering service service-cart with instance Instance{instanceId='null', ip='192.168.1.8', port=8514, weight=1.0, healthy=true, enabled=true, ephemeral=true, clusterName='DEFAULT', serviceName='null', metadata={IPv6=null, preserved.register.source=SPRING_CLOUD}}
2024-04-16 16:45:26 nacos registry, DEFAULT_GROUP service-cart 192.168.1.8:8514 register finished
2024-04-16 16:45:26 Started CartApplication in 4.972 seconds (process running for 5.639)
2024-04-16 16:45:43 Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-04-16 16:45:43 Initializing Servlet 'dispatcherServlet'
2024-04-16 16:45:43 Completed initialization in 2 ms
2024-04-16 16:54:06 [NotifyCenter] Start destroying Publisher
2024-04-16 16:54:06 [HttpClientBeanHolder] Start destroying common HttpClient
2024-04-16 16:54:06 [NotifyCenter] Destruction of the end
2024-04-16 16:54:06 [HttpClientBeanHolder] Destruction of the end
2024-04-16 16:54:32 Starting CartApplication using Java 17.0.5 with PID 25797 (/Users/yh/AndroidStudioProjects/spzx-parent/spzx-service/service-cart/build/classes/java/main started by yh in /Users/yh/AndroidStudioProjects/spzx-parent)
2024-04-16 16:54:32 The following 1 profile is active: "dev"
2024-04-16 16:54:33 Multiple Spring Data modules found, entering strict repository configuration mode
2024-04-16 16:54:33 Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2024-04-16 16:54:33 Finished Spring Data repository scanning in 5 ms. Found 0 Redis repository interfaces.
2024-04-16 16:54:33 BeanFactory id=a5d3380a-61ef-3701-8823-659dc43bef8d
2024-04-16 16:54:34 Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$DeferringLoadBalancerInterceptorConfig' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$DeferringLoadBalancerInterceptorConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [lbRestClientPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.
2024-04-16 16:54:34 Bean 'deferringLoadBalancerInterceptor' of type [org.springframework.cloud.client.loadbalancer.DeferringLoadBalancerInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-04-16 16:54:34 Tomcat initialized with port 8514 (http)
2024-04-16 16:54:34 Initializing ProtocolHandler ["http-nio-8514"]
2024-04-16 16:54:34 Starting service [Tomcat]
2024-04-16 16:54:34 Starting Servlet engine: [Apache Tomcat/10.1.19]
2024-04-16 16:54:34 Initializing Spring embedded WebApplicationContext
2024-04-16 16:54:34 Root WebApplicationContext: initialization completed in 1795 ms
2024-04-16 16:54:35 Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-04-16 16:54:35 Starting ProtocolHandler ["http-nio-8514"]
2024-04-16 16:54:35 Tomcat started on port 8514 (http) with context path ''
2024-04-16 16:54:35 initializer namespace from ans.namespace attribute : null
2024-04-16 16:54:35 initializer namespace from ALIBABA_ALIWARE_NAMESPACE attribute :null
2024-04-16 16:54:35 initializer namespace from namespace attribute :null
2024-04-16 16:54:35 [settings] [req-serv] nacos-server port:8848
2024-04-16 16:54:35 [settings] [http-client] connect timeout:1000
2024-04-16 16:54:35 PER_TASK_CONFIG_SIZE: 3000.0
2024-04-16 16:54:35 null No credential found
2024-04-16 16:54:35 [ClientAuthPluginManager] Load ClientAuthService com.alibaba.nacos.client.auth.impl.NacosClientAuthServiceImpl success.
2024-04-16 16:54:35 [ClientAuthPluginManager] Load ClientAuthService com.alibaba.nacos.client.auth.ram.RamClientAuthServiceImpl success.
2024-04-16 16:54:35 [RpcClientFactory] create a new rpc client of 1348947c-668f-4eff-89bc-785e92f141d0
2024-04-16 16:54:35 Create naming rpc client for uuid->1348947c-668f-4eff-89bc-785e92f141d0
2024-04-16 16:54:35 [1348947c-668f-4eff-89bc-785e92f141d0] RpcClient init, ServerListFactory = com.alibaba.nacos.client.naming.core.ServerListManager
2024-04-16 16:54:35 [1348947c-668f-4eff-89bc-785e92f141d0] Registry connection listener to current client:com.alibaba.nacos.client.naming.remote.gprc.redo.NamingGrpcRedoService
2024-04-16 16:54:35 [1348947c-668f-4eff-89bc-785e92f141d0] Register server push request handler:com.alibaba.nacos.client.naming.remote.gprc.NamingPushRequestHandler
2024-04-16 16:54:35 [1348947c-668f-4eff-89bc-785e92f141d0] Try to connect to server on start up, server: {serverIp = '14.103.49.141', server main port = 8848}
2024-04-16 16:54:35 grpc client connection server:14.103.49.141 ip,serverPort:9848,grpcTslConfig:{"sslProvider":"","enableTls":false,"mutualAuthEnable":false,"trustAll":false}
2024-04-16 16:54:36 Ready to get current node abilities...
2024-04-16 16:54:36 Ready to initialize current node abilities, support modes: [SDK_CLIENT]
2024-04-16 16:54:36 Initialize current abilities finish...
2024-04-16 16:54:36 [AbilityControlManager] Successfully initialize AbilityControlManager
2024-04-16 16:54:36 [1348947c-668f-4eff-89bc-785e92f141d0] Success to connect to server [14.103.49.141:8848] on start up, connectionId = 1713257676377_183.192.231.186_5447
2024-04-16 16:54:36 [1348947c-668f-4eff-89bc-785e92f141d0] Notify connected event to listeners.
2024-04-16 16:54:36 Grpc connection connect
2024-04-16 16:54:36 [1348947c-668f-4eff-89bc-785e92f141d0] Register server push request handler:com.alibaba.nacos.common.remote.client.RpcClient$ConnectResetRequestHandler
2024-04-16 16:54:36 [1348947c-668f-4eff-89bc-785e92f141d0] Register server push request handler:com.alibaba.nacos.common.remote.client.RpcClient$$Lambda$1246/0x000000080145ac50
2024-04-16 16:54:36 [REGISTER-SERVICE] public registering service service-cart with instance Instance{instanceId='null', ip='192.168.1.8', port=8514, weight=1.0, healthy=true, enabled=true, ephemeral=true, clusterName='DEFAULT', serviceName='null', metadata={IPv6=null, preserved.register.source=SPRING_CLOUD}}
2024-04-16 16:54:36 nacos registry, DEFAULT_GROUP service-cart 192.168.1.8:8514 register finished
2024-04-16 16:54:36 Started CartApplication in 4.57 seconds (process running for 5.594)
2024-04-16 16:55:10 Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-04-16 16:55:10 Initializing Servlet 'dispatcherServlet'
2024-04-16 16:55:10 Completed initialization in 2 ms
2024-04-16 17:26:35 [1348947c-668f-4eff-89bc-785e92f141d0] Server healthy check fail, currentConnection = 1713257676377_183.192.231.186_5447
2024-04-16 17:26:36 [1348947c-668f-4eff-89bc-785e92f141d0] Try to reconnect to a new server, server is  not appointed, will choose a random server.
2024-04-16 17:26:36 grpc client connection server:14.103.49.141 ip,serverPort:9848,grpcTslConfig:{"sslProvider":"","enableTls":false,"mutualAuthEnable":false,"trustAll":false}
2024-04-16 17:26:36 [1348947c-668f-4eff-89bc-785e92f141d0] Success to connect a server [14.103.49.141:8848], connectionId = 1713259596115_183.192.231.186_5198
2024-04-16 17:26:36 [1348947c-668f-4eff-89bc-785e92f141d0] Abandon prev connection, server is 14.103.49.141:8848, connectionId is 1713257676377_183.192.231.186_5447
2024-04-16 17:26:36 Close current connection 1713257676377_183.192.231.186_5447
2024-04-16 17:26:36 [1713257676377_183.192.231.186_5447]Ignore error event,isRunning:false,isAbandon=true
2024-04-16 17:26:36 [1348947c-668f-4eff-89bc-785e92f141d0] Notify disconnected event to listeners
2024-04-16 17:26:36 Grpc connection disconnect, mark to redo
2024-04-16 17:26:36 mark to redo completed
2024-04-16 17:26:36 [1348947c-668f-4eff-89bc-785e92f141d0] Notify connected event to listeners.
2024-04-16 17:26:36 Grpc connection connect
2024-04-16 17:26:37 Redo instance operation REGISTER for DEFAULT_GROUP@@service-cart
2024-04-16 18:39:46 Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: org.springframework.dao.QueryTimeoutException: Redis command timed out] with root cause
io.lettuce.core.RedisCommandTimeoutException: Command timed out after 20 second(s)
	at io.lettuce.core.internal.ExceptionFactory.createTimeoutException(ExceptionFactory.java:59)
	at io.lettuce.core.internal.Futures.awaitOrCancel(Futures.java:246)
	at io.lettuce.core.LettuceFutures.awaitOrCancel(LettuceFutures.java:74)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.await(LettuceConnection.java:1008)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.lambda$doInvoke$3(LettuceConnection.java:443)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$Synchronizer.invoke(LettuceInvoker.java:665)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker.just(LettuceInvoker.java:94)
	at org.springframework.data.redis.connection.lettuce.LettuceStringCommands.get(LettuceStringCommands.java:54)
	at org.springframework.data.redis.connection.DefaultedRedisConnection.get(DefaultedRedisConnection.java:284)
	at org.springframework.data.redis.connection.DefaultStringRedisConnection.get(DefaultStringRedisConnection.java:382)
	at org.springframework.data.redis.core.DefaultValueOperations$1.inRedis(DefaultValueOperations.java:54)
	at org.springframework.data.redis.core.AbstractOperations$ValueDeserializingRedisCallback.doInRedis(AbstractOperations.java:61)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:396)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:363)
	at org.springframework.data.redis.core.AbstractOperations.execute(AbstractOperations.java:97)
	at org.springframework.data.redis.core.DefaultValueOperations.get(DefaultValueOperations.java:50)
	at com.atguigu.spzx.common.interceptor.UserLoginAuthInterceptor.preHandle(UserLoginAuthInterceptor.java:28)
	at org.springframework.web.servlet.HandlerExecutionChain.applyPreHandle(HandlerExecutionChain.java:146)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1084)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1744)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:833)
2024-04-16 18:40:06 Reconnecting, last destination was /14.103.49.141:6379
2024-04-16 18:40:06 Reconnected to 14.103.49.141/<unresolved>:6379
2024-04-16 18:50:41 Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: org.springframework.data.redis.RedisSystemException: Redis exception] with root cause
java.io.IOException: Operation timed out
	at java.base/sun.nio.ch.SocketDispatcher.read0(Native Method)
	at java.base/sun.nio.ch.SocketDispatcher.read(SocketDispatcher.java:47)
	at java.base/sun.nio.ch.IOUtil.readIntoNativeBuffer(IOUtil.java:330)
	at java.base/sun.nio.ch.IOUtil.read(IOUtil.java:284)
	at java.base/sun.nio.ch.IOUtil.read(IOUtil.java:259)
	at java.base/sun.nio.ch.SocketChannelImpl.read(SocketChannelImpl.java:417)
	at io.netty.buffer.PooledByteBuf.setBytes(PooledByteBuf.java:255)
	at io.netty.buffer.AbstractByteBuf.writeBytes(AbstractByteBuf.java:1132)
	at io.netty.channel.socket.nio.NioSocketChannel.doReadBytes(NioSocketChannel.java:357)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:151)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:833)
2024-04-16 18:50:41 Reconnecting, last destination was /14.103.49.141:6379
2024-04-16 18:50:41 Reconnected to 14.103.49.141/<unresolved>:6379
2024-04-16 21:40:24 [1348947c-668f-4eff-89bc-785e92f141d0] Server healthy check fail, currentConnection = 1713259596115_183.192.231.186_5198
2024-04-16 21:40:24 [1348947c-668f-4eff-89bc-785e92f141d0] Try to reconnect to a new server, server is  not appointed, will choose a random server.
2024-04-16 21:40:24 grpc client connection server:14.103.49.141 ip,serverPort:9848,grpcTslConfig:{"sslProvider":"","enableTls":false,"mutualAuthEnable":false,"trustAll":false}
2024-04-16 21:40:25 [1348947c-668f-4eff-89bc-785e92f141d0] Success to connect a server [14.103.49.141:8848], connectionId = 1713274825073_183.192.231.186_5496
2024-04-16 21:40:25 [1348947c-668f-4eff-89bc-785e92f141d0] Abandon prev connection, server is 14.103.49.141:8848, connectionId is 1713259596115_183.192.231.186_5198
2024-04-16 21:40:25 Close current connection 1713259596115_183.192.231.186_5198
2024-04-16 21:40:25 [1713259596115_183.192.231.186_5198]Ignore error event,isRunning:true,isAbandon=true
2024-04-16 21:40:25 [1348947c-668f-4eff-89bc-785e92f141d0] Notify disconnected event to listeners
2024-04-16 21:40:25 Grpc connection disconnect, mark to redo
2024-04-16 21:40:25 mark to redo completed
2024-04-16 21:40:25 [1348947c-668f-4eff-89bc-785e92f141d0] Notify connected event to listeners.
2024-04-16 21:40:25 Grpc connection connect
2024-04-16 21:40:26 Redo instance operation REGISTER for DEFAULT_GROUP@@service-cart
2024-04-16 21:56:39 [1348947c-668f-4eff-89bc-785e92f141d0] Server healthy check fail, currentConnection = 1713274825073_183.192.231.186_5496
2024-04-16 21:56:39 [1348947c-668f-4eff-89bc-785e92f141d0] Try to reconnect to a new server, server is  not appointed, will choose a random server.
2024-04-16 21:56:39 grpc client connection server:14.103.49.141 ip,serverPort:9848,grpcTslConfig:{"sslProvider":"","enableTls":false,"mutualAuthEnable":false,"trustAll":false}
2024-04-16 21:56:39 [1348947c-668f-4eff-89bc-785e92f141d0] Success to connect a server [14.103.49.141:8848], connectionId = 1713275799529_183.192.231.186_5535
2024-04-16 21:56:39 [1348947c-668f-4eff-89bc-785e92f141d0] Abandon prev connection, server is 14.103.49.141:8848, connectionId is 1713274825073_183.192.231.186_5496
2024-04-16 21:56:39 Close current connection 1713274825073_183.192.231.186_5496
2024-04-16 21:56:39 [1348947c-668f-4eff-89bc-785e92f141d0] Notify disconnected event to listeners
2024-04-16 21:56:39 Grpc connection disconnect, mark to redo
2024-04-16 21:56:39 mark to redo completed
2024-04-16 21:56:39 [1348947c-668f-4eff-89bc-785e92f141d0] Notify connected event to listeners.
2024-04-16 21:56:39 Grpc connection connect
2024-04-16 21:56:39 [1713274825073_183.192.231.186_5496]Ignore error event,isRunning:true,isAbandon=true
2024-04-16 21:56:42 Redo instance operation REGISTER for DEFAULT_GROUP@@service-cart
2024-04-16 22:12:57 [1348947c-668f-4eff-89bc-785e92f141d0] Server healthy check fail, currentConnection = 1713275799529_183.192.231.186_5535
2024-04-16 22:12:57 [1348947c-668f-4eff-89bc-785e92f141d0] Try to reconnect to a new server, server is  not appointed, will choose a random server.
2024-04-16 22:12:57 grpc client connection server:14.103.49.141 ip,serverPort:9848,grpcTslConfig:{"sslProvider":"","enableTls":false,"mutualAuthEnable":false,"trustAll":false}
2024-04-16 22:12:57 [1348947c-668f-4eff-89bc-785e92f141d0] Success to connect a server [14.103.49.141:8848], connectionId = 1713276777177_183.192.231.186_5608
2024-04-16 22:12:57 [1348947c-668f-4eff-89bc-785e92f141d0] Abandon prev connection, server is 14.103.49.141:8848, connectionId is 1713275799529_183.192.231.186_5535
2024-04-16 22:12:57 Close current connection 1713275799529_183.192.231.186_5535
2024-04-16 22:12:57 [1348947c-668f-4eff-89bc-785e92f141d0] Notify disconnected event to listeners
2024-04-16 22:12:57 Grpc connection disconnect, mark to redo
2024-04-16 22:12:57 mark to redo completed
2024-04-16 22:12:57 [1348947c-668f-4eff-89bc-785e92f141d0] Notify connected event to listeners.
2024-04-16 22:12:57 Grpc connection connect
2024-04-16 22:12:57 [1713275799529_183.192.231.186_5535]Ignore error event,isRunning:true,isAbandon=true
2024-04-16 22:12:57 Redo instance operation REGISTER for DEFAULT_GROUP@@service-cart
2024-04-16 22:29:10 [1348947c-668f-4eff-89bc-785e92f141d0] Server healthy check fail, currentConnection = 1713276777177_183.192.231.186_5608
2024-04-16 22:29:10 [1348947c-668f-4eff-89bc-785e92f141d0] Try to reconnect to a new server, server is  not appointed, will choose a random server.
2024-04-16 22:29:10 grpc client connection server:14.103.49.141 ip,serverPort:9848,grpcTslConfig:{"sslProvider":"","enableTls":false,"mutualAuthEnable":false,"trustAll":false}
2024-04-16 22:29:10 [1348947c-668f-4eff-89bc-785e92f141d0] Success to connect a server [14.103.49.141:8848], connectionId = 1713277750776_183.192.231.186_5208
2024-04-16 22:29:10 [1348947c-668f-4eff-89bc-785e92f141d0] Abandon prev connection, server is 14.103.49.141:8848, connectionId is 1713276777177_183.192.231.186_5608
2024-04-16 22:29:10 Close current connection 1713276777177_183.192.231.186_5608
2024-04-16 22:29:10 [1348947c-668f-4eff-89bc-785e92f141d0] Notify disconnected event to listeners
2024-04-16 22:29:10 Grpc connection disconnect, mark to redo
2024-04-16 22:29:10 mark to redo completed
2024-04-16 22:29:10 [1348947c-668f-4eff-89bc-785e92f141d0] Notify connected event to listeners.
2024-04-16 22:29:10 Grpc connection connect
2024-04-16 22:29:10 [1713276777177_183.192.231.186_5608]Ignore error event,isRunning:true,isAbandon=true
2024-04-16 22:29:13 Redo instance operation REGISTER for DEFAULT_GROUP@@service-cart
2024-04-16 22:45:28 [1348947c-668f-4eff-89bc-785e92f141d0] Server healthy check fail, currentConnection = 1713277750776_183.192.231.186_5208
2024-04-16 22:45:28 [1348947c-668f-4eff-89bc-785e92f141d0] Try to reconnect to a new server, server is  not appointed, will choose a random server.
2024-04-16 22:45:28 grpc client connection server:14.103.49.141 ip,serverPort:9848,grpcTslConfig:{"sslProvider":"","enableTls":false,"mutualAuthEnable":false,"trustAll":false}
2024-04-16 22:45:28 [1348947c-668f-4eff-89bc-785e92f141d0] Success to connect a server [14.103.49.141:8848], connectionId = 1713278728359_183.192.231.186_5171
2024-04-16 22:45:28 [1348947c-668f-4eff-89bc-785e92f141d0] Abandon prev connection, server is 14.103.49.141:8848, connectionId is 1713277750776_183.192.231.186_5208
2024-04-16 22:45:28 Close current connection 1713277750776_183.192.231.186_5208
2024-04-16 22:45:28 [1348947c-668f-4eff-89bc-785e92f141d0] Notify disconnected event to listeners
2024-04-16 22:45:28 [1713277750776_183.192.231.186_5208]Ignore error event,isRunning:true,isAbandon=true
2024-04-16 22:45:28 Grpc connection disconnect, mark to redo
2024-04-16 22:45:28 mark to redo completed
2024-04-16 22:45:28 [1348947c-668f-4eff-89bc-785e92f141d0] Notify connected event to listeners.
2024-04-16 22:45:28 Grpc connection connect
2024-04-16 22:45:28 Redo instance operation REGISTER for DEFAULT_GROUP@@service-cart
2024-04-16 23:01:41 [1348947c-668f-4eff-89bc-785e92f141d0] Server healthy check fail, currentConnection = 1713278728359_183.192.231.186_5171
2024-04-16 23:01:41 [1348947c-668f-4eff-89bc-785e92f141d0] Try to reconnect to a new server, server is  not appointed, will choose a random server.
2024-04-16 23:01:41 grpc client connection server:14.103.49.141 ip,serverPort:9848,grpcTslConfig:{"sslProvider":"","enableTls":false,"mutualAuthEnable":false,"trustAll":false}
2024-04-16 23:01:41 [1348947c-668f-4eff-89bc-785e92f141d0] Success to connect a server [14.103.49.141:8848], connectionId = 1713279701883_183.192.231.186_5123
2024-04-16 23:01:41 [1348947c-668f-4eff-89bc-785e92f141d0] Abandon prev connection, server is 14.103.49.141:8848, connectionId is 1713278728359_183.192.231.186_5171
2024-04-16 23:01:41 Close current connection 1713278728359_183.192.231.186_5171
2024-04-16 23:01:41 [1348947c-668f-4eff-89bc-785e92f141d0] Notify disconnected event to listeners
2024-04-16 23:01:41 Grpc connection disconnect, mark to redo
2024-04-16 23:01:41 mark to redo completed
2024-04-16 23:01:41 [1713278728359_183.192.231.186_5171]Ignore error event,isRunning:true,isAbandon=true
2024-04-16 23:01:41 [1348947c-668f-4eff-89bc-785e92f141d0] Notify connected event to listeners.
2024-04-16 23:01:41 Grpc connection connect
2024-04-16 23:01:44 Redo instance operation REGISTER for DEFAULT_GROUP@@service-cart
2024-04-16 23:14:10 [1348947c-668f-4eff-89bc-785e92f141d0] Server healthy check fail, currentConnection = 1713279701883_183.192.231.186_5123
2024-04-16 23:14:10 [1348947c-668f-4eff-89bc-785e92f141d0] Try to reconnect to a new server, server is  not appointed, will choose a random server.
2024-04-16 23:14:10 grpc client connection server:14.103.49.141 ip,serverPort:9848,grpcTslConfig:{"sslProvider":"","enableTls":false,"mutualAuthEnable":false,"trustAll":false}
2024-04-16 23:14:10 [1348947c-668f-4eff-89bc-785e92f141d0] Success to connect a server [14.103.49.141:8848], connectionId = 1713280450881_183.192.231.186_5542
2024-04-16 23:14:10 [1348947c-668f-4eff-89bc-785e92f141d0] Abandon prev connection, server is 14.103.49.141:8848, connectionId is 1713279701883_183.192.231.186_5123
2024-04-16 23:14:10 Close current connection 1713279701883_183.192.231.186_5123
2024-04-16 23:14:10 [1348947c-668f-4eff-89bc-785e92f141d0] Notify disconnected event to listeners
2024-04-16 23:14:10 Grpc connection disconnect, mark to redo
2024-04-16 23:14:10 [1713279701883_183.192.231.186_5123]Ignore error event,isRunning:true,isAbandon=true
2024-04-16 23:14:10 mark to redo completed
2024-04-16 23:14:10 [1348947c-668f-4eff-89bc-785e92f141d0] Notify connected event to listeners.
2024-04-16 23:14:10 Grpc connection connect
2024-04-16 23:14:11 Redo instance operation REGISTER for DEFAULT_GROUP@@service-cart
2024-04-16 23:27:40 [1348947c-668f-4eff-89bc-785e92f141d0] Server healthy check fail, currentConnection = 1713280450881_183.192.231.186_5542
2024-04-16 23:27:40 [1348947c-668f-4eff-89bc-785e92f141d0] Try to reconnect to a new server, server is  not appointed, will choose a random server.
2024-04-16 23:27:40 grpc client connection server:14.103.49.141 ip,serverPort:9848,grpcTslConfig:{"sslProvider":"","enableTls":false,"mutualAuthEnable":false,"trustAll":false}
2024-04-16 23:27:40 [1348947c-668f-4eff-89bc-785e92f141d0] Success to connect a server [14.103.49.141:8848], connectionId = 1713281260845_183.192.231.186_5266
2024-04-16 23:27:40 [1348947c-668f-4eff-89bc-785e92f141d0] Abandon prev connection, server is 14.103.49.141:8848, connectionId is 1713280450881_183.192.231.186_5542
2024-04-16 23:27:40 Close current connection 1713280450881_183.192.231.186_5542
2024-04-16 23:27:40 [1348947c-668f-4eff-89bc-785e92f141d0] Notify disconnected event to listeners
2024-04-16 23:27:40 Grpc connection disconnect, mark to redo
2024-04-16 23:27:40 mark to redo completed
2024-04-16 23:27:40 [1348947c-668f-4eff-89bc-785e92f141d0] Notify connected event to listeners.
2024-04-16 23:27:40 Grpc connection connect
2024-04-16 23:27:40 [1713280450881_183.192.231.186_5542]Ignore error event,isRunning:true,isAbandon=true
2024-04-16 23:27:41 Redo instance operation REGISTER for DEFAULT_GROUP@@service-cart
2024-04-17 00:23:13 Starting CartApplication using Java 17.0.5 with PID 47763 (/Users/yh/AndroidStudioProjects/spzx-parent/spzx-service/service-cart/build/classes/java/main started by yh in /Users/yh/AndroidStudioProjects/spzx-parent)
2024-04-17 00:23:13 The following 1 profile is active: "dev"
2024-04-17 00:23:14 Multiple Spring Data modules found, entering strict repository configuration mode
2024-04-17 00:23:14 Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2024-04-17 00:23:14 Finished Spring Data repository scanning in 6 ms. Found 0 Redis repository interfaces.
2024-04-17 00:23:15 BeanFactory id=a5d3380a-61ef-3701-8823-659dc43bef8d
2024-04-17 00:23:15 Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$DeferringLoadBalancerInterceptorConfig' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$DeferringLoadBalancerInterceptorConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [lbRestClientPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.
2024-04-17 00:23:15 Bean 'deferringLoadBalancerInterceptor' of type [org.springframework.cloud.client.loadbalancer.DeferringLoadBalancerInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-04-17 00:23:15 Tomcat initialized with port 8514 (http)
2024-04-17 00:23:15 Initializing ProtocolHandler ["http-nio-8514"]
2024-04-17 00:23:15 Starting service [Tomcat]
2024-04-17 00:23:15 Starting Servlet engine: [Apache Tomcat/10.1.19]
2024-04-17 00:23:15 Initializing Spring embedded WebApplicationContext
2024-04-17 00:23:15 Root WebApplicationContext: initialization completed in 1634 ms
2024-04-17 00:23:16 Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-04-17 00:23:16 Starting ProtocolHandler ["http-nio-8514"]
2024-04-17 00:23:16 Exception encountered during context initialization - cancelling refresh attempt: org.springframework.context.ApplicationContextException: Failed to start bean 'webServerStartStop'
2024-04-17 00:23:16 

Error starting ApplicationContext. To display the condition evaluation report re-run your application with 'debug' enabled.
2024-04-17 00:23:16 

***************************
APPLICATION FAILED TO START
***************************

Description:

Web server failed to start. Port 8514 was already in use.

Action:

Identify and stop the process that's listening on port 8514 or configure this application to listen on another port.

2024-04-17 00:25:20 Starting CartApplication using Java 17.0.5 with PID 47986 (/Users/yh/AndroidStudioProjects/spzx-parent/spzx-service/service-cart/build/classes/java/main started by yh in /Users/yh/AndroidStudioProjects/spzx-parent)
2024-04-17 00:25:20 The following 1 profile is active: "dev"
2024-04-17 00:25:22 Multiple Spring Data modules found, entering strict repository configuration mode
2024-04-17 00:25:22 Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2024-04-17 00:25:22 Finished Spring Data repository scanning in 11 ms. Found 0 Redis repository interfaces.
2024-04-17 00:25:22 BeanFactory id=a5d3380a-61ef-3701-8823-659dc43bef8d
2024-04-17 00:25:23 Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$DeferringLoadBalancerInterceptorConfig' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$DeferringLoadBalancerInterceptorConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [lbRestClientPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.
2024-04-17 00:25:23 Bean 'deferringLoadBalancerInterceptor' of type [org.springframework.cloud.client.loadbalancer.DeferringLoadBalancerInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-04-17 00:25:23 Tomcat initialized with port 8514 (http)
2024-04-17 00:25:23 Initializing ProtocolHandler ["http-nio-8514"]
2024-04-17 00:25:23 Starting service [Tomcat]
2024-04-17 00:25:23 Starting Servlet engine: [Apache Tomcat/10.1.19]
2024-04-17 00:25:23 Initializing Spring embedded WebApplicationContext
2024-04-17 00:25:23 Root WebApplicationContext: initialization completed in 2577 ms
2024-04-17 00:25:24 Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-04-17 00:25:24 Starting ProtocolHandler ["http-nio-8514"]
2024-04-17 00:25:24 Tomcat started on port 8514 (http) with context path ''
2024-04-17 00:25:24 initializer namespace from ans.namespace attribute : null
2024-04-17 00:25:24 initializer namespace from ALIBABA_ALIWARE_NAMESPACE attribute :null
2024-04-17 00:25:24 initializer namespace from namespace attribute :null
2024-04-17 00:25:24 [settings] [req-serv] nacos-server port:8848
2024-04-17 00:25:24 [settings] [http-client] connect timeout:1000
2024-04-17 00:25:24 PER_TASK_CONFIG_SIZE: 3000.0
2024-04-17 00:25:24 null No credential found
2024-04-17 00:25:24 [ClientAuthPluginManager] Load ClientAuthService com.alibaba.nacos.client.auth.impl.NacosClientAuthServiceImpl success.
2024-04-17 00:25:24 [ClientAuthPluginManager] Load ClientAuthService com.alibaba.nacos.client.auth.ram.RamClientAuthServiceImpl success.
2024-04-17 00:25:24 [RpcClientFactory] create a new rpc client of 0458f70f-f72a-413a-a93b-34cea965a5ca
2024-04-17 00:25:24 Create naming rpc client for uuid->0458f70f-f72a-413a-a93b-34cea965a5ca
2024-04-17 00:25:24 [0458f70f-f72a-413a-a93b-34cea965a5ca] RpcClient init, ServerListFactory = com.alibaba.nacos.client.naming.core.ServerListManager
2024-04-17 00:25:24 [0458f70f-f72a-413a-a93b-34cea965a5ca] Registry connection listener to current client:com.alibaba.nacos.client.naming.remote.gprc.redo.NamingGrpcRedoService
2024-04-17 00:25:24 [0458f70f-f72a-413a-a93b-34cea965a5ca] Register server push request handler:com.alibaba.nacos.client.naming.remote.gprc.NamingPushRequestHandler
2024-04-17 00:25:24 [0458f70f-f72a-413a-a93b-34cea965a5ca] Try to connect to server on start up, server: {serverIp = '14.103.49.141', server main port = 8848}
2024-04-17 00:25:24 grpc client connection server:14.103.49.141 ip,serverPort:9848,grpcTslConfig:{"sslProvider":"","enableTls":false,"mutualAuthEnable":false,"trustAll":false}
2024-04-17 00:25:25 Ready to get current node abilities...
2024-04-17 00:25:25 Ready to initialize current node abilities, support modes: [SDK_CLIENT]
2024-04-17 00:25:25 Initialize current abilities finish...
2024-04-17 00:25:25 [AbilityControlManager] Successfully initialize AbilityControlManager
2024-04-17 00:25:25 [0458f70f-f72a-413a-a93b-34cea965a5ca] Success to connect to server [14.103.49.141:8848] on start up, connectionId = 1713284725492_183.192.231.186_5576
2024-04-17 00:25:25 [0458f70f-f72a-413a-a93b-34cea965a5ca] Notify connected event to listeners.
2024-04-17 00:25:25 Grpc connection connect
2024-04-17 00:25:25 [0458f70f-f72a-413a-a93b-34cea965a5ca] Register server push request handler:com.alibaba.nacos.common.remote.client.RpcClient$ConnectResetRequestHandler
2024-04-17 00:25:25 [0458f70f-f72a-413a-a93b-34cea965a5ca] Register server push request handler:com.alibaba.nacos.common.remote.client.RpcClient$$Lambda$1246/0x000000080145a3d0
2024-04-17 00:25:25 [REGISTER-SERVICE] public registering service service-cart with instance Instance{instanceId='null', ip='192.168.1.8', port=8514, weight=1.0, healthy=true, enabled=true, ephemeral=true, clusterName='DEFAULT', serviceName='null', metadata={IPv6=null, preserved.register.source=SPRING_CLOUD}}
2024-04-17 00:25:25 nacos registry, DEFAULT_GROUP service-cart 192.168.1.8:8514 register finished
2024-04-17 00:25:25 Started CartApplication in 5.646 seconds (process running for 6.325)
2024-04-17 00:34:26 Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-04-17 00:34:26 Initializing Servlet 'dispatcherServlet'
2024-04-17 00:34:26 Completed initialization in 1 ms
2024-04-17 00:35:32 HikariPool-1 - Starting...
2024-04-17 00:35:32 HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@47ec9192
2024-04-17 00:35:32 HikariPool-1 - Start completed.
2024-04-17 00:35:43 Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: java.lang.NullPointerException: Cannot invoke "com.atguigu.spzx.model.entity.user.UserInfo.getId()" because the return value of "com.atguigu.xpzx.utils.AuthContextUtil.getUserInfo()" is null] with root cause
java.lang.NullPointerException: Cannot invoke "com.atguigu.spzx.model.entity.user.UserInfo.getId()" because the return value of "com.atguigu.xpzx.utils.AuthContextUtil.getUserInfo()" is null
	at com.atguigu.spzx.cart.service.impl.CartServiceImpl.getAllChecked(CartServiceImpl.java:169)
	at com.atguigu.spzx.cart.controller.CartController.getAllCkecked(CartController.java:79)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:925)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:830)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1744)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:833)
2024-04-17 00:43:44 [NotifyCenter] Start destroying Publisher
2024-04-17 00:43:44 [HttpClientBeanHolder] Start destroying common HttpClient
2024-04-17 00:43:44 [NotifyCenter] Destruction of the end
2024-04-17 00:43:44 [HttpClientBeanHolder] Destruction of the end
2024-04-17 00:44:09 Starting CartApplication using Java 17.0.5 with PID 49310 (/Users/yh/AndroidStudioProjects/spzx-parent/spzx-service/service-cart/build/classes/java/main started by yh in /Users/yh/AndroidStudioProjects/spzx-parent)
2024-04-17 00:44:09 The following 1 profile is active: "dev"
2024-04-17 00:44:10 Multiple Spring Data modules found, entering strict repository configuration mode
2024-04-17 00:44:10 Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2024-04-17 00:44:10 Finished Spring Data repository scanning in 8 ms. Found 0 Redis repository interfaces.
2024-04-17 00:44:10 BeanFactory id=a5d3380a-61ef-3701-8823-659dc43bef8d
2024-04-17 00:44:11 Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$DeferringLoadBalancerInterceptorConfig' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$DeferringLoadBalancerInterceptorConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [lbRestClientPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.
2024-04-17 00:44:11 Bean 'deferringLoadBalancerInterceptor' of type [org.springframework.cloud.client.loadbalancer.DeferringLoadBalancerInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-04-17 00:44:11 Tomcat initialized with port 8514 (http)
2024-04-17 00:44:11 Initializing ProtocolHandler ["http-nio-8514"]
2024-04-17 00:44:11 Starting service [Tomcat]
2024-04-17 00:44:11 Starting Servlet engine: [Apache Tomcat/10.1.19]
2024-04-17 00:44:11 Initializing Spring embedded WebApplicationContext
2024-04-17 00:44:11 Root WebApplicationContext: initialization completed in 2106 ms
2024-04-17 00:44:12 Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-04-17 00:44:12 Starting ProtocolHandler ["http-nio-8514"]
2024-04-17 00:44:12 Tomcat started on port 8514 (http) with context path ''
2024-04-17 00:44:12 initializer namespace from ans.namespace attribute : null
2024-04-17 00:44:12 initializer namespace from ALIBABA_ALIWARE_NAMESPACE attribute :null
2024-04-17 00:44:12 initializer namespace from namespace attribute :null
2024-04-17 00:44:12 [settings] [req-serv] nacos-server port:8848
2024-04-17 00:44:12 [settings] [http-client] connect timeout:1000
2024-04-17 00:44:12 null No credential found
2024-04-17 00:44:12 PER_TASK_CONFIG_SIZE: 3000.0
2024-04-17 00:44:12 [ClientAuthPluginManager] Load ClientAuthService com.alibaba.nacos.client.auth.impl.NacosClientAuthServiceImpl success.
2024-04-17 00:44:12 [ClientAuthPluginManager] Load ClientAuthService com.alibaba.nacos.client.auth.ram.RamClientAuthServiceImpl success.
2024-04-17 00:44:12 [RpcClientFactory] create a new rpc client of b038c265-ec7b-4cca-9e46-a8ad3dfbddb9
2024-04-17 00:44:12 Create naming rpc client for uuid->b038c265-ec7b-4cca-9e46-a8ad3dfbddb9
2024-04-17 00:44:12 [b038c265-ec7b-4cca-9e46-a8ad3dfbddb9] RpcClient init, ServerListFactory = com.alibaba.nacos.client.naming.core.ServerListManager
2024-04-17 00:44:12 [b038c265-ec7b-4cca-9e46-a8ad3dfbddb9] Registry connection listener to current client:com.alibaba.nacos.client.naming.remote.gprc.redo.NamingGrpcRedoService
2024-04-17 00:44:12 [b038c265-ec7b-4cca-9e46-a8ad3dfbddb9] Register server push request handler:com.alibaba.nacos.client.naming.remote.gprc.NamingPushRequestHandler
2024-04-17 00:44:12 [b038c265-ec7b-4cca-9e46-a8ad3dfbddb9] Try to connect to server on start up, server: {serverIp = '14.103.49.141', server main port = 8848}
2024-04-17 00:44:13 grpc client connection server:14.103.49.141 ip,serverPort:9848,grpcTslConfig:{"sslProvider":"","enableTls":false,"mutualAuthEnable":false,"trustAll":false}
2024-04-17 00:44:13 Ready to get current node abilities...
2024-04-17 00:44:13 Ready to initialize current node abilities, support modes: [SDK_CLIENT]
2024-04-17 00:44:13 Initialize current abilities finish...
2024-04-17 00:44:13 [AbilityControlManager] Successfully initialize AbilityControlManager
2024-04-17 00:44:13 [b038c265-ec7b-4cca-9e46-a8ad3dfbddb9] Success to connect to server [14.103.49.141:8848] on start up, connectionId = 1713285853498_183.192.231.186_5573
2024-04-17 00:44:13 [b038c265-ec7b-4cca-9e46-a8ad3dfbddb9] Notify connected event to listeners.
2024-04-17 00:44:13 Grpc connection connect
2024-04-17 00:44:13 [b038c265-ec7b-4cca-9e46-a8ad3dfbddb9] Register server push request handler:com.alibaba.nacos.common.remote.client.RpcClient$ConnectResetRequestHandler
2024-04-17 00:44:13 [b038c265-ec7b-4cca-9e46-a8ad3dfbddb9] Register server push request handler:com.alibaba.nacos.common.remote.client.RpcClient$$Lambda$1246/0x000000080145b630
2024-04-17 00:44:13 [REGISTER-SERVICE] public registering service service-cart with instance Instance{instanceId='null', ip='192.168.1.8', port=8514, weight=1.0, healthy=true, enabled=true, ephemeral=true, clusterName='DEFAULT', serviceName='null', metadata={IPv6=null, preserved.register.source=SPRING_CLOUD}}
2024-04-17 00:44:13 nacos registry, DEFAULT_GROUP service-cart 192.168.1.8:8514 register finished
2024-04-17 00:44:13 Started CartApplication in 5.076 seconds (process running for 5.888)
2024-04-17 00:44:34 Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-04-17 00:44:34 Initializing Servlet 'dispatcherServlet'
2024-04-17 00:44:34 Completed initialization in 1 ms
2024-04-17 00:52:14 Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: org.springframework.dao.QueryTimeoutException: Redis command timed out] with root cause
io.lettuce.core.RedisCommandTimeoutException: Command timed out after 20 second(s)
	at io.lettuce.core.internal.ExceptionFactory.createTimeoutException(ExceptionFactory.java:59)
	at io.lettuce.core.internal.Futures.awaitOrCancel(Futures.java:246)
	at io.lettuce.core.LettuceFutures.awaitOrCancel(LettuceFutures.java:74)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.await(LettuceConnection.java:1008)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.lambda$doInvoke$3(LettuceConnection.java:443)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$Synchronizer.invoke(LettuceInvoker.java:665)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker.just(LettuceInvoker.java:94)
	at org.springframework.data.redis.connection.lettuce.LettuceStringCommands.get(LettuceStringCommands.java:54)
	at org.springframework.data.redis.connection.DefaultedRedisConnection.get(DefaultedRedisConnection.java:284)
	at org.springframework.data.redis.connection.DefaultStringRedisConnection.get(DefaultStringRedisConnection.java:382)
	at org.springframework.data.redis.core.DefaultValueOperations$1.inRedis(DefaultValueOperations.java:54)
	at org.springframework.data.redis.core.AbstractOperations$ValueDeserializingRedisCallback.doInRedis(AbstractOperations.java:61)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:396)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:363)
	at org.springframework.data.redis.core.AbstractOperations.execute(AbstractOperations.java:97)
	at org.springframework.data.redis.core.DefaultValueOperations.get(DefaultValueOperations.java:50)
	at com.atguigu.spzx.common.interceptor.UserLoginAuthInterceptor.preHandle(UserLoginAuthInterceptor.java:27)
	at org.springframework.web.servlet.HandlerExecutionChain.applyPreHandle(HandlerExecutionChain.java:146)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1084)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1744)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:833)
2024-04-17 00:52:19 Reconnecting, last destination was /14.103.49.141:6379
2024-04-17 00:52:19 Reconnected to 14.103.49.141/<unresolved>:6379
2024-04-17 01:11:17 Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: org.springframework.data.redis.RedisSystemException: Redis exception] with root cause
java.io.IOException: Operation timed out
	at java.base/sun.nio.ch.SocketDispatcher.read0(Native Method)
	at java.base/sun.nio.ch.SocketDispatcher.read(SocketDispatcher.java:47)
	at java.base/sun.nio.ch.IOUtil.readIntoNativeBuffer(IOUtil.java:330)
	at java.base/sun.nio.ch.IOUtil.read(IOUtil.java:284)
	at java.base/sun.nio.ch.IOUtil.read(IOUtil.java:259)
	at java.base/sun.nio.ch.SocketChannelImpl.read(SocketChannelImpl.java:417)
	at io.netty.buffer.PooledByteBuf.setBytes(PooledByteBuf.java:255)
	at io.netty.buffer.AbstractByteBuf.writeBytes(AbstractByteBuf.java:1132)
	at io.netty.channel.socket.nio.NioSocketChannel.doReadBytes(NioSocketChannel.java:357)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:151)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:833)
2024-04-17 01:11:17 Reconnecting, last destination was /14.103.49.141:6379
2024-04-17 01:11:17 Reconnected to 14.103.49.141/<unresolved>:6379
2024-04-17 01:11:17 HikariPool-1 - Starting...
2024-04-17 01:11:17 HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@6c343844
2024-04-17 01:11:17 HikariPool-1 - Start completed.
2024-04-17 01:12:49 [NotifyCenter] Start destroying Publisher
2024-04-17 01:12:49 [HttpClientBeanHolder] Start destroying common HttpClient
2024-04-17 01:12:49 [NotifyCenter] Destruction of the end
2024-04-17 01:12:49 [HttpClientBeanHolder] Destruction of the end
2024-04-17 01:13:00 Starting CartApplication using Java 17.0.5 with PID 51054 (/Users/yh/AndroidStudioProjects/spzx-parent/spzx-service/service-cart/build/classes/java/main started by yh in /Users/yh/AndroidStudioProjects/spzx-parent)
2024-04-17 01:13:00 The following 1 profile is active: "dev"
2024-04-17 01:13:02 Multiple Spring Data modules found, entering strict repository configuration mode
2024-04-17 01:13:02 Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2024-04-17 01:13:02 Finished Spring Data repository scanning in 8 ms. Found 0 Redis repository interfaces.
2024-04-17 01:13:02 BeanFactory id=a5d3380a-61ef-3701-8823-659dc43bef8d
2024-04-17 01:13:02 Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$DeferringLoadBalancerInterceptorConfig' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$DeferringLoadBalancerInterceptorConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [lbRestClientPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.
2024-04-17 01:13:02 Bean 'deferringLoadBalancerInterceptor' of type [org.springframework.cloud.client.loadbalancer.DeferringLoadBalancerInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-04-17 01:13:02 Tomcat initialized with port 8514 (http)
2024-04-17 01:13:02 Initializing ProtocolHandler ["http-nio-8514"]
2024-04-17 01:13:02 Starting service [Tomcat]
2024-04-17 01:13:02 Starting Servlet engine: [Apache Tomcat/10.1.19]
2024-04-17 01:13:02 Initializing Spring embedded WebApplicationContext
2024-04-17 01:13:02 Root WebApplicationContext: initialization completed in 1976 ms
2024-04-17 01:13:04 Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-04-17 01:13:04 Starting ProtocolHandler ["http-nio-8514"]
2024-04-17 01:13:04 Tomcat started on port 8514 (http) with context path ''
2024-04-17 01:13:04 initializer namespace from ans.namespace attribute : null
2024-04-17 01:13:04 initializer namespace from ALIBABA_ALIWARE_NAMESPACE attribute :null
2024-04-17 01:13:04 initializer namespace from namespace attribute :null
2024-04-17 01:13:04 [settings] [req-serv] nacos-server port:8848
2024-04-17 01:13:04 [settings] [http-client] connect timeout:1000
2024-04-17 01:13:04 PER_TASK_CONFIG_SIZE: 3000.0
2024-04-17 01:13:04 null No credential found
2024-04-17 01:13:04 [ClientAuthPluginManager] Load ClientAuthService com.alibaba.nacos.client.auth.impl.NacosClientAuthServiceImpl success.
2024-04-17 01:13:04 [ClientAuthPluginManager] Load ClientAuthService com.alibaba.nacos.client.auth.ram.RamClientAuthServiceImpl success.
2024-04-17 01:13:04 [RpcClientFactory] create a new rpc client of 4b513dd2-767b-4fc4-b173-fa9be9c26e6e
2024-04-17 01:13:04 Create naming rpc client for uuid->4b513dd2-767b-4fc4-b173-fa9be9c26e6e
2024-04-17 01:13:04 [4b513dd2-767b-4fc4-b173-fa9be9c26e6e] RpcClient init, ServerListFactory = com.alibaba.nacos.client.naming.core.ServerListManager
2024-04-17 01:13:04 [4b513dd2-767b-4fc4-b173-fa9be9c26e6e] Registry connection listener to current client:com.alibaba.nacos.client.naming.remote.gprc.redo.NamingGrpcRedoService
2024-04-17 01:13:04 [4b513dd2-767b-4fc4-b173-fa9be9c26e6e] Register server push request handler:com.alibaba.nacos.client.naming.remote.gprc.NamingPushRequestHandler
2024-04-17 01:13:04 [4b513dd2-767b-4fc4-b173-fa9be9c26e6e] Try to connect to server on start up, server: {serverIp = '14.103.49.141', server main port = 8848}
2024-04-17 01:13:04 grpc client connection server:14.103.49.141 ip,serverPort:9848,grpcTslConfig:{"sslProvider":"","enableTls":false,"mutualAuthEnable":false,"trustAll":false}
2024-04-17 01:13:04 Ready to get current node abilities...
2024-04-17 01:13:04 Ready to initialize current node abilities, support modes: [SDK_CLIENT]
2024-04-17 01:13:04 Initialize current abilities finish...
2024-04-17 01:13:04 [AbilityControlManager] Successfully initialize AbilityControlManager
2024-04-17 01:13:04 [4b513dd2-767b-4fc4-b173-fa9be9c26e6e] Success to connect to server [14.103.49.141:8848] on start up, connectionId = 1713287584729_183.192.231.186_5422
2024-04-17 01:13:04 [4b513dd2-767b-4fc4-b173-fa9be9c26e6e] Notify connected event to listeners.
2024-04-17 01:13:04 Grpc connection connect
2024-04-17 01:13:04 [4b513dd2-767b-4fc4-b173-fa9be9c26e6e] Register server push request handler:com.alibaba.nacos.common.remote.client.RpcClient$ConnectResetRequestHandler
2024-04-17 01:13:04 [4b513dd2-767b-4fc4-b173-fa9be9c26e6e] Register server push request handler:com.alibaba.nacos.common.remote.client.RpcClient$$Lambda$1246/0x0000000801459278
2024-04-17 01:13:04 [REGISTER-SERVICE] public registering service service-cart with instance Instance{instanceId='null', ip='192.168.1.8', port=8514, weight=1.0, healthy=true, enabled=true, ephemeral=true, clusterName='DEFAULT', serviceName='null', metadata={IPv6=null, preserved.register.source=SPRING_CLOUD}}
2024-04-17 01:13:04 nacos registry, DEFAULT_GROUP service-cart 192.168.1.8:8514 register finished
2024-04-17 01:13:04 Started CartApplication in 4.83 seconds (process running for 5.64)
2024-04-17 01:13:16 Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-04-17 01:13:16 Initializing Servlet 'dispatcherServlet'
2024-04-17 01:13:16 Completed initialization in 1 ms
2024-04-17 01:13:31 HikariPool-1 - Starting...
2024-04-17 01:13:31 HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@54caef50
2024-04-17 01:13:31 HikariPool-1 - Start completed.
2024-04-17 01:17:44 [NotifyCenter] Start destroying Publisher
2024-04-17 01:17:44 [HttpClientBeanHolder] Start destroying common HttpClient
2024-04-17 01:17:44 [NotifyCenter] Destruction of the end
2024-04-17 01:17:44 [HttpClientBeanHolder] Destruction of the end
2024-04-17 09:48:31 Starting CartApplication using Java 17.0.5 with PID 52967 (/Users/yh/AndroidStudioProjects/spzx-parent/spzx-service/service-cart/build/classes/java/main started by yh in /Users/yh/AndroidStudioProjects/spzx-parent)
2024-04-17 09:48:31 The following 1 profile is active: "dev"
2024-04-17 09:48:32 Multiple Spring Data modules found, entering strict repository configuration mode
2024-04-17 09:48:32 Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2024-04-17 09:48:32 Finished Spring Data repository scanning in 8 ms. Found 0 Redis repository interfaces.
2024-04-17 09:48:32 BeanFactory id=a5d3380a-61ef-3701-8823-659dc43bef8d
2024-04-17 09:48:32 Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$DeferringLoadBalancerInterceptorConfig' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$DeferringLoadBalancerInterceptorConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [lbRestClientPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.
2024-04-17 09:48:32 Bean 'deferringLoadBalancerInterceptor' of type [org.springframework.cloud.client.loadbalancer.DeferringLoadBalancerInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-04-17 09:48:33 Tomcat initialized with port 8514 (http)
2024-04-17 09:48:33 Initializing ProtocolHandler ["http-nio-8514"]
2024-04-17 09:48:33 Starting service [Tomcat]
2024-04-17 09:48:33 Starting Servlet engine: [Apache Tomcat/10.1.19]
2024-04-17 09:48:33 Initializing Spring embedded WebApplicationContext
2024-04-17 09:48:33 Root WebApplicationContext: initialization completed in 1967 ms
2024-04-17 09:48:34 Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-04-17 09:48:34 Starting ProtocolHandler ["http-nio-8514"]
2024-04-17 09:48:34 Tomcat started on port 8514 (http) with context path ''
2024-04-17 09:48:34 initializer namespace from ans.namespace attribute : null
2024-04-17 09:48:34 initializer namespace from ALIBABA_ALIWARE_NAMESPACE attribute :null
2024-04-17 09:48:34 initializer namespace from namespace attribute :null
2024-04-17 09:48:34 [settings] [req-serv] nacos-server port:8848
2024-04-17 09:48:34 [settings] [http-client] connect timeout:1000
2024-04-17 09:48:34 PER_TASK_CONFIG_SIZE: 3000.0
2024-04-17 09:48:34 [ClientAuthPluginManager] Load ClientAuthService com.alibaba.nacos.client.auth.impl.NacosClientAuthServiceImpl success.
2024-04-17 09:48:34 [ClientAuthPluginManager] Load ClientAuthService com.alibaba.nacos.client.auth.ram.RamClientAuthServiceImpl success.
2024-04-17 09:48:34 null No credential found
2024-04-17 09:48:34 [RpcClientFactory] create a new rpc client of 4c3b9104-1e34-4067-947d-acc14ce06884
2024-04-17 09:48:34 Create naming rpc client for uuid->4c3b9104-1e34-4067-947d-acc14ce06884
2024-04-17 09:48:34 [4c3b9104-1e34-4067-947d-acc14ce06884] RpcClient init, ServerListFactory = com.alibaba.nacos.client.naming.core.ServerListManager
2024-04-17 09:48:34 [4c3b9104-1e34-4067-947d-acc14ce06884] Registry connection listener to current client:com.alibaba.nacos.client.naming.remote.gprc.redo.NamingGrpcRedoService
2024-04-17 09:48:34 [4c3b9104-1e34-4067-947d-acc14ce06884] Register server push request handler:com.alibaba.nacos.client.naming.remote.gprc.NamingPushRequestHandler
2024-04-17 09:48:34 [4c3b9104-1e34-4067-947d-acc14ce06884] Try to connect to server on start up, server: {serverIp = '14.103.49.141', server main port = 8848}
2024-04-17 09:48:34 grpc client connection server:14.103.49.141 ip,serverPort:9848,grpcTslConfig:{"sslProvider":"","enableTls":false,"mutualAuthEnable":false,"trustAll":false}
2024-04-17 09:48:35 Ready to get current node abilities...
2024-04-17 09:48:35 Ready to initialize current node abilities, support modes: [SDK_CLIENT]
2024-04-17 09:48:35 Initialize current abilities finish...
2024-04-17 09:48:35 [AbilityControlManager] Successfully initialize AbilityControlManager
2024-04-17 09:48:35 [4c3b9104-1e34-4067-947d-acc14ce06884] Success to connect to server [14.103.49.141:8848] on start up, connectionId = 1713318515057_183.192.231.186_5355
2024-04-17 09:48:35 [4c3b9104-1e34-4067-947d-acc14ce06884] Notify connected event to listeners.
2024-04-17 09:48:35 Grpc connection connect
2024-04-17 09:48:35 [4c3b9104-1e34-4067-947d-acc14ce06884] Register server push request handler:com.alibaba.nacos.common.remote.client.RpcClient$ConnectResetRequestHandler
2024-04-17 09:48:35 [4c3b9104-1e34-4067-947d-acc14ce06884] Register server push request handler:com.alibaba.nacos.common.remote.client.RpcClient$$Lambda$1246/0x000000080145d7d8
2024-04-17 09:48:35 [REGISTER-SERVICE] public registering service service-cart with instance Instance{instanceId='null', ip='192.168.1.8', port=8514, weight=1.0, healthy=true, enabled=true, ephemeral=true, clusterName='DEFAULT', serviceName='null', metadata={IPv6=null, preserved.register.source=SPRING_CLOUD}}
2024-04-17 09:48:35 nacos registry, DEFAULT_GROUP service-cart 192.168.1.8:8514 register finished
2024-04-17 09:48:35 Started CartApplication in 4.851 seconds (process running for 5.581)
2024-04-17 09:50:14 Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-04-17 09:50:14 Initializing Servlet 'dispatcherServlet'
2024-04-17 09:50:14 Completed initialization in 1 ms
2024-04-17 09:50:15 HikariPool-1 - Starting...
2024-04-17 09:50:15 HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@652097db
2024-04-17 09:50:15 HikariPool-1 - Start completed.
2024-04-17 09:59:26 Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: org.springframework.data.redis.RedisSystemException: Redis exception] with root cause
java.io.IOException: Operation timed out
	at java.base/sun.nio.ch.SocketDispatcher.read0(Native Method)
	at java.base/sun.nio.ch.SocketDispatcher.read(SocketDispatcher.java:47)
	at java.base/sun.nio.ch.IOUtil.readIntoNativeBuffer(IOUtil.java:330)
	at java.base/sun.nio.ch.IOUtil.read(IOUtil.java:284)
	at java.base/sun.nio.ch.IOUtil.read(IOUtil.java:259)
	at java.base/sun.nio.ch.SocketChannelImpl.read(SocketChannelImpl.java:417)
	at io.netty.buffer.PooledByteBuf.setBytes(PooledByteBuf.java:255)
	at io.netty.buffer.AbstractByteBuf.writeBytes(AbstractByteBuf.java:1132)
	at io.netty.channel.socket.nio.NioSocketChannel.doReadBytes(NioSocketChannel.java:357)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:151)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:833)
2024-04-17 09:59:27 Reconnecting, last destination was /14.103.49.141:6379
2024-04-17 09:59:27 Reconnected to 14.103.49.141/<unresolved>:6379
2024-04-17 10:37:38 [NotifyCenter] Start destroying Publisher
2024-04-17 10:37:38 [HttpClientBeanHolder] Start destroying common HttpClient
2024-04-17 10:37:38 [NotifyCenter] Destruction of the end
2024-04-17 10:37:38 [HttpClientBeanHolder] Destruction of the end
2024-04-17 10:37:55 Starting CartApplication using Java 17.0.5 with PID 56149 (/Users/yh/AndroidStudioProjects/spzx-parent/spzx-service/service-cart/build/classes/java/main started by yh in /Users/yh/AndroidStudioProjects/spzx-parent)
2024-04-17 10:37:55 The following 1 profile is active: "dev"
2024-04-17 10:37:57 Multiple Spring Data modules found, entering strict repository configuration mode
2024-04-17 10:37:57 Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2024-04-17 10:37:57 Finished Spring Data repository scanning in 8 ms. Found 0 Redis repository interfaces.
2024-04-17 10:37:57 BeanFactory id=a5d3380a-61ef-3701-8823-659dc43bef8d
2024-04-17 10:37:57 Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$DeferringLoadBalancerInterceptorConfig' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$DeferringLoadBalancerInterceptorConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [lbRestClientPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.
2024-04-17 10:37:57 Bean 'deferringLoadBalancerInterceptor' of type [org.springframework.cloud.client.loadbalancer.DeferringLoadBalancerInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-04-17 10:37:57 Tomcat initialized with port 8514 (http)
2024-04-17 10:37:57 Initializing ProtocolHandler ["http-nio-8514"]
2024-04-17 10:37:57 Starting service [Tomcat]
2024-04-17 10:37:57 Starting Servlet engine: [Apache Tomcat/10.1.19]
2024-04-17 10:37:58 Initializing Spring embedded WebApplicationContext
2024-04-17 10:37:58 Root WebApplicationContext: initialization completed in 2326 ms
2024-04-17 10:37:59 Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-04-17 10:37:59 Starting ProtocolHandler ["http-nio-8514"]
2024-04-17 10:37:59 Tomcat started on port 8514 (http) with context path ''
2024-04-17 10:37:59 initializer namespace from ans.namespace attribute : null
2024-04-17 10:37:59 initializer namespace from ALIBABA_ALIWARE_NAMESPACE attribute :null
2024-04-17 10:37:59 initializer namespace from namespace attribute :null
2024-04-17 10:37:59 [settings] [req-serv] nacos-server port:8848
2024-04-17 10:37:59 [settings] [http-client] connect timeout:1000
2024-04-17 10:37:59 PER_TASK_CONFIG_SIZE: 3000.0
2024-04-17 10:37:59 [ClientAuthPluginManager] Load ClientAuthService com.alibaba.nacos.client.auth.impl.NacosClientAuthServiceImpl success.
2024-04-17 10:37:59 [ClientAuthPluginManager] Load ClientAuthService com.alibaba.nacos.client.auth.ram.RamClientAuthServiceImpl success.
2024-04-17 10:37:59 null No credential found
2024-04-17 10:37:59 [RpcClientFactory] create a new rpc client of 9dcdac86-817f-4348-ae8b-e1daa8689a08
2024-04-17 10:37:59 Create naming rpc client for uuid->9dcdac86-817f-4348-ae8b-e1daa8689a08
2024-04-17 10:37:59 [9dcdac86-817f-4348-ae8b-e1daa8689a08] RpcClient init, ServerListFactory = com.alibaba.nacos.client.naming.core.ServerListManager
2024-04-17 10:37:59 [9dcdac86-817f-4348-ae8b-e1daa8689a08] Registry connection listener to current client:com.alibaba.nacos.client.naming.remote.gprc.redo.NamingGrpcRedoService
2024-04-17 10:37:59 [9dcdac86-817f-4348-ae8b-e1daa8689a08] Register server push request handler:com.alibaba.nacos.client.naming.remote.gprc.NamingPushRequestHandler
2024-04-17 10:37:59 [9dcdac86-817f-4348-ae8b-e1daa8689a08] Try to connect to server on start up, server: {serverIp = '14.103.49.141', server main port = 8848}
2024-04-17 10:37:59 grpc client connection server:14.103.49.141 ip,serverPort:9848,grpcTslConfig:{"sslProvider":"","enableTls":false,"mutualAuthEnable":false,"trustAll":false}
2024-04-17 10:38:00 Ready to get current node abilities...
2024-04-17 10:38:00 Ready to initialize current node abilities, support modes: [SDK_CLIENT]
2024-04-17 10:38:00 Initialize current abilities finish...
2024-04-17 10:38:00 [AbilityControlManager] Successfully initialize AbilityControlManager
2024-04-17 10:38:00 [9dcdac86-817f-4348-ae8b-e1daa8689a08] Success to connect to server [14.103.49.141:8848] on start up, connectionId = 1713321480069_183.192.231.186_5285
2024-04-17 10:38:00 [9dcdac86-817f-4348-ae8b-e1daa8689a08] Notify connected event to listeners.
2024-04-17 10:38:00 Grpc connection connect
2024-04-17 10:38:00 [9dcdac86-817f-4348-ae8b-e1daa8689a08] Register server push request handler:com.alibaba.nacos.common.remote.client.RpcClient$ConnectResetRequestHandler
2024-04-17 10:38:00 [9dcdac86-817f-4348-ae8b-e1daa8689a08] Register server push request handler:com.alibaba.nacos.common.remote.client.RpcClient$$Lambda$1246/0x000000080143bda0
2024-04-17 10:38:00 [REGISTER-SERVICE] public registering service service-cart with instance Instance{instanceId='null', ip='192.168.1.8', port=8514, weight=1.0, healthy=true, enabled=true, ephemeral=true, clusterName='DEFAULT', serviceName='null', metadata={IPv6=null, preserved.register.source=SPRING_CLOUD}}
2024-04-17 10:38:00 nacos registry, DEFAULT_GROUP service-cart 192.168.1.8:8514 register finished
2024-04-17 10:38:00 Started CartApplication in 5.41 seconds (process running for 6.214)
2024-04-17 10:42:32 Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-04-17 10:42:32 Initializing Servlet 'dispatcherServlet'
2024-04-17 10:42:32 Completed initialization in 1 ms
2024-04-17 10:43:08 [HttpClientBeanHolder] Start destroying common HttpClient
2024-04-17 10:43:08 [NotifyCenter] Start destroying Publisher
2024-04-17 10:43:08 [NotifyCenter] Destruction of the end
2024-04-17 10:43:08 [HttpClientBeanHolder] Destruction of the end
2024-04-17 10:43:19 Starting CartApplication using Java 17.0.5 with PID 56598 (/Users/yh/AndroidStudioProjects/spzx-parent/spzx-service/service-cart/build/classes/java/main started by yh in /Users/yh/AndroidStudioProjects/spzx-parent)
2024-04-17 10:43:19 The following 1 profile is active: "dev"
2024-04-17 10:43:20 Multiple Spring Data modules found, entering strict repository configuration mode
2024-04-17 10:43:20 Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2024-04-17 10:43:20 Finished Spring Data repository scanning in 9 ms. Found 0 Redis repository interfaces.
2024-04-17 10:43:20 BeanFactory id=a5d3380a-61ef-3701-8823-659dc43bef8d
2024-04-17 10:43:20 Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$DeferringLoadBalancerInterceptorConfig' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$DeferringLoadBalancerInterceptorConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [lbRestClientPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.
2024-04-17 10:43:20 Bean 'deferringLoadBalancerInterceptor' of type [org.springframework.cloud.client.loadbalancer.DeferringLoadBalancerInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-04-17 10:43:21 Tomcat initialized with port 8514 (http)
2024-04-17 10:43:21 Initializing ProtocolHandler ["http-nio-8514"]
2024-04-17 10:43:21 Starting service [Tomcat]
2024-04-17 10:43:21 Starting Servlet engine: [Apache Tomcat/10.1.19]
2024-04-17 10:43:21 Initializing Spring embedded WebApplicationContext
2024-04-17 10:43:21 Root WebApplicationContext: initialization completed in 2217 ms
2024-04-17 10:43:22 Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-04-17 10:43:22 Starting ProtocolHandler ["http-nio-8514"]
2024-04-17 10:43:22 Tomcat started on port 8514 (http) with context path ''
2024-04-17 10:43:22 initializer namespace from ans.namespace attribute : null
2024-04-17 10:43:22 initializer namespace from ALIBABA_ALIWARE_NAMESPACE attribute :null
2024-04-17 10:43:22 initializer namespace from namespace attribute :null
2024-04-17 10:43:22 [settings] [req-serv] nacos-server port:8848
2024-04-17 10:43:22 [settings] [http-client] connect timeout:1000
2024-04-17 10:43:22 PER_TASK_CONFIG_SIZE: 3000.0
2024-04-17 10:43:22 [ClientAuthPluginManager] Load ClientAuthService com.alibaba.nacos.client.auth.impl.NacosClientAuthServiceImpl success.
2024-04-17 10:43:22 [ClientAuthPluginManager] Load ClientAuthService com.alibaba.nacos.client.auth.ram.RamClientAuthServiceImpl success.
2024-04-17 10:43:22 null No credential found
2024-04-17 10:43:22 [RpcClientFactory] create a new rpc client of 0f0c740a-8e4f-4539-8b66-a9c20bfac648
2024-04-17 10:43:22 Create naming rpc client for uuid->0f0c740a-8e4f-4539-8b66-a9c20bfac648
2024-04-17 10:43:22 [0f0c740a-8e4f-4539-8b66-a9c20bfac648] RpcClient init, ServerListFactory = com.alibaba.nacos.client.naming.core.ServerListManager
2024-04-17 10:43:22 [0f0c740a-8e4f-4539-8b66-a9c20bfac648] Registry connection listener to current client:com.alibaba.nacos.client.naming.remote.gprc.redo.NamingGrpcRedoService
2024-04-17 10:43:22 [0f0c740a-8e4f-4539-8b66-a9c20bfac648] Register server push request handler:com.alibaba.nacos.client.naming.remote.gprc.NamingPushRequestHandler
2024-04-17 10:43:22 [0f0c740a-8e4f-4539-8b66-a9c20bfac648] Try to connect to server on start up, server: {serverIp = '14.103.49.141', server main port = 8848}
2024-04-17 10:43:22 grpc client connection server:14.103.49.141 ip,serverPort:9848,grpcTslConfig:{"sslProvider":"","enableTls":false,"mutualAuthEnable":false,"trustAll":false}
2024-04-17 10:43:23 Ready to get current node abilities...
2024-04-17 10:43:23 Ready to initialize current node abilities, support modes: [SDK_CLIENT]
2024-04-17 10:43:23 Initialize current abilities finish...
2024-04-17 10:43:23 [AbilityControlManager] Successfully initialize AbilityControlManager
2024-04-17 10:43:23 [0f0c740a-8e4f-4539-8b66-a9c20bfac648] Success to connect to server [14.103.49.141:8848] on start up, connectionId = 1713321803390_183.192.231.186_5126
2024-04-17 10:43:23 [0f0c740a-8e4f-4539-8b66-a9c20bfac648] Notify connected event to listeners.
2024-04-17 10:43:23 [0f0c740a-8e4f-4539-8b66-a9c20bfac648] Register server push request handler:com.alibaba.nacos.common.remote.client.RpcClient$ConnectResetRequestHandler
2024-04-17 10:43:23 Grpc connection connect
2024-04-17 10:43:23 [0f0c740a-8e4f-4539-8b66-a9c20bfac648] Register server push request handler:com.alibaba.nacos.common.remote.client.RpcClient$$Lambda$1246/0x0000000801438878
2024-04-17 10:43:23 [REGISTER-SERVICE] public registering service service-cart with instance Instance{instanceId='null', ip='192.168.1.8', port=8514, weight=1.0, healthy=true, enabled=true, ephemeral=true, clusterName='DEFAULT', serviceName='null', metadata={IPv6=null, preserved.register.source=SPRING_CLOUD}}
2024-04-17 10:43:23 nacos registry, DEFAULT_GROUP service-cart 192.168.1.8:8514 register finished
2024-04-17 10:43:23 Started CartApplication in 5.394 seconds (process running for 6.147)
2024-04-17 11:46:40 [0f0c740a-8e4f-4539-8b66-a9c20bfac648] Server healthy check fail, currentConnection = 1713321803390_183.192.231.186_5126
2024-04-17 11:46:40 [0f0c740a-8e4f-4539-8b66-a9c20bfac648] Try to reconnect to a new server, server is  not appointed, will choose a random server.
2024-04-17 11:46:40 grpc client connection server:14.103.49.141 ip,serverPort:9848,grpcTslConfig:{"sslProvider":"","enableTls":false,"mutualAuthEnable":false,"trustAll":false}
2024-04-17 11:46:40 [0f0c740a-8e4f-4539-8b66-a9c20bfac648] Success to connect a server [14.103.49.141:8848], connectionId = 1713325600714_183.192.231.186_5536
2024-04-17 11:46:40 [0f0c740a-8e4f-4539-8b66-a9c20bfac648] Abandon prev connection, server is 14.103.49.141:8848, connectionId is 1713321803390_183.192.231.186_5126
2024-04-17 11:46:40 Close current connection 1713321803390_183.192.231.186_5126
2024-04-17 11:46:40 [1713321803390_183.192.231.186_5126]Ignore error event,isRunning:false,isAbandon=true
2024-04-17 11:46:40 [0f0c740a-8e4f-4539-8b66-a9c20bfac648] Notify disconnected event to listeners
2024-04-17 11:46:40 Grpc connection disconnect, mark to redo
2024-04-17 11:46:40 mark to redo completed
2024-04-17 11:46:40 [0f0c740a-8e4f-4539-8b66-a9c20bfac648] Notify connected event to listeners.
2024-04-17 11:46:40 Grpc connection connect
2024-04-17 11:46:43 Redo instance operation REGISTER for DEFAULT_GROUP@@service-cart
2024-04-17 12:09:24 [NotifyCenter] Start destroying Publisher
2024-04-17 12:09:24 [HttpClientBeanHolder] Start destroying common HttpClient
2024-04-17 12:09:24 [NotifyCenter] Destruction of the end
2024-04-17 12:09:24 [HttpClientBeanHolder] Destruction of the end
