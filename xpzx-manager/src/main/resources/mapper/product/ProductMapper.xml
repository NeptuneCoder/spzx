<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.travel.spzx.manager.mapper.ProductMapper">
    <resultMap id="productMap" type="com.travel.spzx.model.entity.product.Product" autoMapping="true"></resultMap>

    <!-- 用于select查询公用抽取的列 -->
    <sql id="columns">
        id
        ,name,
            brand_id,
            category1_id,
            category2_id,
            category3_id,
            unit_name,
            slider_urls,
            spec_value,
            status,
            audit_status,
            audit_message,
            create_time,
            update_time,
            is_deleted,
            recommend_level,

    </sql>


    <sql id="findPageWhere">
        <where>
            <if test="brandId != null and brandId != ''">
                and p.brand_id = #{brandId}
            </if>
            <if test="category1Id != null and category1Id != ''">
                and p.category1_id = #{category1Id}
            </if>
            <if test="category2Id != null and category2Id != ''">
                and p.category2_id = #{category2Id}
            </if>
            <if test="category3Id != null and category3Id != ''">
                and p.category3_id = #{category3Id}
            </if>
            and p.is_deleted = 0
        </where>
    </sql>
    <!--修改产品信息-->
    <update id="updateById">
        update product set
        <if test="name != null and name != ''">
            name = #{name},
        </if>
        <if test="brandId != null and brandId != ''">
            brand_id = #{brandId},
        </if>
        <if test="category1Id != null and category1Id != ''">
            category1_id = #{category1Id},
        </if>
        <if test="category2Id != null and category2Id != ''">
            category2_id = #{category2Id},
        </if>
        <if test="category3Id != null and category3Id != ''">
            category3_id = #{category3Id},
        </if>
        <if test="unitName != null and unitName != ''">
            unit_name = #{unitName},
        </if>
        <if test="sliderUrls != null and sliderUrls != ''">
            slider_urls = #{sliderUrls},
        </if>
        <if test="specValue != null and specValue != ''">
            spec_value = #{specValue},
        </if>
        <if test="status != null and status != ''">
            status = #{status},
        </if>
        <if test="auditStatus != null and auditStatus != ''">
            audit_status = #{auditStatus},
        </if>
        <if test="auditMessage != null and auditMessage != ''">
            audit_message = #{auditMessage},
        </if>
        <if test="recommendLevel != null and recommendLevel != ''">
            recommend_level = #{recommendLevel},
        </if>
        <if test="placeToStartId != null and placeToStartId != ''">
            place_to_start_id = #{placeToStartId},
        </if>
        <if test="feature != null and feature != ''">
            feature = #{feature},
        </if>
        <if test="description != null and description != ''">
            description = #{description},
        </if>
            <if test="assembleTime != null and assembleTime != ''">
            assemble_time = #{assembleTime},
        </if>
        update_time = now()
        where
        id = #{id}
    </update>
    <update id="deleteById">
        update product
        set update_time = now(),
            is_deleted  = 1
        where id = #{id}
    </update>


    <select id="findByPage" resultMap="productMap">
        select
        p.id,
        p.name ,
        p.brand_id ,
        p.category1_id ,
        p.category2_id ,
        p.category3_id,
        p.unit_name,
        p.slider_urls ,
        p.spec_value ,
        p.status ,
        p.audit_status ,
        p.audit_message ,
        p.create_time ,
        p.update_time ,
        p.is_deleted ,
        p.feature,
        p.description,
        p.assemble_time,
        b.name brandName ,
        c1.name category1Name ,
        c2.name category2Name ,
        c3.name category3Name,
        p.recommend_level,
        ci.city_name startCityName,
        ali.address startAddress,
        ali.id placeToStartId

        from product p
        LEFT JOIN brand b on b.id = p.brand_id
        LEFT JOIN category c1 on c1.id = p.category1_id
        LEFT JOIN category c2 on c2.id = p.category2_id
        LEFT JOIN category c3 on c3.id = p.category3_id
        LEFT JOIN assemble_location_info ali on ali.id = p.place_to_start_id
        LEFT JOIN city_info ci on ci.id = ali.city_id
        <include refid="findPageWhere"/>
        order by id desc
    </select>


    <insert id="save"
            useGeneratedKeys="true"
            keyProperty="id"
            parameterType="com.travel.spzx.model.entity.product.Product"
    >
        insert into product (id,
                             name,
                             brand_id,
                             category1_id,
                             category2_id,
                             category3_id,
                             unit_name,
                             slider_urls,
                             spec_value,
                             status,
                             audit_status,
                             audit_message,
                             create_time,
                             update_time,
                             is_deleted,
                             recommend_level,
                             place_to_start_id,
                             feature,
                             description,
                             assemble_time)
        values (#{id},
                #{name},
                #{brandId},
                #{category1Id},
                #{category2Id},
                #{category3Id},
                #{unitName},
                #{sliderUrls},
                #{specValue},
                #{status},
                #{auditStatus},
                #{auditMessage},
                now(),
                now(),
                0,
                #{recommendLevel},
                #{placeToStartId},
                #{feature},
                #{description},
                #{assembleTime})

    </insert>

    <select id="selectById" resultType="com.travel.spzx.model.entity.product.Product">
        select p.id,
               p.name,
               p.brand_id,
               p.category1_id,
               p.category2_id,
               p.category3_id,
               p.unit_name,
               p.slider_urls,
               p.spec_value,
               p.status,
               p.audit_status,
               p.audit_message,
               p.create_time,
               p.update_time,
               p.is_deleted,
               p.feature,
               p.description,
               p.assemble_time,
               b.name  brandName,
               c1.name category1Name,
               c2.name category2Name,
               c2.name category3Name,
               p.recommend_level,
               ci.city_name startCityName,
               ali.address startAddress,
               ali.id placeToStartId

        from product p
                 LEFT JOIN brand b on b.id = p.brand_id
                 LEFT JOIN category c1 on c1.id = p.category1_id
                 LEFT JOIN category c2 on c2.id = p.category2_id
                 LEFT JOIN category c3 on c3.id = p.category3_id
                 LEFT JOIN assemble_location_info ali on ali.id = p.place_to_start_id
                 LEFT JOIN city_info ci on ci.id = ali.city_id
        where p.id = #{id}
    </select>
</mapper>